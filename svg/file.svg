<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="800" height="1622" onload="init(evt)" viewBox="0 0 800 1622" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="800.0" height="1622.0" fill="url(#background)"  />
<text id="title" x="400.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1605" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="690.00" y="24" >Search</text>
<text id="ignorecase" x="774.00" y="24" >ic</text>
<text id="matched" x="690.00" y="1605" > </text>
<g id="frames">
<g >
<title>boost::asio::detail::socket_ops::non_blocking_send(int, iovec const*, unsigned long, int, boost::system::error_code&amp;, unsigned long&amp;) (4 samples, 1.56%)</title><rect x="653.4" y="437" width="12.2" height="15.0" fill="rgb(242,151,41)" rx="2" ry="2" />
<text  x="656.42" y="447.5" ></text>
</g>
<g >
<title>websocketpp::http::parser::parser::process_header(__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;) (3 samples, 1.17%)</title><rect x="668.6" y="693" width="9.1" height="15.0" fill="rgb(239,141,38)" rx="2" ry="2" />
<text  x="671.60" y="703.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::process_handshake_request() (1 samples, 0.39%)</title><rect x="91.9" y="677" width="3.1" height="15.0" fill="rgb(239,141,38)" rx="2" ry="2" />
<text  x="94.95" y="687.5" ></text>
</g>
<g >
<title>auto boost::asio::async_write&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;&amp;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; const&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, std::enable_if&lt;boost::asio::is_const_buffer_sequence&lt;std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;::value, void&gt;::type*) (7 samples, 2.72%)</title><rect x="644.3" y="677" width="21.3" height="15.0" fill="rgb(239,112,38)" rx="2" ry="2" />
<text  x="647.32" y="687.5" >a..</text>
</g>
<g >
<title>boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::~basic_socket() (3 samples, 1.17%)</title><rect x="747.5" y="597" width="9.1" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="750.51" y="607.5" ></text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, ...) (21 samples, 8.17%)</title><rect x="680.7" y="1157" width="63.8" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="683.74" y="1167.5" >void bo..</text>
</g>
<g >
<title>std::ostream::sentry::sentry(std::ostream&amp;) (1 samples, 0.39%)</title><rect x="774.8" y="1493" width="3.1" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="777.82" y="1503.5" ></text>
</g>
<g >
<title>auto boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::async_read_some&lt;boost::asio::mutable_buffers_1, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt; &gt;(boost::asio::mutable_buffers_1 const&amp;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;) (3 samples, 1.17%)</title><rect x="55.5" y="197" width="9.1" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="58.53" y="207.5" ></text>
</g>
<g >
<title>unsigned long boost::asio::detail::epoll_reactor::cancel_timer&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;(boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;&amp;, boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::per_timer_data&amp;, unsigned long) (1 samples, 0.39%)</title><rect x="732.3" y="517" width="3.1" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="735.33" y="527.5" ></text>
</g>
<g >
<title>boost::asio::detail::io_object_impl&lt;boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::~io_object_impl() (3 samples, 1.17%)</title><rect x="747.5" y="581" width="9.1" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="750.51" y="591.5" ></text>
</g>
<g >
<title>std::error_code::error_code(int, std::_V2::error_category const&amp;) (1 samples, 0.39%)</title><rect x="756.6" y="885" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="759.61" y="895.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, void&gt;::complete&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (5 samples, 1.95%)</title><rect x="747.5" y="1397" width="15.2" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="750.51" y="1407.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.39%)</title><rect x="753.6" y="549" width="3.0" height="15.0" fill="rgb(232,202,30)" rx="2" ry="2" />
<text  x="756.58" y="559.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;&gt;::type std::__invoke&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;&gt;(void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="837" width="3.1" height="15.0" fill="rgb(242,146,41)" rx="2" ry="2" />
<text  x="94.95" y="847.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;&gt;::type std::__invoke&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;&gt;(void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;) (12 samples, 4.67%)</title><rect x="49.5" y="901" width="36.4" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="52.46" y="911.5" >std..</text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;::__call&lt;void, boost::system::error_code&amp;, unsigned long&amp;, 0ul, 1ul, 2ul, 3ul&gt;(std::tuple&lt;boost::system::error_code&amp;, unsigned long&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul, 3ul&gt;) (19 samples, 7.39%)</title><rect x="686.8" y="885" width="57.7" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="689.81" y="895.5" >void s..</text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast(long, __cxxabiv1::__class_type_info::__sub_kind, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info const*, void const*, __cxxabiv1::__class_type_info::__dyncast_result&amp;) const (1 samples, 0.39%)</title><rect x="16.1" y="1525" width="3.0" height="15.0" fill="rgb(237,144,35)" rx="2" ry="2" />
<text  x="19.07" y="1535.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt;::operator()&lt;std::error_code const&amp;, void&gt;(std::error_code const&amp;) (19 samples, 7.39%)</title><rect x="686.8" y="789" width="57.7" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="689.81" y="799.5" >void s..</text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;, boost::asio::io_context::strand*) const (19 samples, 7.39%)</title><rect x="686.8" y="1029" width="57.7" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="689.81" y="1039.5" >void b..</text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count() (3 samples, 1.17%)</title><rect x="747.5" y="661" width="9.1" height="15.0" fill="rgb(239,146,38)" rx="2" ry="2" />
<text  x="750.51" y="671.5" ></text>
</g>
<g >
<title>boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::cancel_timer(boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::per_timer_data&amp;, boost::asio::detail::op_queue&lt;boost::asio::detail::scheduler_operation&gt;&amp;, unsigned long) (1 samples, 0.39%)</title><rect x="686.8" y="661" width="3.0" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="689.81" y="671.5" ></text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;) (13 samples, 5.06%)</title><rect x="46.4" y="1029" width="39.5" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="49.42" y="1039.5" >voi..</text>
</g>
<g >
<title>websocketpp::http::parser::parser::get_header(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="635.2" y="677" width="3.0" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="638.21" y="687.5" ></text>
</g>
<g >
<title>__open (1 samples, 0.39%)</title><rect x="768.8" y="1525" width="3.0" height="15.0" fill="rgb(250,144,49)" rx="2" ry="2" />
<text  x="771.75" y="1535.5" ></text>
</g>
<g >
<title>boost::asio::detail::op_queue&lt;boost::asio::detail::wait_op&gt;::front() (1 samples, 0.39%)</title><rect x="732.3" y="501" width="3.1" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="735.33" y="511.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base() (1 samples, 0.39%)</title><rect x="88.9" y="1189" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="91.91" y="1199.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::handle_write_http_response(std::error_code const&amp;) (18 samples, 7.00%)</title><rect x="686.8" y="725" width="54.6" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="689.81" y="735.5" >webso..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (3 samples, 1.17%)</title><rect x="747.5" y="1205" width="9.1" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="750.51" y="1215.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::start_op(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, int, boost::asio::detail::reactor_op*, bool, bool, bool) (2 samples, 0.78%)</title><rect x="79.8" y="613" width="6.1" height="15.0" fill="rgb(241,151,39)" rx="2" ry="2" />
<text  x="82.81" y="623.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::get_timeout(itimerspec&amp;) (1 samples, 0.39%)</title><rect x="70.7" y="437" width="3.0" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="73.70" y="447.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="759.6" y="1269" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="762.65" y="1279.5" ></text>
</g>
<g >
<title>boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::operator()(boost::system::error_code const&amp;, unsigned long, int) (7 samples, 2.72%)</title><rect x="644.3" y="597" width="21.3" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="647.32" y="607.5" >b..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt;))(websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::error_code const&amp;)&gt; &gt;::_M_destroy(std::_Any_data&amp;, std::integral_constant&lt;bool, false&gt;) (3 samples, 1.17%)</title><rect x="747.5" y="933" width="9.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="750.51" y="943.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::__call&lt;void, boost::system::error_code const&amp;, 0ul, 1ul, 2ul&gt;(std::tuple&lt;boost::system::error_code const&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul&gt;) (12 samples, 4.67%)</title><rect x="49.5" y="917" width="36.4" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="52.46" y="927.5" >voi..</text>
</g>
<g >
<title>websocketpp::transport::asio::basic_socket::connection::async_shutdown(std::function&lt;void (boost::system::error_code const&amp;)&gt;) (11 samples, 4.28%)</title><rect x="702.0" y="677" width="33.4" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="704.98" y="687.5" >we..</text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;::operator()(std::error_code const&amp;, unsigned long) const (190 samples, 73.93%)</title><rect x="101.1" y="821" width="576.6" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="104.05" y="831.5" >std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;::operator()(std::er..</text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;) (10 samples, 3.89%)</title><rect x="49.5" y="613" width="30.3" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="52.46" y="623.5" >vo..</text>
</g>
<g >
<title>std::_Function_handler&lt;void (std::weak_ptr&lt;void&gt;), main::{lambda(auto:1)#1}&gt;::_M_invoke(std::_Any_data const&amp;, std::weak_ptr&lt;void&gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="645" width="3.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="94.95" y="655.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::get_remote_endpoint[abi:cxx11]() const (2 samples, 0.78%)</title><rect x="692.9" y="693" width="6.0" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="695.88" y="703.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete(void*, boost::system::error_code const&amp;, unsigned long) (21 samples, 8.17%)</title><rect x="31.2" y="1397" width="63.8" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="34.25" y="1407.5" >boost::..</text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code)&gt;::initiate&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&gt;(boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="735.4" y="629" width="3.0" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="738.37" y="639.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;&amp;) (191 samples, 74.32%)</title><rect x="98.0" y="965" width="579.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="101.02" y="975.5" >void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;web..</text>
</g>
<g >
<title>void boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::async_wait&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;(boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::implementation_type&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="735.4" y="597" width="3.0" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="738.37" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr() (3 samples, 1.17%)</title><rect x="747.5" y="837" width="9.1" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="750.51" y="847.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (3 samples, 1.17%)</title><rect x="747.5" y="1045" width="9.1" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="750.51" y="1055.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;) (13 samples, 5.06%)</title><rect x="46.4" y="981" width="39.5" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="49.42" y="991.5" >voi..</text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_recv_op_base&lt;boost::asio::mutable_buffers_1&gt;::do_perform(boost::asio::detail::reactor_op*) (2 samples, 0.78%)</title><rect x="58.6" y="69" width="6.0" height="15.0" fill="rgb(240,151,39)" rx="2" ry="2" />
<text  x="61.56" y="79.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (boost::system::error_code const&amp;), std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;::_M_invoke(std::_Any_data const&amp;, boost::system::error_code const&amp;) (2 samples, 0.78%)</title><rect x="729.3" y="645" width="6.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="732.30" y="655.5" ></text>
</g>
<g >
<title>boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::wait_duration_usec(long) const (1 samples, 0.39%)</title><rect x="70.7" y="405" width="3.0" height="15.0" fill="rgb(237,151,35)" rx="2" ry="2" />
<text  x="73.70" y="415.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::destroy(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;) (3 samples, 1.17%)</title><rect x="747.5" y="565" width="9.1" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="750.51" y="575.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;::shared_ptr(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="677.7" y="1269" width="3.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="680.70" y="1279.5" ></text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, ...) (14 samples, 5.45%)</title><rect x="46.4" y="1157" width="42.5" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="49.42" y="1167.5" >void..</text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*&amp;)(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;), websocketpp::server&lt;websocketpp::config::asio&gt;*&amp;, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;::type std::__invoke&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*&amp;)(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;), websocketpp::server&lt;websocketpp::config::asio&gt;*&amp;, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;(void (websocketpp::server&lt;websocketpp::config::asio&gt;::*&amp;)(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;), websocketpp::server&lt;websocketpp::config::asio&gt;*&amp;, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;) (12 samples, 4.67%)</title><rect x="49.5" y="789" width="36.4" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="52.46" y="799.5" >std..</text>
</g>
<g >
<title>boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;::wrapped_handler(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="744.5" y="1381" width="3.0" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="747.47" y="1391.5" ></text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt; &gt;::type&amp; std::get&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt;(std::tuple&lt;std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt;&amp;) (1 samples, 0.39%)</title><rect x="741.4" y="757" width="3.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="744.44" y="767.5" ></text>
</g>
<g >
<title>recv (2 samples, 0.78%)</title><rect x="58.6" y="37" width="6.0" height="15.0" fill="rgb(237,178,35)" rx="2" ry="2" />
<text  x="61.56" y="47.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::function(std::function&lt;void (std::error_code const&amp;)&gt; const&amp;) (1 samples, 0.39%)</title><rect x="759.6" y="1237" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="762.65" y="1247.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch(int*, int) (1 samples, 0.39%)</title><rect x="698.9" y="389" width="3.1" height="15.0" fill="rgb(245,132,44)" rx="2" ry="2" />
<text  x="701.95" y="399.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;) (6 samples, 2.33%)</title><rect x="49.5" y="469" width="18.2" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="52.46" y="479.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::_Bind(std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="744.5" y="1365" width="3.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="747.47" y="1375.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;::__call&lt;void, boost::system::error_code&amp;, unsigned long&amp;, 0ul, 1ul, 2ul, 3ul&gt;(std::tuple&lt;boost::system::error_code&amp;, unsigned long&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul, 3ul&gt;) (191 samples, 74.32%)</title><rect x="98.0" y="885" width="579.7" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="101.02" y="895.5" >void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::con..</text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::__false_type) (174 samples, 67.70%)</title><rect x="104.1" y="597" width="528.1" height="15.0" fill="rgb(248,131,47)" rx="2" ry="2" />
<text  x="107.09" y="607.5" >void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::alloc..</text>
</g>
<g >
<title>boost::asio::detail::socket_ops::accept(int, sockaddr*, unsigned long*, boost::system::error_code&amp;) (2 samples, 0.78%)</title><rect x="79.8" y="533" width="6.1" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="82.81" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;, void&gt;(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;) (1 samples, 0.39%)</title><rect x="698.9" y="629" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="701.95" y="639.5" ></text>
</g>
<g >
<title>websocketpp::http::parser::parser::replace_header(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="641.3" y="693" width="3.0" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="644.28" y="703.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::operator()(std::error_code const&amp;) const (12 samples, 4.67%)</title><rect x="49.5" y="853" width="36.4" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="52.46" y="863.5" >std..</text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::cleanup_descriptor_data(boost::asio::detail::epoll_reactor::descriptor_state*&amp;) (1 samples, 0.39%)</title><rect x="750.5" y="549" width="3.1" height="15.0" fill="rgb(243,151,42)" rx="2" ry="2" />
<text  x="753.54" y="559.5" ></text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, ...) (13 samples, 5.06%)</title><rect x="46.4" y="965" width="39.5" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="49.42" y="975.5" >voi..</text>
</g>
<g >
<title>std::_Function_base::~_Function_base() (1 samples, 0.39%)</title><rect x="729.3" y="549" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="732.30" y="559.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::run() (247 samples, 96.11%)</title><rect x="19.1" y="1493" width="749.7" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="22.11" y="1503.5" >websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::run()</text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;::rewrapped_handler(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="40.4" y="1221" width="3.0" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="43.35" y="1231.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::operator()&lt;boost::system::error_code const&amp;, void&gt;(boost::system::error_code const&amp;) (2 samples, 0.78%)</title><rect x="729.3" y="629" width="6.1" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="732.30" y="639.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (19 samples, 7.39%)</title><rect x="686.8" y="1045" width="57.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="689.81" y="1055.5" >void b..</text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;*) (13 samples, 5.06%)</title><rect x="46.4" y="997" width="39.5" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="49.42" y="1007.5" >voi..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;0ul, websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="85.9" y="1029" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="88.88" y="1039.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow(int) (1 samples, 0.39%)</title><rect x="787.0" y="1541" width="3.0" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="789.96" y="1551.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;boost::asio::io_context::strand, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator-&gt;() const (1 samples, 0.39%)</title><rect x="738.4" y="661" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="741.40" y="671.5" ></text>
</g>
<g >
<title>all (257 samples, 100%)</title><rect x="10.0" y="1573" width="780.0" height="15.0" fill="rgb(255,230,55)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;(boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;*) (21 samples, 8.17%)</title><rect x="680.7" y="1333" width="63.8" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="683.74" y="1343.5" >void bo..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;bool (*)(unsigned char)&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;bool (*)(unsigned char)&gt;, std::random_access_iterator_tag) (1 samples, 0.39%)</title><rect x="671.6" y="629" width="3.1" height="15.0" fill="rgb(248,132,47)" rx="2" ry="2" />
<text  x="674.63" y="639.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactor_op::perform() (4 samples, 1.56%)</title><rect x="19.1" y="1381" width="12.1" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="22.11" y="1391.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (3 samples, 1.17%)</title><rect x="747.5" y="1173" width="9.1" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="750.51" y="1183.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;*) (21 samples, 8.17%)</title><rect x="680.7" y="1189" width="63.8" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="683.74" y="1199.5" >void bo..</text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (13 samples, 5.06%)</title><rect x="46.4" y="1077" width="39.5" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="49.42" y="1087.5" >std..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt; &gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation) (1 samples, 0.39%)</title><rect x="52.5" y="437" width="3.0" height="15.0" fill="rgb(251,146,50)" rx="2" ry="2" />
<text  x="55.49" y="447.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*) (1 samples, 0.39%)</title><rect x="771.8" y="1493" width="3.0" height="15.0" fill="rgb(237,146,36)" rx="2" ry="2" />
<text  x="774.79" y="1503.5" ></text>
</g>
<g >
<title>boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::assign(boost::asio::ip::tcp const&amp;, int const&amp;, boost::system::error_code&amp;) (2 samples, 0.78%)</title><rect x="34.3" y="1349" width="6.1" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="37.28" y="1359.5" ></text>
</g>
<g >
<title>std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;::_M_get() const (21 samples, 8.17%)</title><rect x="556.3" y="549" width="63.7" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="559.30" y="559.5" >std::is..</text>
</g>
<g >
<title>boost::asio::detail::associated_allocator_impl&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, std::allocator&lt;void&gt;, void&gt;::get(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; const&amp;, std::allocator&lt;void&gt; const&amp;) (1 samples, 0.39%)</title><rect x="31.2" y="1333" width="3.1" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="34.25" y="1343.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::post_init(std::function&lt;void (std::error_code const&amp;)&gt;) (10 samples, 3.89%)</title><rect x="49.5" y="581" width="30.3" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="52.46" y="591.5" >we..</text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::error_code const&amp;, unsigned long)&gt;::__call&lt;void, std::error_code const&amp;, unsigned long&amp;&amp;, 0ul, 1ul, 2ul&gt;(std::tuple&lt;std::error_code const&amp;, unsigned long&amp;&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul&gt;) (190 samples, 73.93%)</title><rect x="101.1" y="773" width="576.6" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="104.05" y="783.5" >void std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std..</text>
</g>
<g >
<title>std::__shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr(std::__shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, (__gnu_cxx::_Lock_policy)2&gt; const&amp;) (1 samples, 0.39%)</title><rect x="698.9" y="437" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="701.95" y="447.5" ></text>
</g>
<g >
<title>boost::asio::detail::socket_holder::reset(int) (1 samples, 0.39%)</title><rect x="28.2" y="1365" width="3.0" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="31.21" y="1375.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (4 samples, 1.56%)</title><rect x="747.5" y="1333" width="12.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="750.51" y="1343.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt; &gt;::~completion_handler() (1 samples, 0.39%)</title><rect x="95.0" y="1205" width="3.0" height="15.0" fill="rgb(241,151,40)" rx="2" ry="2" />
<text  x="97.98" y="1215.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::~_Bind() (3 samples, 1.17%)</title><rect x="747.5" y="1237" width="9.1" height="15.0" fill="rgb(242,146,41)" rx="2" ry="2" />
<text  x="750.51" y="1247.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::shutdown(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, boost::asio::socket_base::shutdown_type, boost::system::error_code&amp;) (9 samples, 3.50%)</title><rect x="702.0" y="645" width="27.3" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="704.98" y="655.5" >b..</text>
</g>
<g >
<title>auto boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::async_wait&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="735.4" y="661" width="3.0" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="738.37" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length(unsigned long) (1 samples, 0.39%)</title><rect x="777.9" y="1509" width="3.0" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="780.86" y="1519.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, void&gt;(__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.39%)</title><rect x="668.6" y="677" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="671.60" y="687.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::async_accept(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code&amp;) (2 samples, 0.78%)</title><rect x="79.8" y="725" width="6.1" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="82.81" y="735.5" ></text>
</g>
<g >
<title>websocketpp::http::parser::parser::append_header(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (2 samples, 0.78%)</title><rect x="671.6" y="677" width="6.1" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="674.63" y="687.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release() (3 samples, 1.17%)</title><rect x="747.5" y="805" width="9.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="750.51" y="815.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;*) (1 samples, 0.39%)</title><rect x="756.6" y="1221" width="3.0" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="759.61" y="1231.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="665.6" y="677" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="668.56" y="687.5" ></text>
</g>
<g >
<title>websocketpp::http::parser::parser::get_header(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="665.6" y="693" width="3.0" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="668.56" y="703.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, void&gt;::complete&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;) (21 samples, 8.17%)</title><rect x="680.7" y="1397" width="63.8" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="683.74" y="1407.5" >void bo..</text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt;::_Bind&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;&gt;(void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;) (1 samples, 0.39%)</title><rect x="698.9" y="661" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="701.95" y="671.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;*) (19 samples, 7.39%)</title><rect x="686.8" y="981" width="57.7" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="689.81" y="991.5" >void b..</text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (192 samples, 74.71%)</title><rect x="95.0" y="1285" width="582.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="97.98" y="1295.5" >void boost::asio::async_result&lt;boost::asio::detail::rewrapped_handler&lt;boost::asi..</text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt; &gt;::~tuple() (1 samples, 0.39%)</title><rect x="729.3" y="485" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="732.30" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base() const (1 samples, 0.39%)</title><rect x="668.6" y="613" width="3.0" height="15.0" fill="rgb(237,132,35)" rx="2" ry="2" />
<text  x="671.60" y="623.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::start_op(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, int, boost::asio::detail::reactor_op*, bool, bool, bool) (5 samples, 1.95%)</title><rect x="650.4" y="501" width="15.2" height="15.0" fill="rgb(241,151,39)" rx="2" ry="2" />
<text  x="653.39" y="511.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::operator()&lt;boost::system::error_code const&amp;, void&gt;(boost::system::error_code const&amp;) (1 samples, 0.39%)</title><rect x="756.6" y="965" width="3.0" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="759.61" y="975.5" ></text>
</g>
<g >
<title>_ZZ4mainENKUlT_E_clISt8weak_ptrIvEEEDaS_ (1 samples, 0.39%)</title><rect x="91.9" y="629" width="3.1" height="15.0" fill="rgb(239,160,37)" rx="2" ry="2" />
<text  x="94.95" y="639.5" ></text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, ...) (1 samples, 0.39%)</title><rect x="756.6" y="997" width="3.0" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="759.61" y="1007.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="674.7" y="629" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="677.67" y="639.5" ></text>
</g>
<g >
<title>void boost::asio::detail::initiate_async_write_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;::operator()&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, boost::asio::detail::transfer_all_t&gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; const&amp;, boost::asio::detail::transfer_all_t&amp;&amp;) const (7 samples, 2.72%)</title><rect x="644.3" y="629" width="21.3" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="647.32" y="639.5" >v..</text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;&amp;) (21 samples, 8.17%)</title><rect x="680.7" y="1173" width="63.8" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="683.74" y="1183.5" >void bo..</text>
</g>
<g >
<title>websocketpp::utility::ci_less::operator()(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="665.6" y="645" width="3.0" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="668.56" y="655.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="52.5" y="373" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="55.49" y="383.5" ></text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, ...) (191 samples, 74.32%)</title><rect x="98.0" y="1157" width="579.7" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="101.02" y="1167.5" >void boost::asio::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;bo..</text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (1 samples, 0.39%)</title><rect x="756.6" y="1093" width="3.0" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="759.61" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.39%)</title><rect x="771.8" y="1477" width="3.0" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="774.79" y="1487.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.39%)</title><rect x="173.9" y="565" width="3.0" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="176.89" y="575.5" ></text>
</g>
<g >
<title>std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;::_M_at_eof() const (3 samples, 1.17%)</title><rect x="207.3" y="549" width="9.1" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="210.28" y="559.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::eof() (2 samples, 0.78%)</title><rect x="522.9" y="565" width="6.1" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="525.92" y="575.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactor_op::perform() (2 samples, 0.78%)</title><rect x="58.6" y="85" width="6.0" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="61.56" y="95.5" ></text>
</g>
<g >
<title>std::function&lt;void (boost::system::error_code const&amp;)&gt;::operator()(boost::system::error_code const&amp;) const (2 samples, 0.78%)</title><rect x="729.3" y="661" width="6.1" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="732.30" y="671.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, void&gt;::complete&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (17 samples, 6.61%)</title><rect x="40.4" y="1365" width="51.5" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="43.35" y="1375.5" >void ..</text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;) (192 samples, 74.71%)</title><rect x="95.0" y="1381" width="582.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="97.98" y="1391.5" >void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boos..</text>
</g>
<g >
<title>boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::operator()(boost::system::error_code const&amp;, unsigned long, int) (21 samples, 8.17%)</title><rect x="680.7" y="1109" width="63.8" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="683.74" y="1119.5" >boost::..</text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;::~binder1() (1 samples, 0.39%)</title><rect x="88.9" y="1301" width="3.0" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="91.91" y="1311.5" ></text>
</g>
<g >
<title>boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::cancel() (1 samples, 0.39%)</title><rect x="686.8" y="709" width="3.0" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="689.81" y="719.5" ></text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="756.6" y="1125" width="3.0" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="759.61" y="1135.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (191 samples, 74.32%)</title><rect x="98.0" y="1045" width="579.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="101.02" y="1055.5" >void boost::asio::async_result&lt;boost::asio::detail::binder2&lt;websocketpp::transp..</text>
</g>
<g >
<title>bool std::lexicographical_compare&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, websocketpp::utility::ci_less::nocase_compare&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, websocketpp::utility::ci_less::nocase_compare) (1 samples, 0.39%)</title><rect x="635.2" y="597" width="3.0" height="15.0" fill="rgb(246,151,46)" rx="2" ry="2" />
<text  x="638.21" y="607.5" ></text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;::~rewrapped_handler() (1 samples, 0.39%)</title><rect x="43.4" y="1221" width="3.0" height="15.0" fill="rgb(241,151,40)" rx="2" ry="2" />
<text  x="46.39" y="1231.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::handle_async_read(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long) (190 samples, 73.93%)</title><rect x="101.1" y="837" width="576.6" height="15.0" fill="rgb(247,141,46)" rx="2" ry="2" />
<text  x="104.05" y="847.5" >websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_c..</text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, void (boost::system::error_code, unsigned long)&gt;::initiate&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_send, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;, int&gt;(boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_send&amp;&amp;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;, boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;, int&amp;&amp;) (7 samples, 2.72%)</title><rect x="644.3" y="549" width="21.3" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="647.32" y="559.5" >v..</text>
</g>
<g >
<title>std::tuple_element&lt;0ul, std::tuple&lt;websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; &gt;::type&amp; std::get&lt;0ul, websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;(std::tuple&lt;websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;&amp;) (1 samples, 0.39%)</title><rect x="46.4" y="917" width="3.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="49.42" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str() const (1 samples, 0.39%)</title><rect x="692.9" y="677" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="695.88" y="687.5" ></text>
</g>
<g >
<title>void boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::async_wait&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;(boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::implementation_type&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="70.7" y="485" width="3.0" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="73.70" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::operator()(std::error_code const&amp;) const (6 samples, 2.33%)</title><rect x="49.5" y="549" width="18.2" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="52.46" y="559.5" ></text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;) (1 samples, 0.39%)</title><rect x="756.6" y="1061" width="3.0" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="759.61" y="1071.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::~function() (3 samples, 1.17%)</title><rect x="747.5" y="981" width="9.1" height="15.0" fill="rgb(244,146,43)" rx="2" ry="2" />
<text  x="750.51" y="991.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;boost::asio::io_context::strand, (__gnu_cxx::_Lock_policy)2, false, false&gt;::_M_get() const (1 samples, 0.39%)</title><rect x="738.4" y="645" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="741.40" y="655.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt; &gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation) (1 samples, 0.39%)</title><rect x="759.6" y="1221" width="3.1" height="15.0" fill="rgb(251,146,50)" rx="2" ry="2" />
<text  x="762.65" y="1231.5" ></text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt; &gt;::destroy&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;(std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, websocketpp::connection&lt;websocketpp::config::asio&gt;*) (3 samples, 1.17%)</title><rect x="747.5" y="773" width="9.1" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="750.51" y="783.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::start() (10 samples, 3.89%)</title><rect x="49.5" y="741" width="30.3" height="15.0" fill="rgb(239,141,38)" rx="2" ry="2" />
<text  x="52.46" y="751.5" >we..</text>
</g>
<g >
<title>boost::asio::detail::timer_queue_set::wait_duration_usec(long) const (1 samples, 0.39%)</title><rect x="70.7" y="421" width="3.0" height="15.0" fill="rgb(237,151,35)" rx="2" ry="2" />
<text  x="73.70" y="431.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;) (1 samples, 0.39%)</title><rect x="756.6" y="1013" width="3.0" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="759.61" y="1023.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::operator()&lt;boost::system::error_code const&amp;, void&gt;(boost::system::error_code const&amp;) (13 samples, 5.06%)</title><rect x="46.4" y="933" width="39.5" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="49.42" y="943.5" >voi..</text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;::shared_ptr&lt;websocketpp::transport::asio::basic_socket::connection&gt;(std::shared_ptr&lt;websocketpp::transport::asio::basic_socket::connection&gt; const&amp;, websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;*) (1 samples, 0.39%)</title><rect x="67.7" y="533" width="3.0" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="70.67" y="543.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;&amp;) (19 samples, 7.39%)</title><rect x="686.8" y="965" width="57.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="689.81" y="975.5" >void b..</text>
</g>
<g >
<title>boost::system::error_code::assign(int, boost::system::error_category const&amp;) (1 samples, 0.39%)</title><rect x="22.1" y="1301" width="3.1" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="25.14" y="1311.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::~connection() (3 samples, 1.17%)</title><rect x="747.5" y="725" width="9.1" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="750.51" y="735.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;*) (1 samples, 0.39%)</title><rect x="756.6" y="1029" width="3.0" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="759.61" y="1039.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (1 samples, 0.39%)</title><rect x="729.3" y="469" width="3.0" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="732.30" y="479.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::error_code const&amp;, unsigned long)&gt;::__call&lt;void, std::error_code const&amp;, unsigned long&amp;&amp;, 0ul, 1ul, 2ul&gt;(std::tuple&lt;std::error_code const&amp;, unsigned long&amp;&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul&gt;) (1 samples, 0.39%)</title><rect x="91.9" y="741" width="3.1" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="94.95" y="751.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (std::error_code const&amp;), std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt; &gt;::_M_invoke(std::_Any_data const&amp;, std::error_code const&amp;) (10 samples, 3.89%)</title><rect x="49.5" y="677" width="30.3" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="52.46" y="687.5" >st..</text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;::binder2(boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;, boost::system::error_code const&amp;, unsigned long const&amp;) (1 samples, 0.39%)</title><rect x="677.7" y="1397" width="3.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="680.70" y="1407.5" ></text>
</g>
<g >
<title>bool std::__lexicographical_compare_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;websocketpp::utility::ci_less::nocase_compare&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;websocketpp::utility::ci_less::nocase_compare&gt;) (1 samples, 0.39%)</title><rect x="635.2" y="581" width="3.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="638.21" y="591.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::_Bind(std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; const&amp;) (1 samples, 0.39%)</title><rect x="759.6" y="1333" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="762.65" y="1343.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="821" width="3.1" height="15.0" fill="rgb(242,131,41)" rx="2" ry="2" />
<text  x="94.95" y="831.5" ></text>
</g>
<g >
<title>std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;::operator*() const (30 samples, 11.67%)</title><rect x="529.0" y="565" width="91.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="531.99" y="575.5" >std::istre..</text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;&gt;::type std::__invoke&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;&gt;(void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;) (6 samples, 2.33%)</title><rect x="49.5" y="485" width="18.2" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="52.46" y="495.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::_Bind(std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; const&amp;) (1 samples, 0.39%)</title><rect x="85.9" y="1061" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="88.88" y="1071.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt;, void&gt;::complete&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;) (191 samples, 74.32%)</title><rect x="98.0" y="1221" width="579.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="101.02" y="1231.5" >void boost::asio::detail::handler_work&lt;boost::asio::detail::rewrapped_handler&lt;b..</text>
</g>
<g >
<title>[unknown] (1 samples, 0.39%)</title><rect x="13.0" y="1525" width="3.1" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="16.04" y="1535.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::eq_int_type(int const&amp;, int const&amp;) (10 samples, 3.89%)</title><rect x="447.0" y="501" width="30.4" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="450.04" y="511.5" >st..</text>
</g>
<g >
<title>bool std::lexicographical_compare&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, websocketpp::utility::ci_less::nocase_compare&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, websocketpp::utility::ci_less::nocase_compare) (1 samples, 0.39%)</title><rect x="101.1" y="613" width="3.0" height="15.0" fill="rgb(246,151,46)" rx="2" ry="2" />
<text  x="104.05" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (1 samples, 0.39%)</title><rect x="88.9" y="1221" width="3.0" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="91.91" y="1231.5" ></text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;, boost::asio::io_context::strand*) const (191 samples, 74.32%)</title><rect x="98.0" y="1029" width="579.7" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="101.02" y="1039.5" >void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio..</text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;::operator()() (21 samples, 8.17%)</title><rect x="680.7" y="1125" width="63.8" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="683.74" y="1135.5" >boost::..</text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::forward_iterator_tag) (1 samples, 0.39%)</title><rect x="668.6" y="629" width="3.0" height="15.0" fill="rgb(248,131,47)" rx="2" ry="2" />
<text  x="671.60" y="639.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count(std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt; const&amp;) (1 samples, 0.39%)</title><rect x="67.7" y="501" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="70.67" y="511.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;) (1 samples, 0.39%)</title><rect x="756.6" y="917" width="3.0" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="759.61" y="927.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::substr(unsigned long, unsigned long) const (1 samples, 0.39%)</title><rect x="632.2" y="677" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="635.18" y="687.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::__ops::_Iter_comp_iter&lt;websocketpp::utility::ci_less::nocase_compare&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;) (1 samples, 0.39%)</title><rect x="635.2" y="565" width="3.0" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="638.21" y="575.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;) (21 samples, 8.17%)</title><rect x="680.7" y="1205" width="63.8" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="683.74" y="1215.5" >void bo..</text>
</g>
<g >
<title>std::_Head_base&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, false&gt;::_Head_base(std::_Head_base&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, false&gt; const&amp;) (1 samples, 0.39%)</title><rect x="759.6" y="1253" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="762.65" y="1263.5" ></text>
</g>
<g >
<title>void __gnu_cxx::new_allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;::destroy&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;(websocketpp::connection&lt;websocketpp::config::asio&gt;*) (3 samples, 1.17%)</title><rect x="747.5" y="757" width="9.1" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="750.51" y="767.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_send_op&lt;boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::reactive_socket_send_op(boost::system::error_code const&amp;, int, unsigned char, boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;, int, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; const&amp;) (2 samples, 0.78%)</title><rect x="644.3" y="501" width="6.1" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="647.32" y="511.5" ></text>
</g>
<g >
<title>__libc_accept (1 samples, 0.39%)</title><rect x="19.1" y="1317" width="3.0" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="22.11" y="1327.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;) (4 samples, 1.56%)</title><rect x="55.5" y="357" width="12.2" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="58.53" y="367.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::tuple(std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="759.6" y="1317" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="762.65" y="1327.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;::operator()() (1 samples, 0.39%)</title><rect x="756.6" y="981" width="3.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="759.61" y="991.5" ></text>
</g>
<g >
<title>void websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;::operator()&lt;boost::system::error_code, unsigned long&gt;(boost::system::error_code, unsigned long) (19 samples, 7.39%)</title><rect x="686.8" y="917" width="57.7" height="15.0" fill="rgb(247,131,46)" rx="2" ry="2" />
<text  x="689.81" y="927.5" >void w..</text>
</g>
<g >
<title>inet_ntop (1 samples, 0.39%)</title><rect x="695.9" y="581" width="3.0" height="15.0" fill="rgb(244,173,43)" rx="2" ry="2" />
<text  x="698.91" y="591.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt; &gt;::_M_destroy(std::_Any_data&amp;, std::integral_constant&lt;bool, false&gt;) (3 samples, 1.17%)</title><rect x="747.5" y="1093" width="9.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="750.51" y="1103.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::_Bind(std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="40.4" y="1205" width="3.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="43.35" y="1215.5" ></text>
</g>
<g >
<title>auto boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::async_wait&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="70.7" y="549" width="3.0" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="73.70" y="559.5" ></text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;::~rewrapped_handler() (1 samples, 0.39%)</title><rect x="95.0" y="1189" width="3.0" height="15.0" fill="rgb(241,151,40)" rx="2" ry="2" />
<text  x="97.98" y="1199.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (19 samples, 7.39%)</title><rect x="686.8" y="1061" width="57.7" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="689.81" y="1071.5" >std::e..</text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;::operator()() (19 samples, 7.39%)</title><rect x="686.8" y="933" width="57.7" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="689.81" y="943.5" >boost:..</text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;*, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose() (3 samples, 1.17%)</title><rect x="747.5" y="629" width="9.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="750.51" y="639.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;, unsigned long&gt;(std::__invoke_memfun_deref, void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;, unsigned long&amp;&amp;) (190 samples, 73.93%)</title><rect x="101.1" y="741" width="576.6" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="104.05" y="751.5" >void std::__invoke_impl&lt;void, void (websocketpp::connection&lt;websocketpp::config..</text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::async_shutdown(std::function&lt;void (std::error_code const&amp;)&gt;) (14 samples, 5.45%)</title><rect x="698.9" y="693" width="42.5" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="701.95" y="703.5" >webs..</text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="1253" width="3.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="94.95" y="1263.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (192 samples, 74.71%)</title><rect x="95.0" y="1237" width="582.7" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="97.98" y="1247.5" >boost::asio::detail::completion_handler&lt;boost::asio::detail::rewrapped_handler&lt;b..</text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;*) (1 samples, 0.39%)</title><rect x="91.9" y="1301" width="3.1" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="94.95" y="1311.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;*) (1 samples, 0.39%)</title><rect x="91.9" y="1333" width="3.1" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="94.95" y="1343.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, false&gt;::~_Head_base() (3 samples, 1.17%)</title><rect x="747.5" y="869" width="9.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="750.51" y="879.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::set_timer(long, std::function&lt;void (std::error_code const&amp;)&gt;) (3 samples, 1.17%)</title><rect x="70.7" y="565" width="9.1" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="73.70" y="575.5" ></text>
</g>
<g >
<title>sendmsg (4 samples, 1.56%)</title><rect x="653.4" y="421" width="12.2" height="15.0" fill="rgb(243,173,42)" rx="2" ry="2" />
<text  x="656.42" y="431.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::steady_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_point() (1 samples, 0.39%)</title><rect x="76.8" y="501" width="3.0" height="15.0" fill="rgb(239,146,38)" rx="2" ry="2" />
<text  x="79.77" y="511.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr(std::__shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="744.5" y="1285" width="3.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="747.47" y="1295.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;&gt;::type std::__invoke&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;&gt;(void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;) (10 samples, 3.89%)</title><rect x="49.5" y="629" width="30.3" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="52.46" y="639.5" >st..</text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;::shared_ptr(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="698.9" y="453" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="701.95" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (std::weak_ptr&lt;void&gt;), main::{lambda(auto:1)#1}&gt;::_M_invoke(std::_Any_data const&amp;, std::weak_ptr&lt;void&gt;&amp;&amp;) (174 samples, 67.70%)</title><rect x="104.1" y="677" width="528.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="107.09" y="687.5" >std::_Function_handler&lt;void (std::weak_ptr&lt;void&gt;), main::{lambda(auto:1)..</text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::~_Bind() (1 samples, 0.39%)</title><rect x="88.9" y="1269" width="3.0" height="15.0" fill="rgb(242,146,41)" rx="2" ry="2" />
<text  x="91.91" y="1279.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code)&gt;::initiate&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&gt;(boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="70.7" y="517" width="3.0" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="73.70" y="527.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (5 samples, 1.95%)</title><rect x="747.5" y="1381" width="15.2" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="750.51" y="1391.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::uri&gt; websocketpp::processor::get_uri_from_host&lt;websocketpp::http::parser::request&gt;(websocketpp::http::parser::request&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;) (2 samples, 0.78%)</title><rect x="632.2" y="693" width="6.0" height="15.0" fill="rgb(239,146,38)" rx="2" ry="2" />
<text  x="635.18" y="703.5" ></text>
</g>
<g >
<title>std::ostream::operator&lt;&lt;(int) (1 samples, 0.39%)</title><rect x="689.8" y="709" width="3.1" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="692.84" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="665.6" y="661" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="668.56" y="671.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;::operator()() (14 samples, 5.45%)</title><rect x="46.4" y="1125" width="42.5" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="49.42" y="1135.5" >boos..</text>
</g>
<g >
<title>boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::operator()(boost::system::error_code const&amp;, unsigned long, int) (3 samples, 1.17%)</title><rect x="55.5" y="213" width="9.1" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="58.53" y="223.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt;))(websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::error_code const&amp;)&gt;::_Bind(std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt;))(websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::error_code const&amp;)&gt; const&amp;) (1 samples, 0.39%)</title><rect x="698.9" y="517" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="701.95" y="527.5" ></text>
</g>
<g >
<title>read_index_file(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (174 samples, 67.70%)</title><rect x="104.1" y="645" width="528.1" height="15.0" fill="rgb(242,184,40)" rx="2" ry="2" />
<text  x="107.09" y="655.5" >read_index_file(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;,..</text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::free_descriptor_state(boost::asio::detail::epoll_reactor::descriptor_state*) (1 samples, 0.39%)</title><rect x="750.5" y="533" width="3.1" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="753.54" y="543.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;::operator()&lt;boost::system::error_code&amp;, unsigned long&amp;, void&gt;(boost::system::error_code&amp;, unsigned long&amp;) (191 samples, 74.32%)</title><rect x="98.0" y="901" width="579.7" height="15.0" fill="rgb(242,131,41)" rx="2" ry="2" />
<text  x="101.02" y="911.5" >void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::con..</text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;) (19 samples, 7.39%)</title><rect x="686.8" y="853" width="57.7" height="15.0" fill="rgb(242,131,41)" rx="2" ry="2" />
<text  x="689.81" y="863.5" >void s..</text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;) (192 samples, 74.71%)</title><rect x="95.0" y="1253" width="582.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="97.98" y="1263.5" >void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::rewrappe..</text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::write_http_response(std::error_code const&amp;) (9 samples, 3.50%)</title><rect x="638.2" y="709" width="27.4" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="641.25" y="719.5" >w..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="759.6" y="1285" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="762.65" y="1295.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;&gt;::type std::__invoke&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;&gt;(void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;) (2 samples, 0.78%)</title><rect x="729.3" y="597" width="6.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="732.30" y="607.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::handle_async_write(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long) (19 samples, 7.39%)</title><rect x="686.8" y="837" width="57.7" height="15.0" fill="rgb(247,141,46)" rx="2" ry="2" />
<text  x="689.81" y="847.5" >websoc..</text>
</g>
<g >
<title>boost::asio::associated_allocator&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, std::allocator&lt;void&gt; &gt;::type boost::asio::get_associated_allocator&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; const&amp;) (1 samples, 0.39%)</title><rect x="31.2" y="1349" width="3.1" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="34.25" y="1359.5" ></text>
</g>
<g >
<title>void boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait::operator()&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) const (1 samples, 0.39%)</title><rect x="70.7" y="501" width="3.0" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="73.70" y="511.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (21 samples, 8.17%)</title><rect x="680.7" y="1349" width="63.8" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="683.74" y="1359.5" >void bo..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::eq_int_type(int const&amp;, int const&amp;) (1 samples, 0.39%)</title><rect x="231.6" y="533" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="234.56" y="543.5" ></text>
</g>
<g >
<title>void boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait::operator()&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) const (1 samples, 0.39%)</title><rect x="735.4" y="613" width="3.0" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="738.37" y="623.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::operator[](std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="641.3" y="677" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="644.28" y="687.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (192 samples, 74.71%)</title><rect x="95.0" y="1349" width="582.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="97.98" y="1359.5" >void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boos..</text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::start_op(int, int, boost::asio::detail::epoll_reactor::descriptor_state*&amp;, boost::asio::detail::reactor_op*, bool, bool) (2 samples, 0.78%)</title><rect x="58.6" y="101" width="6.0" height="15.0" fill="rgb(241,151,39)" rx="2" ry="2" />
<text  x="61.56" y="111.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt;::__call&lt;void, std::error_code const&amp;, 0ul, 1ul&gt;(std::tuple&lt;std::error_code const&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul&gt;) (19 samples, 7.39%)</title><rect x="686.8" y="773" width="57.7" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="689.81" y="783.5" >void s..</text>
</g>
<g >
<title>boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;::wrapped_handler(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="677.7" y="1365" width="3.0" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="680.70" y="1375.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt; std::static_pointer_cast&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;, websocketpp::transport::asio::basic_socket::connection&gt;(std::shared_ptr&lt;websocketpp::transport::asio::basic_socket::connection&gt; const&amp;) (1 samples, 0.39%)</title><rect x="67.7" y="549" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="70.67" y="559.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;::~shared_ptr() (3 samples, 1.17%)</title><rect x="747.5" y="853" width="9.1" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="750.51" y="863.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt; &gt;::~tuple() (3 samples, 1.17%)</title><rect x="747.5" y="901" width="9.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="750.51" y="911.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; boost::asio::ip::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, boost::asio::ip::address const&amp;) (1 samples, 0.39%)</title><rect x="695.9" y="629" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="698.91" y="639.5" ></text>
</g>
<g >
<title>websocketpp::server&lt;websocketpp::config::asio&gt;::start_accept(std::error_code&amp;) (2 samples, 0.78%)</title><rect x="79.8" y="741" width="6.1" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="82.81" y="751.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::__false_type) (1 samples, 0.39%)</title><rect x="668.6" y="645" width="3.0" height="15.0" fill="rgb(248,131,47)" rx="2" ry="2" />
<text  x="671.60" y="655.5" ></text>
</g>
<g >
<title>__close (1 samples, 0.39%)</title><rect x="747.5" y="549" width="3.0" height="15.0" fill="rgb(245,144,44)" rx="2" ry="2" />
<text  x="750.51" y="559.5" ></text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;) (191 samples, 74.32%)</title><rect x="98.0" y="1077" width="579.7" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="101.02" y="1087.5" >auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::binder2&lt;web..</text>
</g>
<g >
<title>boost::asio::detail::completion_handler&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (4 samples, 1.56%)</title><rect x="747.5" y="1269" width="12.1" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="750.51" y="1279.5" ></text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;) (21 samples, 8.17%)</title><rect x="680.7" y="1317" width="63.8" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="683.74" y="1327.5" >auto bo..</text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::set_timer(long, std::function&lt;void (std::error_code const&amp;)&gt;) (2 samples, 0.78%)</title><rect x="735.4" y="677" width="6.0" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="738.37" y="687.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="1317" width="3.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="94.95" y="1327.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt; &gt;::completion_handler(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt; const&amp;) (1 samples, 0.39%)</title><rect x="40.4" y="1237" width="3.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="43.35" y="1247.5" ></text>
</g>
<g >
<title>bool std::__lexicographical_compare_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;websocketpp::utility::ci_less::nocase_compare&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;websocketpp::utility::ci_less::nocase_compare&gt;) (1 samples, 0.39%)</title><rect x="101.1" y="597" width="3.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="104.05" y="607.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;) (1 samples, 0.39%)</title><rect x="668.6" y="661" width="3.0" height="15.0" fill="rgb(239,131,38)" rx="2" ry="2" />
<text  x="671.60" y="671.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base() (3 samples, 1.17%)</title><rect x="747.5" y="965" width="9.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="750.51" y="975.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::weak_ptr&lt;void&gt;)&gt;::operator()(std::weak_ptr&lt;void&gt;) const (174 samples, 67.70%)</title><rect x="104.1" y="693" width="528.1" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="107.09" y="703.5" >std::function&lt;void (std::weak_ptr&lt;void&gt;)&gt;::operator()(std::weak_ptr&lt;void..</text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;, unsigned long&gt;(std::__invoke_memfun_deref, void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;, unsigned long&amp;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="709" width="3.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="94.95" y="719.5" ></text>
</g>
<g >
<title>void boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;::operator()&lt;boost::system::error_code, unsigned long&gt;(boost::system::error_code const&amp;, unsigned long const&amp;) (191 samples, 74.32%)</title><rect x="98.0" y="1093" width="579.7" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="101.02" y="1103.5" >void boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, webs..</text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::update_timeout() (1 samples, 0.39%)</title><rect x="70.7" y="453" width="3.0" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="73.70" y="463.5" ></text>
</g>
<g >
<title>boost::asio::detail::consuming_buffers&lt;boost::asio::const_buffer, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt; &gt;::consume(unsigned long) (2 samples, 0.78%)</title><rect x="680.7" y="1093" width="6.1" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="683.74" y="1103.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;::operator()() (13 samples, 5.06%)</title><rect x="46.4" y="949" width="39.5" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="49.42" y="959.5" >boo..</text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt;::~_Bind() (3 samples, 1.17%)</title><rect x="747.5" y="1077" width="9.1" height="15.0" fill="rgb(242,146,41)" rx="2" ry="2" />
<text  x="750.51" y="1087.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::function(std::function&lt;void (std::error_code const&amp;)&gt; const&amp;) (1 samples, 0.39%)</title><rect x="85.9" y="981" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="88.88" y="991.5" ></text>
</g>
<g >
<title>[unknown] (254 samples, 98.83%)</title><rect x="10.0" y="1541" width="770.9" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="13.00" y="1551.5" >[unknown]</text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;::rewrapped_handler(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; const&amp;) (1 samples, 0.39%)</title><rect x="759.6" y="1349" width="3.1" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="762.65" y="1359.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::do_assign(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, int, int const&amp;, boost::system::error_code&amp;) (2 samples, 0.78%)</title><rect x="34.3" y="1317" width="6.1" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="37.28" y="1327.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, false&gt;::_Head_base&lt;std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt; &gt;(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="744.5" y="1301" width="3.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="747.47" y="1311.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;::custom_alloc_handler(websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="677.7" y="1349" width="3.0" height="15.0" fill="rgb(246,141,45)" rx="2" ry="2" />
<text  x="680.70" y="1359.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;::operator()() (1 samples, 0.39%)</title><rect x="756.6" y="1157" width="3.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="759.61" y="1167.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ostream() (1 samples, 0.39%)</title><rect x="774.8" y="1525" width="3.1" height="15.0" fill="rgb(244,146,43)" rx="2" ry="2" />
<text  x="777.82" y="1535.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, void&gt;::complete&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="1365" width="3.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="94.95" y="1375.5" ></text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;::operator()() (1 samples, 0.39%)</title><rect x="756.6" y="1173" width="3.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="759.61" y="1183.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::get_shared() (1 samples, 0.39%)</title><rect x="67.7" y="565" width="3.0" height="15.0" fill="rgb(242,141,41)" rx="2" ry="2" />
<text  x="70.67" y="575.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::sgetc() (5 samples, 1.95%)</title><rect x="280.1" y="517" width="15.2" height="15.0" fill="rgb(243,146,42)" rx="2" ry="2" />
<text  x="283.12" y="527.5" ></text>
</g>
<g >
<title>void boost::asio::detail::reactive_socket_service_base::async_send&lt;boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;, int, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; const&amp;) (7 samples, 2.72%)</title><rect x="644.3" y="517" width="21.3" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="647.32" y="527.5" >v..</text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, ...) (19 samples, 7.39%)</title><rect x="686.8" y="949" width="57.7" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="689.81" y="959.5" >void b..</text>
</g>
<g >
<title>auto boost::asio::async_read&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;&amp;, boost::asio::mutable_buffers_1 const&amp;, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, std::enable_if&lt;boost::asio::is_mutable_buffer_sequence&lt;boost::asio::mutable_buffers_1&gt;::value, void&gt;::type*) (3 samples, 1.17%)</title><rect x="55.5" y="293" width="9.1" height="15.0" fill="rgb(239,112,38)" rx="2" ry="2" />
<text  x="58.53" y="303.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::operator()(std::error_code const&amp;) const (10 samples, 3.89%)</title><rect x="49.5" y="693" width="30.3" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="52.46" y="703.5" >st..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt;))(websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::error_code const&amp;)&gt; &gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation) (1 samples, 0.39%)</title><rect x="729.3" y="533" width="3.0" height="15.0" fill="rgb(251,146,50)" rx="2" ry="2" />
<text  x="732.30" y="543.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (std::error_code const&amp;), std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt; &gt;::_M_invoke(std::_Any_data const&amp;, std::error_code const&amp;) (19 samples, 7.39%)</title><rect x="686.8" y="805" width="57.7" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="689.81" y="815.5" >std::_..</text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;&amp;) (13 samples, 5.06%)</title><rect x="46.4" y="1093" width="39.5" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="49.42" y="1103.5" >aut..</text>
</g>
<g >
<title>std::__shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;websocketpp::transport::asio::basic_socket::connection&gt;(std::__shared_ptr&lt;websocketpp::transport::asio::basic_socket::connection, (__gnu_cxx::_Lock_policy)2&gt; const&amp;, websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;*) (1 samples, 0.39%)</title><rect x="67.7" y="517" width="3.0" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="70.67" y="527.5" ></text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;) (19 samples, 7.39%)</title><rect x="686.8" y="1077" width="57.7" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="689.81" y="1087.5" >auto b..</text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::init(std::function&lt;void (std::error_code const&amp;)&gt;) (10 samples, 3.89%)</title><rect x="49.5" y="725" width="30.3" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="52.46" y="735.5" >we..</text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete(void*, boost::system::error_code const&amp;, unsigned long) (245 samples, 95.33%)</title><rect x="19.1" y="1429" width="743.6" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="22.11" y="1439.5" >boost::asio::detail::scheduler_operation::complete(void*, boost::system::error_code const&amp;, unsigned lo..</text>
</g>
<g >
<title>websocketpp::http::parser::parser::get_header(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="674.7" y="661" width="3.0" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="677.67" y="671.5" ></text>
</g>
<g >
<title>bool std::lexicographical_compare&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, websocketpp::utility::ci_less::nocase_compare&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, websocketpp::utility::ci_less::nocase_compare) (1 samples, 0.39%)</title><rect x="674.7" y="581" width="3.0" height="15.0" fill="rgb(246,151,46)" rx="2" ry="2" />
<text  x="677.67" y="591.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt; &gt;::tuple(std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt; &gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="677.7" y="1317" width="3.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="680.70" y="1327.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data() const (7 samples, 2.72%)</title><rect x="483.5" y="565" width="21.2" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="486.46" y="575.5" >s..</text>
</g>
<g >
<title>std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;::equal(std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;) const (88 samples, 34.24%)</title><rect x="216.4" y="549" width="267.1" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="219.38" y="559.5" >std::istreambuf_iterator&lt;char, std:..</text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, void (boost::system::error_code, unsigned long)&gt;::initiate&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_receive, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::mutable_buffers_1 const&amp;, int&gt;(boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_receive&amp;&amp;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;, boost::asio::mutable_buffers_1 const&amp;, int&amp;&amp;) (3 samples, 1.17%)</title><rect x="55.5" y="165" width="9.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="58.53" y="175.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (17 samples, 6.61%)</title><rect x="40.4" y="1349" width="51.5" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="43.35" y="1359.5" >void ..</text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, void (boost::system::error_code, unsigned long)&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt; &gt;::type, void (boost::system::error_code, unsigned long)&gt;::initiate((declval&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_receive&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::mutable_buffers_1 const&amp;&gt;)(), (declval&lt;int&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, void (boost::system::error_code, unsigned long), boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_receive, boost::asio::mutable_buffers_1 const&amp;, int&gt;(boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_receive&amp;&amp;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;, boost::asio::mutable_buffers_1 const&amp;, int&amp;&amp;) (3 samples, 1.17%)</title><rect x="55.5" y="181" width="9.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="58.53" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;::_Vector_base(std::_Vector_base&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="644.3" y="437" width="3.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="647.32" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; std::find_if&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, bool (*)(unsigned char)&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, bool (*)(unsigned char)) (1 samples, 0.39%)</title><rect x="671.6" y="661" width="3.1" height="15.0" fill="rgb(240,132,38)" rx="2" ry="2" />
<text  x="674.63" y="671.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code)&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::type, void (boost::system::error_code)&gt;::initiate((declval&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code), boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&gt;(boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (1 samples, 0.39%)</title><rect x="735.4" y="645" width="3.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="738.37" y="655.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::eq_int_type(int const&amp;, int const&amp;) (10 samples, 3.89%)</title><rect x="295.3" y="517" width="30.3" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="298.29" y="527.5" >st..</text>
</g>
<g >
<title>std::remove_reference&lt;std::allocator&lt;boost::asio::const_buffer&gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::allocator&lt;boost::asio::const_buffer&gt;&amp;&gt;(std::allocator&lt;boost::asio::const_buffer&gt;&amp;) (1 samples, 0.39%)</title><rect x="647.4" y="437" width="3.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="650.35" y="447.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;) (191 samples, 74.32%)</title><rect x="98.0" y="1205" width="579.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="101.02" y="1215.5" >void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_h..</text>
</g>
<g >
<title>std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;::operator*() const (2 samples, 0.78%)</title><rect x="104.1" y="581" width="6.1" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="107.09" y="591.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="1269" width="3.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="94.95" y="1279.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::log_http_result() (2 samples, 0.78%)</title><rect x="692.9" y="709" width="6.0" height="15.0" fill="rgb(239,141,38)" rx="2" ry="2" />
<text  x="695.88" y="719.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_send_op_base&lt;boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; &gt;::do_perform(boost::asio::detail::reactor_op*) (4 samples, 1.56%)</title><rect x="653.4" y="453" width="12.2" height="15.0" fill="rgb(240,151,39)" rx="2" ry="2" />
<text  x="656.42" y="463.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt;::tuple(std::tuple&lt;std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="52.5" y="389" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="55.49" y="399.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::tuple(std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="744.5" y="1349" width="3.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="747.47" y="1359.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="698.9" y="485" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="701.95" y="495.5" ></text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="1045" width="3.1" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="94.95" y="1055.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt;, void&gt;::complete&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;) (21 samples, 8.17%)</title><rect x="680.7" y="1221" width="63.8" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="683.74" y="1231.5" >void bo..</text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="641.3" y="661" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="644.28" y="671.5" ></text>
</g>
<g >
<title>boost::asio::detail::consuming_buffers&lt;boost::asio::const_buffer, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt; &gt;::consuming_buffers(boost::asio::detail::consuming_buffers&lt;boost::asio::const_buffer, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt; &gt;&amp;&amp;) (2 samples, 0.78%)</title><rect x="644.3" y="469" width="6.1" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="647.32" y="479.5" ></text>
</g>
<g >
<title>auto boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::async_accept&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, std::enable_if&lt;std::is_convertible&lt;boost::asio::ip::tcp, boost::asio::ip::tcp&gt;::value, void&gt;::type*) (2 samples, 0.78%)</title><rect x="79.8" y="709" width="6.1" height="15.0" fill="rgb(239,112,38)" rx="2" ry="2" />
<text  x="82.81" y="719.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (13 samples, 5.06%)</title><rect x="46.4" y="1061" width="39.5" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="49.42" y="1071.5" >voi..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, false&gt;::_Head_base(std::_Head_base&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, false&gt; const&amp;) (1 samples, 0.39%)</title><rect x="698.9" y="469" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="701.95" y="479.5" ></text>
</g>
<g >
<title>epoll_wait (2 samples, 0.78%)</title><rect x="762.7" y="1429" width="6.1" height="15.0" fill="rgb(237,202,35)" rx="2" ry="2" />
<text  x="765.68" y="1439.5" ></text>
</g>
<g >
<title>boost::asio::ip::address_v6::to_string[abi:cxx11]() const (1 samples, 0.39%)</title><rect x="695.9" y="597" width="3.0" height="15.0" fill="rgb(237,151,35)" rx="2" ry="2" />
<text  x="698.91" y="607.5" ></text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;::~rewrapped_handler() (3 samples, 1.17%)</title><rect x="747.5" y="1253" width="9.1" height="15.0" fill="rgb(241,151,40)" rx="2" ry="2" />
<text  x="750.51" y="1263.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;, true&gt;(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;) (1 samples, 0.39%)</title><rect x="698.9" y="645" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="701.95" y="655.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;::__call&lt;void, boost::system::error_code&amp;, unsigned long&amp;, 0ul, 1ul, 2ul, 3ul&gt;(std::tuple&lt;boost::system::error_code&amp;, unsigned long&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul, 3ul&gt;) (1 samples, 0.39%)</title><rect x="91.9" y="853" width="3.1" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="94.95" y="863.5" ></text>
</g>
<g >
<title>void boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;::operator()&lt;boost::system::error_code, unsigned long&gt;(boost::system::error_code const&amp;, unsigned long const&amp;) (19 samples, 7.39%)</title><rect x="686.8" y="1093" width="57.7" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="689.81" y="1103.5" >void b..</text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="1221" width="3.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="94.95" y="1231.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (std::error_code const&amp;, unsigned long), std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::error_code const&amp;, unsigned long)&gt; &gt;::_M_invoke(std::_Any_data const&amp;, std::error_code const&amp;, unsigned long&amp;&amp;) (190 samples, 73.93%)</title><rect x="101.1" y="805" width="576.6" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="104.05" y="815.5" >std::_Function_handler&lt;void (std::error_code const&amp;, unsigned long), std::_Bind..</text>
</g>
<g >
<title>boost::asio::detail::socket_ops::accept(int, sockaddr*, unsigned long*, boost::system::error_code&amp;) (3 samples, 1.17%)</title><rect x="19.1" y="1333" width="9.1" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="22.11" y="1343.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release() (3 samples, 1.17%)</title><rect x="747.5" y="645" width="9.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="750.51" y="655.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code)&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::type, void (boost::system::error_code)&gt;::initiate((declval&lt;boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_accept&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;*&amp;&amp;&gt;)(), (declval&lt;boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code), boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_accept, boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;*, boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;*&gt;(boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_accept&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;, boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;*&amp;&amp;, boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;*&amp;&amp;) (2 samples, 0.78%)</title><rect x="79.8" y="693" width="6.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="82.81" y="703.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;) (21 samples, 8.17%)</title><rect x="680.7" y="1381" width="63.8" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="683.74" y="1391.5" >void bo..</text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::handle_async_read(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long) (1 samples, 0.39%)</title><rect x="91.9" y="805" width="3.1" height="15.0" fill="rgb(247,141,46)" rx="2" ry="2" />
<text  x="94.95" y="815.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::set_timer(long, std::function&lt;void (std::error_code const&amp;)&gt;) (1 samples, 0.39%)</title><rect x="64.6" y="309" width="3.1" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="67.63" y="319.5" ></text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;) (16 samples, 6.23%)</title><rect x="40.4" y="1253" width="48.5" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="43.35" y="1263.5" >void..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;::__normal_iterator&lt;boost::asio::const_buffer*&gt;(__gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer*, __gnu_cxx::__enable_if&lt;std::__are_same&lt;boost::asio::const_buffer*, boost::asio::const_buffer*&gt;::__value, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;::__type&gt; const&amp;) (1 samples, 0.39%)</title><rect x="680.7" y="1077" width="3.1" height="15.0" fill="rgb(242,132,40)" rx="2" ry="2" />
<text  x="683.74" y="1087.5" ></text>
</g>
<g >
<title>void boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_accept::operator()&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;*, boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;*) const (2 samples, 0.78%)</title><rect x="79.8" y="661" width="6.1" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="82.81" y="671.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::basic_socket::connection::~connection() (3 samples, 1.17%)</title><rect x="747.5" y="709" width="9.1" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="750.51" y="719.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::input_iterator_tag) (1 samples, 0.39%)</title><rect x="91.9" y="549" width="3.1" height="15.0" fill="rgb(248,131,47)" rx="2" ry="2" />
<text  x="94.95" y="559.5" ></text>
</g>
<g >
<title>void boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_receive::operator()&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::mutable_buffers_1&gt;(boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;, boost::asio::mutable_buffers_1 const&amp;, int) const (3 samples, 1.17%)</title><rect x="55.5" y="149" width="9.1" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="58.53" y="159.5" ></text>
</g>
<g >
<title>boost::asio::detail::socket_ops::non_blocking_recv1(int, void*, unsigned long, int, bool, boost::system::error_code&amp;, unsigned long&amp;) (2 samples, 0.78%)</title><rect x="58.6" y="53" width="6.0" height="15.0" fill="rgb(242,151,41)" rx="2" ry="2" />
<text  x="61.56" y="63.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code, unsigned long)&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::type, void (boost::system::error_code, unsigned long)&gt;::initiate((declval&lt;boost::asio::detail::initiate_async_write_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;&gt;)(), (declval&lt;std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; const&amp;&gt;)(), (declval&lt;boost::asio::detail::transfer_all_t&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code, unsigned long), boost::asio::detail::initiate_async_write_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; const&amp;, boost::asio::detail::transfer_all_t&gt;(boost::asio::detail::initiate_async_write_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; const&amp;, boost::asio::detail::transfer_all_t&amp;&amp;) (7 samples, 2.72%)</title><rect x="644.3" y="661" width="21.3" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="647.32" y="671.5" >s..</text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code, unsigned long)&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::type, void (boost::system::error_code, unsigned long)&gt;::initiate((declval&lt;boost::asio::detail::initiate_async_read_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::mutable_buffers_1 const&amp;&gt;)(), (declval&lt;boost::asio::detail::transfer_at_least_t&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code, unsigned long), boost::asio::detail::initiate_async_read_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1 const&amp;, boost::asio::detail::transfer_at_least_t&gt;(boost::asio::detail::initiate_async_read_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;, boost::asio::mutable_buffers_1 const&amp;, boost::asio::detail::transfer_at_least_t&amp;&amp;) (3 samples, 1.17%)</title><rect x="55.5" y="277" width="9.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="58.53" y="287.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code, unsigned long)&gt;::initiate&lt;boost::asio::detail::initiate_async_read_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::mutable_buffers_1 const&amp;, boost::asio::detail::transfer_at_least_t&gt;(boost::asio::detail::initiate_async_read_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, boost::asio::mutable_buffers_1 const&amp;, boost::asio::detail::transfer_at_least_t&amp;&amp;) (3 samples, 1.17%)</title><rect x="55.5" y="261" width="9.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="58.53" y="271.5" ></text>
</g>
<g >
<title>__libc_read (1 samples, 0.39%)</title><rect x="783.9" y="1541" width="3.1" height="15.0" fill="rgb(241,154,40)" rx="2" ry="2" />
<text  x="786.93" y="1551.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;::operator()() (1 samples, 0.39%)</title><rect x="91.9" y="901" width="3.1" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="94.95" y="911.5" ></text>
</g>
<g >
<title>boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::cancel(boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::implementation_type&amp;, boost::system::error_code&amp;) (1 samples, 0.39%)</title><rect x="686.8" y="693" width="3.0" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="689.81" y="703.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (15 samples, 5.84%)</title><rect x="43.4" y="1237" width="45.5" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="46.39" y="1247.5" >boos..</text>
</g>
<g >
<title>non-virtual thunk to std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream() (1 samples, 0.39%)</title><rect x="771.8" y="1525" width="3.0" height="15.0" fill="rgb(244,218,43)" rx="2" ry="2" />
<text  x="774.79" y="1535.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;::~shared_ptr() (1 samples, 0.39%)</title><rect x="729.3" y="453" width="3.0" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="732.30" y="463.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;::operator()() (191 samples, 74.32%)</title><rect x="98.0" y="1125" width="579.7" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="101.02" y="1135.5" >boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_st..</text>
</g>
<g >
<title>std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;::_M_get() const (2 samples, 0.78%)</title><rect x="477.4" y="533" width="6.1" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="480.39" y="543.5" ></text>
</g>
<g >
<title>main (247 samples, 96.11%)</title><rect x="19.1" y="1509" width="749.7" height="15.0" fill="rgb(247,83,46)" rx="2" ry="2" />
<text  x="22.11" y="1519.5" >main</text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;::type std::__invoke&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;(void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;) (18 samples, 7.00%)</title><rect x="686.8" y="757" width="54.6" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="689.81" y="767.5" >std::..</text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt;::operator()&lt;std::error_code const&amp;, void&gt;(std::error_code const&amp;) (10 samples, 3.89%)</title><rect x="49.5" y="661" width="30.3" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="52.46" y="671.5" >vo..</text>
</g>
<g >
<title>boost::asio::detail::completion_handler&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt; &gt;::ptr::reset() (1 samples, 0.39%)</title><rect x="95.0" y="1221" width="3.0" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="97.98" y="1231.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;::operator()&lt;boost::system::error_code&amp;, unsigned long&amp;, void&gt;(boost::system::error_code&amp;, unsigned long&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="869" width="3.1" height="15.0" fill="rgb(242,131,41)" rx="2" ry="2" />
<text  x="94.95" y="879.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt; &gt;::~tuple() (1 samples, 0.39%)</title><rect x="95.0" y="1157" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="97.98" y="1167.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::start_op(int, int, boost::asio::detail::epoll_reactor::descriptor_state*&amp;, boost::asio::detail::reactor_op*, bool, bool) (2 samples, 0.78%)</title><rect x="79.8" y="597" width="6.1" height="15.0" fill="rgb(241,151,39)" rx="2" ry="2" />
<text  x="82.81" y="607.5" ></text>
</g>
<g >
<title>boost::system::error_code::assign(int, boost::system::error_category const&amp;) (1 samples, 0.39%)</title><rect x="25.2" y="1317" width="3.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="28.18" y="1327.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="1013" width="3.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="94.95" y="1023.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::handle_pre_init(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;) (10 samples, 3.89%)</title><rect x="49.5" y="597" width="30.3" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="52.46" y="607.5" >we..</text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::__false_type) (1 samples, 0.39%)</title><rect x="91.9" y="565" width="3.1" height="15.0" fill="rgb(248,131,47)" rx="2" ry="2" />
<text  x="94.95" y="575.5" ></text>
</g>
<g >
<title>boost::asio::io_context::run() (247 samples, 96.11%)</title><rect x="19.1" y="1477" width="749.7" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="22.11" y="1487.5" >boost::asio::io_context::run()</text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (16 samples, 6.23%)</title><rect x="40.4" y="1301" width="48.5" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="43.35" y="1311.5" >std:..</text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="674.7" y="645" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="677.67" y="655.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::__call&lt;void, boost::system::error_code const&amp;, 0ul, 1ul, 2ul, 3ul&gt;(std::tuple&lt;boost::system::error_code const&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul, 3ul&gt;) (1 samples, 0.39%)</title><rect x="756.6" y="949" width="3.0" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="759.61" y="959.5" ></text>
</g>
<g >
<title>boost::asio::ip::address::to_string[abi:cxx11]() const (1 samples, 0.39%)</title><rect x="695.9" y="613" width="3.0" height="15.0" fill="rgb(237,151,35)" rx="2" ry="2" />
<text  x="698.91" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt;(std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;char&gt; const&amp;) (174 samples, 67.70%)</title><rect x="104.1" y="629" width="528.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="107.09" y="639.5" >std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;..</text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;) (174 samples, 67.70%)</title><rect x="104.1" y="613" width="528.1" height="15.0" fill="rgb(239,131,38)" rx="2" ry="2" />
<text  x="107.09" y="623.5" >void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::alloc..</text>
</g>
<g >
<title>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::~basic_stream_socket() (3 samples, 1.17%)</title><rect x="747.5" y="613" width="9.1" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="750.51" y="623.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;boost::asio::io_context::strand, (__gnu_cxx::_Lock_policy)2&gt;::get() const (1 samples, 0.39%)</title><rect x="738.4" y="629" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="741.40" y="639.5" ></text>
</g>
<g >
<title>boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::cancel(boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::implementation_type&amp;, boost::system::error_code&amp;) (1 samples, 0.39%)</title><rect x="732.3" y="533" width="3.1" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="735.33" y="543.5" ></text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;) (21 samples, 8.17%)</title><rect x="680.7" y="1253" width="63.8" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="683.74" y="1263.5" >void bo..</text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; boost::asio::ip::operator&lt;&lt; &lt;char, std::char_traits&lt;char&gt;, boost::asio::ip::tcp&gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt; const&amp;) (1 samples, 0.39%)</title><rect x="695.9" y="661" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="698.91" y="671.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (3 samples, 1.17%)</title><rect x="747.5" y="1029" width="9.1" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="750.51" y="1039.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;*) (14 samples, 5.45%)</title><rect x="46.4" y="1189" width="42.5" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="49.42" y="1199.5" >void..</text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;*) (191 samples, 74.32%)</title><rect x="98.0" y="981" width="579.7" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="101.02" y="991.5" >void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;webs..</text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;&amp;, boost::asio::io_context::strand*) const (1 samples, 0.39%)</title><rect x="756.6" y="1077" width="3.0" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="759.61" y="1087.5" ></text>
</g>
<g >
<title>void boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::async_accept&lt;boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;(boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::implementation_type&amp;, boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;&amp;, boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;*, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; const&amp;) (2 samples, 0.78%)</title><rect x="79.8" y="645" width="6.1" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="82.81" y="655.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const*, std::_Rb_tree_node_base const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="635.2" y="629" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="638.21" y="639.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, void&gt;::complete&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;) (192 samples, 74.71%)</title><rect x="95.0" y="1397" width="582.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="97.98" y="1407.5" >void boost::asio::detail::handler_work&lt;boost::asio::detail::read_op&lt;boost::asio:..</text>
</g>
<g >
<title>void websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;::operator()&lt;boost::system::error_code, unsigned long&gt;(boost::system::error_code, unsigned long) (1 samples, 0.39%)</title><rect x="91.9" y="885" width="3.1" height="15.0" fill="rgb(247,131,46)" rx="2" ry="2" />
<text  x="94.95" y="895.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt;::__call&lt;void, std::error_code const&amp;, 0ul, 1ul, 2ul&gt;(std::tuple&lt;std::error_code const&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul&gt;) (12 samples, 4.67%)</title><rect x="49.5" y="805" width="36.4" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="52.46" y="815.5" >voi..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, unsigned long, unsigned long) (1 samples, 0.39%)</title><rect x="632.2" y="661" width="3.0" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="635.18" y="671.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactor_op::perform() (5 samples, 1.95%)</title><rect x="650.4" y="469" width="15.2" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="653.39" y="479.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;*) (5 samples, 1.95%)</title><rect x="747.5" y="1365" width="15.2" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="750.51" y="1375.5" ></text>
</g>
<g >
<title>boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::write_op(boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="677.7" y="1381" width="3.0" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="680.70" y="1391.5" ></text>
</g>
<g >
<title>boost::asio::detail::conditionally_enabled_mutex::scoped_lock::scoped_lock(boost::asio::detail::conditionally_enabled_mutex&amp;) (1 samples, 0.39%)</title><rect x="750.5" y="517" width="3.1" height="15.0" fill="rgb(247,151,47)" rx="2" ry="2" />
<text  x="753.54" y="527.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::handle_post_init(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;) (4 samples, 1.56%)</title><rect x="55.5" y="453" width="12.2" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="58.53" y="463.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_accept_op_base&lt;boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::ip::tcp&gt;::do_perform(boost::asio::detail::reactor_op*) (2 samples, 0.78%)</title><rect x="79.8" y="565" width="6.1" height="15.0" fill="rgb(240,151,39)" rx="2" ry="2" />
<text  x="82.81" y="575.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (192 samples, 74.71%)</title><rect x="95.0" y="1301" width="582.7" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="97.98" y="1311.5" >std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio:..</text>
</g>
<g >
<title>void boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_send::operator()&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; &gt;(boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;, boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;, int) const (7 samples, 2.72%)</title><rect x="644.3" y="533" width="21.3" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="647.32" y="543.5" >v..</text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_accept_op&lt;boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::ip::tcp, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::ptr::reset() (1 samples, 0.39%)</title><rect x="31.2" y="1365" width="3.1" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="34.25" y="1375.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="744.5" y="1333" width="3.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="747.47" y="1343.5" ></text>
</g>
<g >
<title>void boost::asio::detail::reactive_socket_service_base::async_receive&lt;boost::asio::mutable_buffers_1, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, boost::asio::mutable_buffers_1 const&amp;, int, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; const&amp;) (3 samples, 1.17%)</title><rect x="55.5" y="133" width="9.1" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="58.53" y="143.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;*) (1 samples, 0.39%)</title><rect x="91.9" y="1157" width="3.1" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="94.95" y="1167.5" ></text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;) (4 samples, 1.56%)</title><rect x="747.5" y="1285" width="12.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="750.51" y="1295.5" ></text>
</g>
<g >
<title>boost::asio::detail::wait_handler&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (6 samples, 2.33%)</title><rect x="744.5" y="1413" width="18.2" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="747.47" y="1423.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::descriptor_state::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (25 samples, 9.73%)</title><rect x="19.1" y="1413" width="75.9" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="22.11" y="1423.5" >boost::a..</text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;) (192 samples, 74.71%)</title><rect x="95.0" y="1317" width="582.7" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="97.98" y="1327.5" >auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::rewrapped_ha..</text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="635.2" y="661" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="638.21" y="671.5" ></text>
</g>
<g >
<title>boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::operator()(boost::system::error_code const&amp;, unsigned long, int) (191 samples, 74.32%)</title><rect x="98.0" y="1109" width="579.7" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="101.02" y="1119.5" >boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::..</text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;, boost::asio::io_context::strand*) const (16 samples, 6.23%)</title><rect x="40.4" y="1269" width="48.5" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="43.35" y="1279.5" >void..</text>
</g>
<g >
<title>bool websocketpp::processor::is_websocket_handshake&lt;websocketpp::http::parser::request&gt;(websocketpp::http::parser::request&amp;) (1 samples, 0.39%)</title><rect x="101.1" y="693" width="3.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="104.05" y="703.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;*) (1 samples, 0.39%)</title><rect x="91.9" y="949" width="3.1" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="94.95" y="959.5" ></text>
</g>
<g >
<title>std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;::operator++() (4 samples, 1.56%)</title><rect x="620.0" y="565" width="12.2" height="15.0" fill="rgb(240,146,39)" rx="2" ry="2" />
<text  x="623.04" y="575.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="1173" width="3.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="94.95" y="1183.5" ></text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;) (19 samples, 7.39%)</title><rect x="686.8" y="1013" width="57.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="689.81" y="1023.5" >void b..</text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;*) (192 samples, 74.71%)</title><rect x="95.0" y="1365" width="582.7" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="97.98" y="1375.5" >void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost..</text>
</g>
<g >
<title>boost::asio::detail::socket_ops::non_blocking_accept(int, unsigned char, sockaddr*, unsigned long*, boost::system::error_code&amp;, int&amp;) (2 samples, 0.78%)</title><rect x="79.8" y="549" width="6.1" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="82.81" y="559.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="759.6" y="1301" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="762.65" y="1311.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;::operator()&lt;boost::system::error_code&amp;, unsigned long&amp;, void&gt;(boost::system::error_code&amp;, unsigned long&amp;) (19 samples, 7.39%)</title><rect x="686.8" y="901" width="57.7" height="15.0" fill="rgb(242,131,41)" rx="2" ry="2" />
<text  x="689.81" y="911.5" >void s..</text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::~connection() (3 samples, 1.17%)</title><rect x="747.5" y="741" width="9.1" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="750.51" y="751.5" ></text>
</g>
<g >
<title>websocketpp::server&lt;websocketpp::config::asio&gt;::handle_accept(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;) (12 samples, 4.67%)</title><rect x="49.5" y="757" width="36.4" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="52.46" y="767.5" >web..</text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;std::decay&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;&gt;::type, boost::system::error_code&gt; boost::asio::detail::bind_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;, boost::system::error_code&gt;(std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;) (1 samples, 0.39%)</title><rect x="85.9" y="1093" width="3.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="88.88" y="1103.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code)&gt;::initiate&lt;boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_accept, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;*, boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;*&gt;(boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_accept&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;*&amp;&amp;, boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;*&amp;&amp;) (2 samples, 0.78%)</title><rect x="79.8" y="677" width="6.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="82.81" y="687.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;::_Bind(std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="677.7" y="1333" width="3.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="680.70" y="1343.5" ></text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;, boost::asio::io_context::strand*) const (1 samples, 0.39%)</title><rect x="91.9" y="1237" width="3.1" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="94.95" y="1247.5" ></text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, ...) (1 samples, 0.39%)</title><rect x="91.9" y="1125" width="3.1" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="94.95" y="1135.5" ></text>
</g>
<g >
<title>boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::operator()(boost::system::error_code const&amp;, unsigned long, int) (1 samples, 0.39%)</title><rect x="91.9" y="1077" width="3.1" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="94.95" y="1087.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="101.1" y="661" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="104.05" y="671.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_recv_op&lt;boost::asio::mutable_buffers_1, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (192 samples, 74.71%)</title><rect x="95.0" y="1413" width="582.7" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="97.98" y="1423.5" >boost::asio::detail::reactive_socket_recv_op&lt;boost::asio::mutable_buffers_1, boo..</text>
</g>
<g >
<title>auto boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::async_write_some&lt;boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt; &gt;(boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;) (7 samples, 2.72%)</title><rect x="644.3" y="581" width="21.3" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="647.32" y="591.5" >a..</text>
</g>
<g >
<title>std::enable_if&lt;std::__and_&lt;std::__not_&lt;std::__is_tuple_like&lt;boost::asio::const_buffer*&gt; &gt;, std::is_move_constructible&lt;boost::asio::const_buffer*&gt;, std::is_move_assignable&lt;boost::asio::const_buffer*&gt; &gt;::value, void&gt;::type std::swap&lt;boost::asio::const_buffer*&gt;(boost::asio::const_buffer*&amp;, boost::asio::const_buffer*&amp;) (1 samples, 0.39%)</title><rect x="644.3" y="421" width="3.1" height="15.0" fill="rgb(243,146,42)" rx="2" ry="2" />
<text  x="647.32" y="431.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;*) (192 samples, 74.71%)</title><rect x="95.0" y="1333" width="582.7" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="97.98" y="1343.5" >void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost..</text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::handle_timer(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;) (1 samples, 0.39%)</title><rect x="756.6" y="901" width="3.0" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="759.61" y="911.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::transport::asio::basic_socket::connection&gt;::~shared_ptr() (1 samples, 0.39%)</title><rect x="64.6" y="293" width="3.1" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="67.63" y="303.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt;::_Bind(std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt; const&amp;) (1 samples, 0.39%)</title><rect x="52.5" y="405" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="55.49" y="415.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (191 samples, 74.32%)</title><rect x="98.0" y="1061" width="579.7" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="101.02" y="1071.5" >std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio..</text>
</g>
<g >
<title>std::_Function_handler&lt;void (std::error_code const&amp;), std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt; &gt;::_M_invoke(std::_Any_data const&amp;, std::error_code const&amp;) (4 samples, 1.56%)</title><rect x="55.5" y="421" width="12.2" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="58.53" y="431.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;&gt;(int, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;) (1 samples, 0.39%)</title><rect x="85.9" y="1077" width="3.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="88.88" y="1087.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt;::operator()&lt;std::error_code const&amp;, void&gt;(std::error_code const&amp;) (4 samples, 1.56%)</title><rect x="55.5" y="405" width="12.2" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="58.53" y="415.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::function&lt;void (std::error_code const&amp;)&gt;, false&gt;::_Head_base(std::_Head_base&lt;1ul, std::function&lt;void (std::error_code const&amp;)&gt;, false&gt; const&amp;) (1 samples, 0.39%)</title><rect x="85.9" y="997" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="88.88" y="1007.5" ></text>
</g>
<g >
<title>__libc_free (1 samples, 0.39%)</title><rect x="780.9" y="1541" width="3.0" height="15.0" fill="rgb(246,154,46)" rx="2" ry="2" />
<text  x="783.89" y="1551.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, void (boost::system::error_code, unsigned long)&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt; &gt;::type, void (boost::system::error_code, unsigned long)&gt;::initiate((declval&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_send&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;&gt;)(), (declval&lt;int&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, void (boost::system::error_code, unsigned long), boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_send, boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;, int&gt;(boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_send&amp;&amp;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;, boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;, int&amp;&amp;) (7 samples, 2.72%)</title><rect x="644.3" y="565" width="21.3" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="647.32" y="575.5" >s..</text>
</g>
<g >
<title>boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::construct(boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::implementation_type&amp;) (1 samples, 0.39%)</title><rect x="76.8" y="517" width="3.0" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="79.77" y="527.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::error_code const&amp;, unsigned long)&gt;::operator()&lt;std::error_code const&amp;, unsigned long, void&gt;(std::error_code const&amp;, unsigned long&amp;&amp;) (190 samples, 73.93%)</title><rect x="101.1" y="789" width="576.6" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="104.05" y="799.5" >void std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std..</text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, ...) (1 samples, 0.39%)</title><rect x="91.9" y="917" width="3.1" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="94.95" y="927.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt;::operator()&lt;std::error_code const&amp;, void&gt;(std::error_code const&amp;) (12 samples, 4.67%)</title><rect x="49.5" y="821" width="36.4" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="52.46" y="831.5" >voi..</text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;) (1 samples, 0.39%)</title><rect x="756.6" y="1045" width="3.0" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="759.61" y="1055.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::handle_read_handshake(std::error_code const&amp;, unsigned long) (190 samples, 73.93%)</title><rect x="101.1" y="725" width="576.6" height="15.0" fill="rgb(247,141,46)" rx="2" ry="2" />
<text  x="104.05" y="735.5" >websocketpp::connection&lt;websocketpp::config::asio&gt;::handle_read_handshake(std::..</text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp; std::__get_helper&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt;(std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt;&amp;) (1 samples, 0.39%)</title><rect x="741.4" y="741" width="3.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="744.44" y="751.5" ></text>
</g>
<g >
<title>boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;&amp; boost::asio::detail::service_registry::use_service&lt;boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt; &gt;(boost::asio::io_context&amp;) (1 samples, 0.39%)</title><rect x="73.7" y="517" width="3.1" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="76.74" y="527.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_accept_op_base&lt;boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::ip::tcp&gt;::do_assign() (2 samples, 0.78%)</title><rect x="34.3" y="1365" width="6.1" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="37.28" y="1375.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::basic_socket::connection::pre_init(std::function&lt;void (std::error_code const&amp;)&gt;) (10 samples, 3.89%)</title><rect x="49.5" y="709" width="30.3" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="52.46" y="719.5" >we..</text>
</g>
<g >
<title>boost::asio::detail::buffer_sequence_adapter&lt;boost::asio::const_buffer, boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; &gt;::buffer_sequence_adapter(boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;) (1 samples, 0.39%)</title><rect x="650.4" y="453" width="3.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="653.39" y="463.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::basic_socket::connection::post_init(std::function&lt;void (std::error_code const&amp;)&gt;) (6 samples, 2.33%)</title><rect x="49.5" y="565" width="18.2" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="52.46" y="575.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::descriptor_state::perform_io(unsigned int) (4 samples, 1.56%)</title><rect x="19.1" y="1397" width="12.1" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="22.11" y="1407.5" ></text>
</g>
<g >
<title>std::tuple&lt;websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~tuple() (1 samples, 0.39%)</title><rect x="88.9" y="1253" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="91.91" y="1263.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactor_op::perform() (2 samples, 0.78%)</title><rect x="79.8" y="581" width="6.1" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="82.81" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (3 samples, 1.17%)</title><rect x="747.5" y="1013" width="9.1" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="750.51" y="1023.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::heap_entry, std::allocator&lt;boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::heap_entry&gt; &gt;::begin() const (1 samples, 0.39%)</title><rect x="70.7" y="389" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="73.70" y="399.5" ></text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;::operator()() (21 samples, 8.17%)</title><rect x="680.7" y="1141" width="63.8" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="683.74" y="1151.5" >boost::..</text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::function(std::function&lt;void (std::error_code const&amp;)&gt; const&amp;) (1 samples, 0.39%)</title><rect x="698.9" y="565" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="701.95" y="575.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::operator()(std::error_code const&amp;) const (19 samples, 7.39%)</title><rect x="686.8" y="821" width="57.7" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="689.81" y="831.5" >std::f..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::eq_int_type(int const&amp;, int const&amp;) (2 samples, 0.78%)</title><rect x="550.2" y="549" width="6.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="553.23" y="559.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;::operator()() (1 samples, 0.39%)</title><rect x="91.9" y="1093" width="3.1" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="94.95" y="1103.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.39%)</title><rect x="774.8" y="1509" width="3.1" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="777.82" y="1519.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;::type std::__invoke&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;(void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;) (4 samples, 1.56%)</title><rect x="55.5" y="373" width="12.2" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="58.53" y="383.5" ></text>
</g>
<g >
<title>bool std::operator!=&lt;char, std::char_traits&lt;char&gt; &gt;(std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;) (101 samples, 39.30%)</title><rect x="176.9" y="565" width="306.6" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="179.93" y="575.5" >bool std::operator!=&lt;char, std::char_trai..</text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::async_write(char const*, unsigned long, std::function&lt;void (std::error_code const&amp;)&gt;) (7 samples, 2.72%)</title><rect x="644.3" y="693" width="21.3" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="647.32" y="703.5" >w..</text>
</g>
<g >
<title>std::tuple&lt;websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::tuple(std::tuple&lt;websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="85.9" y="1045" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="88.88" y="1055.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;, unsigned long&gt;::type std::__invoke&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;, unsigned long&gt;(void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;, unsigned long&amp;&amp;) (190 samples, 73.93%)</title><rect x="101.1" y="757" width="576.6" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="104.05" y="767.5" >std::__invoke_result&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::..</text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;) (13 samples, 5.06%)</title><rect x="46.4" y="1013" width="39.5" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="49.42" y="1023.5" >voi..</text>
</g>
<g >
<title>std::_Function_handler&lt;void (std::error_code const&amp;), std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt; &gt;::_M_invoke(std::_Any_data const&amp;, std::error_code const&amp;) (6 samples, 2.33%)</title><rect x="49.5" y="533" width="18.2" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="52.46" y="543.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::start_accept_op(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, boost::asio::detail::reactor_op*, bool, bool) (2 samples, 0.78%)</title><rect x="79.8" y="629" width="6.1" height="15.0" fill="rgb(241,151,39)" rx="2" ry="2" />
<text  x="82.81" y="639.5" ></text>
</g>
<g >
<title>_IO_vsprintf (1 samples, 0.39%)</title><rect x="777.9" y="1493" width="3.0" height="15.0" fill="rgb(243,132,42)" rx="2" ry="2" />
<text  x="780.86" y="1503.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;*) (191 samples, 74.32%)</title><rect x="98.0" y="1189" width="579.7" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="101.02" y="1199.5" >void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::rewrapped_ha..</text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;&gt;::type std::__invoke&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;&gt;(void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;) (19 samples, 7.39%)</title><rect x="686.8" y="869" width="57.7" height="15.0" fill="rgb(242,146,41)" rx="2" ry="2" />
<text  x="689.81" y="879.5" >std::_..</text>
</g>
<g >
<title>boost::asio::detail::socket_ops::get_last_error(boost::system::error_code&amp;, bool) (1 samples, 0.39%)</title><rect x="22.1" y="1317" width="3.1" height="15.0" fill="rgb(241,151,39)" rx="2" ry="2" />
<text  x="25.14" y="1327.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::start_op(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, int, boost::asio::detail::reactor_op*, bool, bool, bool) (2 samples, 0.78%)</title><rect x="58.6" y="117" width="6.0" height="15.0" fill="rgb(241,151,39)" rx="2" ry="2" />
<text  x="61.56" y="127.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, false&gt;::_Head_base&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt; &gt;(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="677.7" y="1285" width="3.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="680.70" y="1295.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;&gt;::type std::__invoke&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;&gt;(void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;) (190 samples, 73.93%)</title><rect x="101.1" y="869" width="576.6" height="15.0" fill="rgb(242,146,41)" rx="2" ry="2" />
<text  x="104.05" y="879.5" >std::__invoke_result&lt;void (websocketpp::transport::asio::connection&lt;websocketpp..</text>
</g>
<g >
<title>boost::asio::detail::scheduler::run(boost::system::error_code&amp;) (247 samples, 96.11%)</title><rect x="19.1" y="1461" width="749.7" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="22.11" y="1471.5" >boost::asio::detail::scheduler::run(boost::system::error_code&amp;)</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::lower_bound(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="641.3" y="645" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="644.28" y="655.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::weak_ptr&lt;void&gt;)&gt;::operator()(std::weak_ptr&lt;void&gt;) const (1 samples, 0.39%)</title><rect x="91.9" y="661" width="3.1" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="94.95" y="671.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;) (2 samples, 0.78%)</title><rect x="729.3" y="581" width="6.1" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="732.30" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, void&gt;(std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="597" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="94.95" y="607.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;) (1 samples, 0.39%)</title><rect x="756.6" y="1205" width="3.0" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="759.61" y="1215.5" ></text>
</g>
<g >
<title>void boost::asio::detail::epoll_reactor::schedule_timer&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;(boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;&amp;, boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt;::time_type const&amp;, boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::per_timer_data&amp;, boost::asio::detail::wait_op*) (1 samples, 0.39%)</title><rect x="70.7" y="469" width="3.0" height="15.0" fill="rgb(240,131,39)" rx="2" ry="2" />
<text  x="73.70" y="479.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;::binder1(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;, boost::system::error_code const&amp;) (1 samples, 0.39%)</title><rect x="744.5" y="1397" width="3.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="747.47" y="1407.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::handle_transport_init(std::error_code const&amp;) (4 samples, 1.56%)</title><rect x="55.5" y="341" width="12.2" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="58.53" y="351.5" ></text>
</g>
<g >
<title>boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;::~wrapped_handler() (1 samples, 0.39%)</title><rect x="88.9" y="1285" width="3.0" height="15.0" fill="rgb(241,151,40)" rx="2" ry="2" />
<text  x="91.91" y="1295.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;) (18 samples, 7.00%)</title><rect x="686.8" y="741" width="54.6" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="689.81" y="751.5" >void ..</text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;, boost::asio::io_context::strand*) const (1 samples, 0.39%)</title><rect x="91.9" y="997" width="3.1" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="94.95" y="1007.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count(std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt; const&amp;) (1 samples, 0.39%)</title><rect x="698.9" y="421" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="701.95" y="431.5" ></text>
</g>
<g >
<title>void boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;::operator()&lt;boost::system::error_code, unsigned long&gt;(boost::system::error_code const&amp;, unsigned long const&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="1061" width="3.1" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="94.95" y="1071.5" ></text>
</g>
<g >
<title>lbpf (257 samples, 100.00%)</title><rect x="10.0" y="1557" width="780.0" height="15.0" fill="rgb(247,102,47)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" >lbpf</text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt;::__call&lt;void, std::error_code const&amp;, 0ul, 1ul, 2ul, 3ul&gt;(std::tuple&lt;std::error_code const&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul, 3ul&gt;) (6 samples, 2.33%)</title><rect x="49.5" y="501" width="18.2" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="52.46" y="511.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~tuple() (3 samples, 1.17%)</title><rect x="747.5" y="1221" width="9.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="750.51" y="1231.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;) (1 samples, 0.39%)</title><rect x="756.6" y="1237" width="3.0" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="759.61" y="1247.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt; &gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation) (3 samples, 1.17%)</title><rect x="747.5" y="1109" width="9.1" height="15.0" fill="rgb(251,146,50)" rx="2" ry="2" />
<text  x="750.51" y="1119.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code, unsigned long)&gt;::initiate&lt;boost::asio::detail::initiate_async_write_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; const&amp;, boost::asio::detail::transfer_all_t&gt;(boost::asio::detail::initiate_async_write_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; const&amp;, boost::asio::detail::transfer_all_t&amp;&amp;) (7 samples, 2.72%)</title><rect x="644.3" y="645" width="21.3" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="647.32" y="655.5" >v..</text>
</g>
<g >
<title>timerfd_settime (1 samples, 0.39%)</title><rect x="735.4" y="565" width="3.0" height="15.0" fill="rgb(236,148,34)" rx="2" ry="2" />
<text  x="738.37" y="575.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (21 samples, 8.17%)</title><rect x="680.7" y="1237" width="63.8" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="683.74" y="1247.5" >boost::..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const*, std::_Rb_tree_node_base const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="674.7" y="613" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="677.67" y="623.5" ></text>
</g>
<g >
<title>bool std::__lexicographical_compare_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;websocketpp::utility::ci_less::nocase_compare&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;websocketpp::utility::ci_less::nocase_compare&gt;) (1 samples, 0.39%)</title><rect x="665.6" y="613" width="3.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="668.56" y="623.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (std::error_code const&amp;, unsigned long), std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::error_code const&amp;, unsigned long)&gt; &gt;::_M_invoke(std::_Any_data const&amp;, std::error_code const&amp;, unsigned long&amp;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="773" width="3.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="94.95" y="783.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (3 samples, 1.17%)</title><rect x="747.5" y="885" width="9.1" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="750.51" y="895.5" ></text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::sbumpc() (6 samples, 2.33%)</title><rect x="504.7" y="565" width="18.2" height="15.0" fill="rgb(243,146,42)" rx="2" ry="2" />
<text  x="507.71" y="575.5" ></text>
</g>
<g >
<title>bool boost_asio_handler_cont_helpers::is_continuation&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt; &gt;(boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;) (1 samples, 0.39%)</title><rect x="55.5" y="117" width="3.1" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="58.53" y="127.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate(std::error_code const&amp;) (14 samples, 5.45%)</title><rect x="698.9" y="709" width="42.5" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="701.95" y="719.5" >webs..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;1ul, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="85.9" y="1013" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="88.88" y="1023.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt;))(websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::error_code const&amp;)&gt;::~_Bind() (3 samples, 1.17%)</title><rect x="747.5" y="917" width="9.1" height="15.0" fill="rgb(242,146,41)" rx="2" ry="2" />
<text  x="750.51" y="927.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt;))(websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::error_code const&amp;)&gt; &gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation) (1 samples, 0.39%)</title><rect x="698.9" y="549" width="3.1" height="15.0" fill="rgb(251,146,50)" rx="2" ry="2" />
<text  x="701.95" y="559.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, false&gt;::~_Head_base() (3 samples, 1.17%)</title><rect x="747.5" y="1157" width="9.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="750.51" y="1167.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;) (14 samples, 5.45%)</title><rect x="46.4" y="1173" width="42.5" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="49.42" y="1183.5" >void..</text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="1285" width="3.1" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="94.95" y="1295.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (1 samples, 0.39%)</title><rect x="88.9" y="1237" width="3.0" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="91.91" y="1247.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="101.1" y="645" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="104.05" y="655.5" ></text>
</g>
<g >
<title>websocketpp::http::parser::parser::get_header(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="101.1" y="677" width="3.0" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="104.05" y="687.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_send_op&lt;boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (22 samples, 8.56%)</title><rect x="677.7" y="1413" width="66.8" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="680.70" y="1423.5" >boost::..</text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="981" width="3.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="94.95" y="991.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::__ops::_Iter_pred&lt;bool (*)(unsigned char)&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;) (1 samples, 0.39%)</title><rect x="671.6" y="613" width="3.1" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="674.63" y="623.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, false&gt;::_Head_base&lt;std::function&lt;void (std::error_code const&amp;)&gt;&amp;&gt;(std::function&lt;void (std::error_code const&amp;)&gt;&amp;) (1 samples, 0.39%)</title><rect x="698.9" y="581" width="3.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="701.95" y="591.5" ></text>
</g>
<g >
<title>std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;::operator++() (4 samples, 1.56%)</title><rect x="110.2" y="581" width="12.1" height="15.0" fill="rgb(240,146,39)" rx="2" ry="2" />
<text  x="113.16" y="591.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="1029" width="3.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="94.95" y="1039.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::base() const (1 samples, 0.39%)</title><rect x="665.6" y="581" width="3.0" height="15.0" fill="rgb(237,132,35)" rx="2" ry="2" />
<text  x="668.56" y="591.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::~function() (1 samples, 0.39%)</title><rect x="729.3" y="565" width="3.0" height="15.0" fill="rgb(244,146,43)" rx="2" ry="2" />
<text  x="732.30" y="575.5" ></text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;::operator()() (14 samples, 5.45%)</title><rect x="46.4" y="1141" width="42.5" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="49.42" y="1151.5" >boos..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl&lt;std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;, void&gt;(std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;) (1 samples, 0.39%)</title><rect x="698.9" y="597" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="701.95" y="607.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::operator()(std::error_code const&amp;) const (4 samples, 1.56%)</title><rect x="55.5" y="437" width="12.2" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="58.53" y="447.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (21 samples, 8.17%)</title><rect x="680.7" y="1301" width="63.8" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="683.74" y="1311.5" >std::en..</text>
</g>
<g >
<title>websocketpp::utility::ci_less::operator()(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="674.7" y="597" width="3.0" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="677.67" y="607.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt;, void&gt;::complete&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;) (1 samples, 0.39%)</title><rect x="756.6" y="1253" width="3.0" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="759.61" y="1263.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt;, void&gt;::complete&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="1189" width="3.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="94.95" y="1199.5" ></text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;, boost::asio::io_context::strand*) const (21 samples, 8.17%)</title><rect x="680.7" y="1269" width="63.8" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="683.74" y="1279.5" >void bo..</text>
</g>
<g >
<title>std::_Function_base::~_Function_base() (3 samples, 1.17%)</title><rect x="747.5" y="1125" width="9.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="750.51" y="1135.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt;))(websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::error_code const&amp;)&gt;::~_Bind() (1 samples, 0.39%)</title><rect x="729.3" y="501" width="3.0" height="15.0" fill="rgb(242,146,41)" rx="2" ry="2" />
<text  x="732.30" y="511.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::assign(boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::implementation_type&amp;, boost::asio::ip::tcp const&amp;, int const&amp;, boost::system::error_code&amp;) (2 samples, 0.78%)</title><rect x="34.3" y="1333" width="6.1" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="37.28" y="1343.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (std::error_code const&amp;), std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt; &gt;::_M_invoke(std::_Any_data const&amp;, std::error_code const&amp;) (12 samples, 4.67%)</title><rect x="49.5" y="837" width="36.4" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="52.46" y="847.5" >std..</text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code)&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::type, void (boost::system::error_code)&gt;::initiate((declval&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code), boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&gt;(boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (1 samples, 0.39%)</title><rect x="70.7" y="533" width="3.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="73.70" y="543.5" ></text>
</g>
<g >
<title>websocketpp::utility::ci_less::operator()(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="635.2" y="613" width="3.0" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="638.21" y="623.5" ></text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;, boost::asio::io_context::strand*) const (4 samples, 1.56%)</title><rect x="747.5" y="1301" width="12.1" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="750.51" y="1311.5" ></text>
</g>
<g >
<title>std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;::_M_get() const (50 samples, 19.46%)</title><rect x="325.6" y="517" width="151.8" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="328.64" y="527.5" >std::istreambuf_ite..</text>
</g>
<g >
<title>__libc_start_main (247 samples, 96.11%)</title><rect x="19.1" y="1525" width="749.7" height="15.0" fill="rgb(247,154,46)" rx="2" ry="2" />
<text  x="22.11" y="1535.5" >__libc_start_main</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::eq_int_type(int const&amp;, int const&amp;) (10 samples, 3.89%)</title><rect x="589.7" y="533" width="30.3" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="592.69" y="543.5" >st..</text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::handle_async_shutdown(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;) (1 samples, 0.39%)</title><rect x="732.3" y="565" width="3.1" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="735.33" y="575.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt;::__call&lt;void, std::error_code const&amp;, 0ul, 1ul, 2ul&gt;(std::tuple&lt;std::error_code const&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul&gt;) (10 samples, 3.89%)</title><rect x="49.5" y="645" width="30.3" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="52.46" y="655.5" >vo..</text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::function(std::function&lt;void (std::error_code const&amp;)&gt; const&amp;) (1 samples, 0.39%)</title><rect x="52.5" y="453" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="55.49" y="463.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (21 samples, 8.17%)</title><rect x="680.7" y="1285" width="63.8" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="683.74" y="1295.5" >void bo..</text>
</g>
<g >
<title>boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::cancel() (1 samples, 0.39%)</title><rect x="732.3" y="549" width="3.1" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="735.33" y="559.5" ></text>
</g>
<g >
<title>void boost::asio::detail::start_read_buffer_sequence_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;&amp;, boost::asio::mutable_buffers_1 const&amp;, boost::asio::mutable_buffer const* const&amp;, boost::asio::detail::transfer_at_least_t&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (3 samples, 1.17%)</title><rect x="55.5" y="229" width="9.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="58.53" y="239.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;) (190 samples, 73.93%)</title><rect x="101.1" y="853" width="576.6" height="15.0" fill="rgb(242,131,41)" rx="2" ry="2" />
<text  x="104.05" y="863.5" >void std::__invoke_impl&lt;void, void (websocketpp::transport::asio::connection&lt;we..</text>
</g>
<g >
<title>bool __gnu_cxx::operator!=&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="683.8" y="1077" width="3.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="686.77" y="1087.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::server&lt;websocketpp::config::asio&gt;::*&amp;)(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;), websocketpp::server&lt;websocketpp::config::asio&gt;*&amp;, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::server&lt;websocketpp::config::asio&gt;::*&amp;)(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;), websocketpp::server&lt;websocketpp::config::asio&gt;*&amp;, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;) (12 samples, 4.67%)</title><rect x="49.5" y="773" width="36.4" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="52.46" y="783.5" >voi..</text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt; &gt;::tuple(std::tuple&lt;std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="698.9" y="501" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="701.95" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; std::__find_if&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;bool (*)(unsigned char)&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_pred&lt;bool (*)(unsigned char)&gt;) (1 samples, 0.39%)</title><rect x="671.6" y="645" width="3.1" height="15.0" fill="rgb(242,132,40)" rx="2" ry="2" />
<text  x="674.63" y="655.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;::~custom_alloc_handler() (1 samples, 0.39%)</title><rect x="95.0" y="1173" width="3.0" height="15.0" fill="rgb(241,141,40)" rx="2" ry="2" />
<text  x="97.98" y="1183.5" ></text>
</g>
<g >
<title>void boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;::operator()&lt;boost::system::error_code&gt;(boost::system::error_code const&amp;) (1 samples, 0.39%)</title><rect x="756.6" y="1141" width="3.0" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="759.61" y="1151.5" ></text>
</g>
<g >
<title>boost::asio::detail::io_object_impl&lt;boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::io_object_impl&lt;boost::asio::io_context&gt;(boost::asio::io_context&amp;, std::enable_if&lt;std::is_convertible&lt;boost::asio::io_context&amp;, boost::asio::execution_context&amp;&gt;::value, void&gt;::type*) (2 samples, 0.78%)</title><rect x="73.7" y="533" width="6.1" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="76.74" y="543.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="635.2" y="645" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="638.21" y="655.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::do_run_one(boost::asio::detail::conditionally_enabled_mutex::scoped_lock&amp;, boost::asio::detail::scheduler_thread_info&amp;, boost::system::error_code const&amp;) (247 samples, 96.11%)</title><rect x="19.1" y="1445" width="749.7" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="22.11" y="1455.5" >boost::asio::detail::scheduler::do_run_one(boost::asio::detail::conditionally_enabled_mutex::scoped_loc..</text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="1349" width="3.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="94.95" y="1359.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;) (191 samples, 74.32%)</title><rect x="98.0" y="997" width="579.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="101.02" y="1007.5" >void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;web..</text>
</g>
<g >
<title>bool __gnu_cxx::__ops::_Iter_comp_iter&lt;websocketpp::utility::ci_less::nocase_compare&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;) (1 samples, 0.39%)</title><rect x="674.7" y="565" width="3.0" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="677.67" y="575.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt;::operator()&lt;std::error_code const&amp;, void&gt;(std::error_code const&amp;) (6 samples, 2.33%)</title><rect x="49.5" y="517" width="18.2" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="52.46" y="527.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (16 samples, 6.23%)</title><rect x="40.4" y="1285" width="48.5" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="43.35" y="1295.5" >void..</text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Rb_tree_iterator(std::_Rb_tree_node_base*) (1 samples, 0.39%)</title><rect x="641.3" y="629" width="3.0" height="15.0" fill="rgb(239,146,38)" rx="2" ry="2" />
<text  x="644.28" y="639.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::basic_socket::connection::get_remote_endpoint[abi:cxx11](std::error_code&amp;) const (1 samples, 0.39%)</title><rect x="695.9" y="677" width="3.0" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="698.91" y="687.5" ></text>
</g>
<g >
<title>__libc_accept (2 samples, 0.78%)</title><rect x="79.8" y="517" width="6.1" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="82.81" y="527.5" ></text>
</g>
<g >
<title>boost::asio::ip::detail::endpoint::to_string[abi:cxx11]() const (1 samples, 0.39%)</title><rect x="695.9" y="645" width="3.0" height="15.0" fill="rgb(237,151,35)" rx="2" ry="2" />
<text  x="698.91" y="655.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::operator==&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="665.6" y="597" width="3.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="668.56" y="607.5" ></text>
</g>
<g >
<title>void boost::asio::detail::epoll_reactor::schedule_timer&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;(boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;&amp;, boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt;::time_type const&amp;, boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::per_timer_data&amp;, boost::asio::detail::wait_op*) (1 samples, 0.39%)</title><rect x="735.4" y="581" width="3.0" height="15.0" fill="rgb(240,131,39)" rx="2" ry="2" />
<text  x="738.37" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator++() (1 samples, 0.39%)</title><rect x="101.1" y="581" width="3.0" height="15.0" fill="rgb(240,132,39)" rx="2" ry="2" />
<text  x="104.05" y="591.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::function&lt;void (std::error_code const&amp;)&gt;, false&gt;::~_Head_base() (1 samples, 0.39%)</title><rect x="88.9" y="1205" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="91.91" y="1215.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose() (3 samples, 1.17%)</title><rect x="747.5" y="789" width="9.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="750.51" y="799.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::~function() (3 samples, 1.17%)</title><rect x="747.5" y="1141" width="9.1" height="15.0" fill="rgb(244,146,43)" rx="2" ry="2" />
<text  x="750.51" y="1151.5" ></text>
</g>
<g >
<title>boost::system::detail::failed_impl(int, boost::system::error_category const&amp;) (1 samples, 0.39%)</title><rect x="22.1" y="1285" width="3.1" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="25.14" y="1295.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::handle_accept(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;) (12 samples, 4.67%)</title><rect x="49.5" y="869" width="36.4" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="52.46" y="879.5" >web..</text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::error_code const&amp;, unsigned long)&gt;::operator()&lt;std::error_code const&amp;, unsigned long, void&gt;(std::error_code const&amp;, unsigned long&amp;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="757" width="3.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="94.95" y="767.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.39%)</title><rect x="771.8" y="1509" width="3.0" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="774.79" y="1519.5" ></text>
</g>
<g >
<title>void boost::asio::detail::initiate_async_read_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;::operator()&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::mutable_buffers_1, boost::asio::detail::transfer_at_least_t&gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, boost::asio::mutable_buffers_1 const&amp;, boost::asio::detail::transfer_at_least_t&amp;&amp;) const (3 samples, 1.17%)</title><rect x="55.5" y="245" width="9.1" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="58.53" y="255.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="744.5" y="1317" width="3.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="747.47" y="1327.5" ></text>
</g>
<g >
<title>bool boost_asio_handler_cont_helpers::is_continuation&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (1 samples, 0.39%)</title><rect x="55.5" y="101" width="3.1" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="58.53" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::heap_entry, std::allocator&lt;boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::heap_entry&gt; &gt;::size() const (1 samples, 0.39%)</title><rect x="686.8" y="629" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="689.81" y="639.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_accept_op&lt;boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::ip::tcp, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (20 samples, 7.78%)</title><rect x="31.2" y="1381" width="60.7" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="34.25" y="1391.5" >boost:..</text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::async_read_at_least(unsigned long, char*, unsigned long, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;) (3 samples, 1.17%)</title><rect x="55.5" y="309" width="9.1" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="58.53" y="319.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt;(char*, char*, std::forward_iterator_tag) (1 samples, 0.39%)</title><rect x="777.9" y="1525" width="3.0" height="15.0" fill="rgb(248,131,47)" rx="2" ry="2" />
<text  x="780.86" y="1535.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;::operator()() (191 samples, 74.32%)</title><rect x="98.0" y="933" width="579.7" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="101.02" y="943.5" >boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler..</text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;&amp;, boost::asio::io_context::strand*) const (13 samples, 5.06%)</title><rect x="46.4" y="1045" width="39.5" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="49.42" y="1055.5" >voi..</text>
</g>
<g >
<title>boost::asio::detail::completion_handler&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (1 samples, 0.39%)</title><rect x="91.9" y="1205" width="3.1" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="94.95" y="1215.5" ></text>
</g>
<g >
<title>boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::basic_waitable_timer&lt;boost::asio::io_context&gt;(boost::asio::io_context&amp;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; const&amp;, std::enable_if&lt;std::is_convertible&lt;boost::asio::io_context&amp;, boost::asio::execution_context&amp;&gt;::value, void&gt;::type*) (2 samples, 0.78%)</title><rect x="73.7" y="549" width="6.1" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="76.74" y="559.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_accept_op_base&lt;boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::ip::tcp&gt;::do_perform(boost::asio::detail::reactor_op*) (3 samples, 1.17%)</title><rect x="19.1" y="1365" width="9.1" height="15.0" fill="rgb(240,151,39)" rx="2" ry="2" />
<text  x="22.11" y="1375.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;*) (21 samples, 8.17%)</title><rect x="680.7" y="1365" width="63.8" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="683.74" y="1375.5" >void bo..</text>
</g>
<g >
<title>void websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;::operator()&lt;boost::system::error_code, unsigned long&gt;(boost::system::error_code, unsigned long) (191 samples, 74.32%)</title><rect x="98.0" y="917" width="579.7" height="15.0" fill="rgb(247,131,46)" rx="2" ry="2" />
<text  x="101.02" y="927.5" >void websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websoc..</text>
</g>
<g >
<title>boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::remove_timer(boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::per_timer_data&amp;) (1 samples, 0.39%)</title><rect x="686.8" y="645" width="3.0" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="689.81" y="655.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count() (3 samples, 1.17%)</title><rect x="747.5" y="821" width="9.1" height="15.0" fill="rgb(239,146,38)" rx="2" ry="2" />
<text  x="750.51" y="831.5" ></text>
</g>
<g >
<title>websocketpp::http::parser::request::consume(char const*, unsigned long) (4 samples, 1.56%)</title><rect x="665.6" y="709" width="12.1" height="15.0" fill="rgb(247,141,46)" rx="2" ry="2" />
<text  x="668.56" y="719.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;&amp;) (191 samples, 74.32%)</title><rect x="98.0" y="1173" width="579.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="101.02" y="1183.5" >void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_h..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt; &gt;::_M_clone(std::_Any_data&amp;, std::_Any_data const&amp;, std::integral_constant&lt;bool, false&gt;) (1 samples, 0.39%)</title><rect x="52.5" y="421" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="55.49" y="431.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (4 samples, 1.56%)</title><rect x="747.5" y="1317" width="12.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="750.51" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;::vector(std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;&amp;&amp;) (2 samples, 0.78%)</title><rect x="644.3" y="453" width="6.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="647.32" y="463.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl&lt;std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;, void&gt;(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;) (1 samples, 0.39%)</title><rect x="698.9" y="613" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="701.95" y="623.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, false&gt;::_M_head(std::_Head_base&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, false&gt;&amp;) (1 samples, 0.39%)</title><rect x="741.4" y="725" width="3.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="744.44" y="735.5" ></text>
</g>
<g >
<title>websocketpp::utility::ci_less::operator()(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 0.39%)</title><rect x="101.1" y="629" width="3.0" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="104.05" y="639.5" ></text>
</g>
<g >
<title>unsigned long boost::asio::detail::epoll_reactor::cancel_timer&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;(boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;&amp;, boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::per_timer_data&amp;, unsigned long) (1 samples, 0.39%)</title><rect x="686.8" y="677" width="3.0" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="689.81" y="687.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;) (1 samples, 0.39%)</title><rect x="91.9" y="581" width="3.1" height="15.0" fill="rgb(239,131,38)" rx="2" ry="2" />
<text  x="94.95" y="591.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="933" width="3.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="94.95" y="943.5" ></text>
</g>
<g >
<title>void boost::asio::detail::start_write_buffer_sequence_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;&amp;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt; const&amp;, boost::asio::detail::transfer_all_t&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (7 samples, 2.72%)</title><rect x="644.3" y="613" width="21.3" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="647.32" y="623.5" >v..</text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;(std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;, std::input_iterator_tag) (168 samples, 65.37%)</title><rect x="122.3" y="581" width="509.9" height="15.0" fill="rgb(248,131,47)" rx="2" ry="2" />
<text  x="125.30" y="591.5" >void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::all..</text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::handle_read_handshake(std::error_code const&amp;, unsigned long) (1 samples, 0.39%)</title><rect x="91.9" y="693" width="3.1" height="15.0" fill="rgb(247,141,46)" rx="2" ry="2" />
<text  x="94.95" y="703.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="1141" width="3.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="94.95" y="1151.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~tuple() (3 samples, 1.17%)</title><rect x="747.5" y="1061" width="9.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="750.51" y="1071.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::start_op(int, int, boost::asio::detail::epoll_reactor::descriptor_state*&amp;, boost::asio::detail::reactor_op*, bool, bool) (5 samples, 1.95%)</title><rect x="650.4" y="485" width="15.2" height="15.0" fill="rgb(241,151,39)" rx="2" ry="2" />
<text  x="653.39" y="495.5" ></text>
</g>
<g >
<title>void boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;::operator()&lt;boost::system::error_code&gt;(boost::system::error_code const&amp;) (14 samples, 5.45%)</title><rect x="46.4" y="1109" width="42.5" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="49.42" y="1119.5" >void..</text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;) (4 samples, 1.56%)</title><rect x="747.5" y="1349" width="12.1" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="750.51" y="1359.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::read_handshake(unsigned long) (4 samples, 1.56%)</title><rect x="55.5" y="325" width="12.2" height="15.0" fill="rgb(247,141,46)" rx="2" ry="2" />
<text  x="58.53" y="335.5" ></text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;::operator()() (191 samples, 74.32%)</title><rect x="98.0" y="1141" width="579.7" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="101.02" y="1151.5" >boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio..</text>
</g>
<g >
<title>std::_Bind_helper&lt;std::__or_&lt;std::is_integral&lt;std::decay&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt;::type&gt;, std::is_enum&lt;std::decay&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt;::type&gt; &gt;::value, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;&gt;::type std::bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;&gt;(void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;) (1 samples, 0.39%)</title><rect x="698.9" y="677" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="701.95" y="687.5" ></text>
</g>
<g >
<title>bool std::lexicographical_compare&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, websocketpp::utility::ci_less::nocase_compare&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, websocketpp::utility::ci_less::nocase_compare) (1 samples, 0.39%)</title><rect x="665.6" y="629" width="3.0" height="15.0" fill="rgb(246,151,46)" rx="2" ry="2" />
<text  x="668.56" y="639.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt;))(websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::error_code const&amp;)&gt; &gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation) (3 samples, 1.17%)</title><rect x="747.5" y="949" width="9.1" height="15.0" fill="rgb(251,146,50)" rx="2" ry="2" />
<text  x="750.51" y="959.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt; &gt;&amp;&amp;) (1 samples, 0.39%)</title><rect x="677.7" y="1301" width="3.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="680.70" y="1311.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::process_handshake_request() (177 samples, 68.87%)</title><rect x="101.1" y="709" width="537.1" height="15.0" fill="rgb(239,141,38)" rx="2" ry="2" />
<text  x="104.05" y="719.5" >websocketpp::connection&lt;websocketpp::config::asio&gt;::process_handshake_req..</text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;) (19 samples, 7.39%)</title><rect x="686.8" y="997" width="57.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="689.81" y="1007.5" >void b..</text>
</g>
<g >
<title>std::_Bind_helper&lt;std::__or_&lt;std::is_integral&lt;std::decay&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;::type&gt;, std::is_enum&lt;std::decay&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;::type&gt; &gt;::value, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;, std::_Placeholder&lt;2&gt; const&amp;&gt;::type std::bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;, std::_Placeholder&lt;2&gt; const&amp;&gt;(void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;, std::_Placeholder&lt;2&gt; const&amp;) (1 samples, 0.39%)</title><rect x="638.2" y="693" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="641.25" y="703.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, false&gt;::~_Head_base() (3 samples, 1.17%)</title><rect x="747.5" y="997" width="9.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="750.51" y="1007.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt;))(websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::error_code const&amp;)&gt; &gt;::_M_destroy(std::_Any_data&amp;, std::integral_constant&lt;bool, false&gt;) (1 samples, 0.39%)</title><rect x="729.3" y="517" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="732.30" y="527.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;::~shared_ptr() (3 samples, 1.17%)</title><rect x="747.5" y="693" width="9.1" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="750.51" y="703.5" ></text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, ...) (191 samples, 74.32%)</title><rect x="98.0" y="949" width="579.7" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="101.02" y="959.5" >void boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;websocketpp:..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt;))(websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::error_code const&amp;)&gt; &gt;::_M_clone(std::_Any_data&amp;, std::_Any_data const&amp;, std::integral_constant&lt;bool, false&gt;) (1 samples, 0.39%)</title><rect x="698.9" y="533" width="3.1" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="701.95" y="543.5" ></text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;) (191 samples, 74.32%)</title><rect x="98.0" y="1013" width="579.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="101.02" y="1023.5" >void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::binder2..</text>
</g>
<g >
<title>std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;::operator*() const (1 samples, 0.39%)</title><rect x="91.9" y="533" width="3.1" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="94.95" y="543.5" ></text>
</g>
<g >
<title>boost::asio::detail::socket_ops::non_blocking_accept(int, unsigned char, sockaddr*, unsigned long*, boost::system::error_code&amp;, int&amp;) (3 samples, 1.17%)</title><rect x="19.1" y="1349" width="9.1" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="22.11" y="1359.5" ></text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;::operator()() (1 samples, 0.39%)</title><rect x="91.9" y="1109" width="3.1" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="94.95" y="1119.5" ></text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;) (16 samples, 6.23%)</title><rect x="40.4" y="1317" width="48.5" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="43.35" y="1327.5" >auto..</text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;*) (17 samples, 6.61%)</title><rect x="40.4" y="1333" width="51.5" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="43.35" y="1343.5" >void ..</text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="965" width="3.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="94.95" y="975.5" ></text>
</g>
<g >
<title>vfprintf (1 samples, 0.39%)</title><rect x="777.9" y="1477" width="3.0" height="15.0" fill="rgb(243,137,42)" rx="2" ry="2" />
<text  x="780.86" y="1487.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::eof() (1 samples, 0.39%)</title><rect x="629.1" y="549" width="3.1" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="632.14" y="559.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt;::__call&lt;void, std::error_code const&amp;, 0ul, 1ul&gt;(std::tuple&lt;std::error_code const&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul&gt;) (4 samples, 1.56%)</title><rect x="55.5" y="389" width="12.2" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="58.53" y="399.5" ></text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;::~rewrapped_handler() (1 samples, 0.39%)</title><rect x="88.9" y="1317" width="3.0" height="15.0" fill="rgb(241,151,40)" rx="2" ry="2" />
<text  x="91.91" y="1327.5" ></text>
</g>
<g >
<title>epoll_ctl (2 samples, 0.78%)</title><rect x="34.3" y="1301" width="6.1" height="15.0" fill="rgb(232,202,30)" rx="2" ry="2" />
<text  x="37.28" y="1311.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_recv_op&lt;boost::asio::mutable_buffers_1, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (1 samples, 0.39%)</title><rect x="91.9" y="1381" width="3.1" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="94.95" y="1391.5" ></text>
</g>
<g >
<title>boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::shutdown(boost::asio::socket_base::shutdown_type, boost::system::error_code&amp;) (9 samples, 3.50%)</title><rect x="702.0" y="661" width="27.3" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="704.98" y="671.5" >b..</text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;::operator()(std::error_code const&amp;, unsigned long) const (1 samples, 0.39%)</title><rect x="91.9" y="789" width="3.1" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="94.95" y="799.5" ></text>
</g>
<g >
<title>std::chrono::duration_values&lt;long&gt;::zero() (1 samples, 0.39%)</title><rect x="76.8" y="485" width="3.0" height="15.0" fill="rgb(243,146,42)" rx="2" ry="2" />
<text  x="79.77" y="495.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::__call&lt;void, boost::system::error_code const&amp;, 0ul, 1ul, 2ul, 3ul&gt;(std::tuple&lt;boost::system::error_code const&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul, 3ul&gt;) (2 samples, 0.78%)</title><rect x="729.3" y="613" width="6.1" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="732.30" y="623.5" ></text>
</g>
<g >
<title>boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::write_op(boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;) (2 samples, 0.78%)</title><rect x="644.3" y="485" width="6.1" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="647.32" y="495.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_add_ref_copy() (1 samples, 0.39%)</title><rect x="698.9" y="405" width="3.1" height="15.0" fill="rgb(244,146,43)" rx="2" ry="2" />
<text  x="701.95" y="415.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr() (3 samples, 1.17%)</title><rect x="747.5" y="677" width="9.1" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="750.51" y="687.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;&gt;::type std::__invoke&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;&gt;(void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;) (1 samples, 0.39%)</title><rect x="756.6" y="933" width="3.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="759.61" y="943.5" ></text>
</g>
<g >
<title>std::istreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt;::_M_at_eof() const (80 samples, 31.13%)</title><rect x="234.6" y="533" width="242.8" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="237.59" y="543.5" >std::istreambuf_iterator&lt;char, s..</text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;, boost::asio::io_context::strand*) const (192 samples, 74.71%)</title><rect x="95.0" y="1269" width="582.7" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="97.98" y="1279.5" >void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio:..</text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;) (14 samples, 5.45%)</title><rect x="46.4" y="1205" width="42.5" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="49.42" y="1215.5" >void..</text>
</g>
<g >
<title>shutdown (9 samples, 3.50%)</title><rect x="702.0" y="629" width="27.3" height="15.0" fill="rgb(243,135,41)" rx="2" ry="2" />
<text  x="704.98" y="639.5" >s..</text>
</g>
<g >
<title>_ZZ4mainENKUlT_E_clISt8weak_ptrIvEEEDaS_ (174 samples, 67.70%)</title><rect x="104.1" y="661" width="528.1" height="15.0" fill="rgb(239,160,37)" rx="2" ry="2" />
<text  x="107.09" y="671.5" >_ZZ4mainENKUlT_E_clISt8weak_ptrIvEEEDaS_</text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (1 samples, 0.39%)</title><rect x="756.6" y="1109" width="3.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="759.61" y="1119.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt;, void&gt;::complete&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;) (14 samples, 5.45%)</title><rect x="46.4" y="1221" width="42.5" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="49.42" y="1231.5" >void..</text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;) (12 samples, 4.67%)</title><rect x="49.5" y="885" width="36.4" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="52.46" y="895.5" >voi..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (3 samples, 1.17%)</title><rect x="747.5" y="1189" width="9.1" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="750.51" y="1199.5" ></text>
</g>
<g >
<title>read_index_file(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="613" width="3.1" height="15.0" fill="rgb(242,184,40)" rx="2" ry="2" />
<text  x="94.95" y="623.5" ></text>
</g>
<g >
<title>websocketpp::http::is_not_token_char(unsigned char) (1 samples, 0.39%)</title><rect x="671.6" y="597" width="3.1" height="15.0" fill="rgb(248,141,47)" rx="2" ry="2" />
<text  x="674.63" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data() const (1 samples, 0.39%)</title><rect x="632.2" y="645" width="3.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="635.18" y="655.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;, unsigned long&gt;::type std::__invoke&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;, unsigned long&gt;(void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;, unsigned long&amp;&amp;) (1 samples, 0.39%)</title><rect x="91.9" y="725" width="3.1" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="94.95" y="735.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.39%)</title><rect x="750.5" y="501" width="3.1" height="15.0" fill="rgb(240,158,39)" rx="2" ry="2" />
<text  x="753.54" y="511.5" ></text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, ...) (1 samples, 0.39%)</title><rect x="756.6" y="1189" width="3.0" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="759.61" y="1199.5" ></text>
</g>
</g>
</svg>
