<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="800" height="1622" onload="init(evt)" viewBox="0 0 800 1622" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="800.0" height="1622.0" fill="url(#background)"  />
<text id="title" x="400.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1605" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="690.00" y="24" >Search</text>
<text id="ignorecase" x="774.00" y="24" >ic</text>
<text id="matched" x="690.00" y="1605" > </text>
<g id="frames">
<g >
<title>std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt; std::static_pointer_cast&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;, websocketpp::transport::asio::basic_socket::connection&gt;(std::shared_ptr&lt;websocketpp::transport::asio::basic_socket::connection&gt; const&amp;) (1 samples, 1.15%)</title><rect x="341.7" y="661" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="344.72" y="671.5" ></text>
</g>
<g >
<title>void boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait::operator()&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) const (1 samples, 1.15%)</title><rect x="162.4" y="245" width="9.0" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="165.41" y="255.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt; &gt;::completion_handler(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt; const&amp;) (1 samples, 1.15%)</title><rect x="108.6" y="1237" width="9.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="111.62" y="1247.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;*) (1 samples, 1.15%)</title><rect x="664.5" y="1029" width="8.9" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="667.48" y="1039.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::uri&gt; websocketpp::processor::get_uri_from_host&lt;websocketpp::http::parser::request&gt;(websocketpp::http::parser::request&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;) (2 samples, 2.30%)</title><rect x="314.8" y="693" width="18.0" height="15.0" fill="rgb(239,146,38)" rx="2" ry="2" />
<text  x="317.83" y="703.5" ></text>
</g>
<g >
<title>void boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::async_wait&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;(boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::implementation_type&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="171.4" y="485" width="8.9" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="174.38" y="495.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;*) (2 samples, 2.30%)</title><rect x="664.5" y="1221" width="17.9" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="667.48" y="1231.5" ></text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;::operator()() (11 samples, 12.64%)</title><rect x="512.1" y="1141" width="98.6" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="515.07" y="1151.5" >boost::asio..</text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt; &gt;::destroy&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;(std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, websocketpp::connection&lt;websocketpp::config::asio&gt;*) (2 samples, 2.30%)</title><rect x="646.6" y="773" width="17.9" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="649.55" y="783.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 1.15%)</title><rect x="36.9" y="1509" width="9.0" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="39.90" y="1519.5" ></text>
</g>
<g >
<title>__dynamic_cast (1 samples, 1.15%)</title><rect x="763.1" y="1541" width="9.0" height="15.0" fill="rgb(238,141,36)" rx="2" ry="2" />
<text  x="766.10" y="1551.5" ></text>
</g>
<g >
<title>void boost::asio::detail::reactive_socket_service_base::async_receive&lt;boost::asio::mutable_buffers_1, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, boost::asio::mutable_buffers_1 const&amp;, int, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="153.4" y="133" width="9.0" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="156.45" y="143.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::function(std::function&lt;void (std::error_code const&amp;)&gt; const&amp;) (1 samples, 1.15%)</title><rect x="270.0" y="1221" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="273.00" y="1231.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt; &gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation) (1 samples, 1.15%)</title><rect x="673.4" y="981" width="9.0" height="15.0" fill="rgb(251,146,50)" rx="2" ry="2" />
<text  x="676.45" y="991.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;&gt;::type std::__invoke&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;&gt;(void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;) (7 samples, 8.05%)</title><rect x="126.6" y="629" width="62.7" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="129.55" y="639.5" >std::_..</text>
</g>
<g >
<title>std::shared_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; std::make_shared&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&gt;() (1 samples, 1.15%)</title><rect x="216.2" y="533" width="9.0" height="15.0" fill="rgb(244,146,43)" rx="2" ry="2" />
<text  x="219.21" y="543.5" ></text>
</g>
<g >
<title>boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::~basic_socket() (1 samples, 1.15%)</title><rect x="655.5" y="597" width="9.0" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="658.52" y="607.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;) (11 samples, 12.64%)</title><rect x="512.1" y="1205" width="98.6" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="515.07" y="1215.5" >void boost_..</text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (24 samples, 27.59%)</title><rect x="287.9" y="1301" width="215.2" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="290.93" y="1311.5" >std::enable_if&lt;boost::asio::..</text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;) (22 samples, 25.29%)</title><rect x="287.9" y="853" width="197.3" height="15.0" fill="rgb(242,131,41)" rx="2" ry="2" />
<text  x="290.93" y="863.5" >void std::__invoke_impl&lt;v..</text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::handle_pre_init(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;) (7 samples, 8.05%)</title><rect x="126.6" y="597" width="62.7" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="129.55" y="607.5" >websoc..</text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;*) (16 samples, 18.39%)</title><rect x="117.6" y="997" width="143.4" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="120.59" y="1007.5" >void boost::asio::..</text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="664.5" y="1125" width="8.9" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="667.48" y="1135.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::process_handshake_request() (3 samples, 3.45%)</title><rect x="305.9" y="709" width="26.9" height="15.0" fill="rgb(239,141,38)" rx="2" ry="2" />
<text  x="308.86" y="719.5" >w..</text>
</g>
<g >
<title>std::_Function_handler&lt;void (std::error_code const&amp;), std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt; &gt;::_M_invoke(std::_Any_data const&amp;, std::error_code const&amp;) (4 samples, 4.60%)</title><rect x="135.5" y="533" width="35.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="138.52" y="543.5" >std..</text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt;::operator()&lt;std::error_code const&amp;, void&gt;(std::error_code const&amp;) (4 samples, 4.60%)</title><rect x="135.5" y="517" width="35.9" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="138.52" y="527.5" >voi..</text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 1.15%)</title><rect x="225.2" y="485" width="8.9" height="15.0" fill="rgb(240,158,39)" rx="2" ry="2" />
<text  x="228.17" y="495.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::run() (75 samples, 86.21%)</title><rect x="45.9" y="1493" width="672.4" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="48.86" y="1503.5" >websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::run()</text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 1.15%)</title><rect x="458.3" y="661" width="8.9" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="461.28" y="671.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (2 samples, 2.30%)</title><rect x="646.6" y="1205" width="17.9" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="649.55" y="1215.5" ></text>
</g>
<g >
<title>void boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_accept::operator()&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;*, boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;*) const (2 samples, 2.30%)</title><rect x="243.1" y="661" width="17.9" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="246.10" y="671.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::start_op(int, int, boost::asio::detail::epoll_reactor::descriptor_state*&amp;, boost::asio::detail::reactor_op*, bool, bool) (1 samples, 1.15%)</title><rect x="153.4" y="101" width="9.0" height="15.0" fill="rgb(241,151,39)" rx="2" ry="2" />
<text  x="156.45" y="111.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::connection(bool, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt; const&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="225.2" y="549" width="8.9" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="228.17" y="559.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt;, void&gt;::complete&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;) (2 samples, 2.30%)</title><rect x="664.5" y="1253" width="17.9" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="667.48" y="1263.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;*) (25 samples, 28.74%)</title><rect x="279.0" y="1333" width="224.1" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="281.97" y="1343.5" >void boost::asio::detail::asi..</text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt;::~_Bind() (2 samples, 2.30%)</title><rect x="646.6" y="1077" width="17.9" height="15.0" fill="rgb(242,146,41)" rx="2" ry="2" />
<text  x="649.55" y="1087.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::function(std::function&lt;void (std::error_code const&amp;)&gt; const&amp;) (1 samples, 1.15%)</title><rect x="673.4" y="997" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="676.45" y="1007.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::initialize_processor() (1 samples, 1.15%)</title><rect x="296.9" y="709" width="9.0" height="15.0" fill="rgb(241,141,40)" rx="2" ry="2" />
<text  x="299.90" y="719.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (11 samples, 12.64%)</title><rect x="512.1" y="1285" width="98.6" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="515.07" y="1295.5" >void boost:..</text>
</g>
<g >
<title>std::_Function_handler&lt;void (std::error_code const&amp;), std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt; &gt;::_M_invoke(std::_Any_data const&amp;, std::error_code const&amp;) (10 samples, 11.49%)</title><rect x="521.0" y="805" width="89.7" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="524.03" y="815.5" >std::_Func..</text>
</g>
<g >
<title>std::tuple&lt;websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::tuple(std::tuple&lt;websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="261.0" y="1061" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="264.03" y="1071.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;std::decay&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;&gt;::type, boost::system::error_code&gt; boost::asio::detail::bind_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;, boost::system::error_code&gt;(std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;) (1 samples, 1.15%)</title><rect x="673.4" y="1125" width="9.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="676.45" y="1135.5" ></text>
</g>
<g >
<title>void boost::asio::detail::start_write_buffer_sequence_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;&amp;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt; const&amp;, boost::asio::detail::transfer_all_t&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (8 samples, 9.20%)</title><rect x="359.7" y="613" width="71.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="362.66" y="623.5" >void boo..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;&amp;&amp;) (2 samples, 2.30%)</title><rect x="628.6" y="1173" width="18.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="631.62" y="1183.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_recv_op_base&lt;boost::asio::mutable_buffers_1&gt;::do_perform(boost::asio::detail::reactor_op*) (1 samples, 1.15%)</title><rect x="153.4" y="69" width="9.0" height="15.0" fill="rgb(240,151,39)" rx="2" ry="2" />
<text  x="156.45" y="79.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code)&gt;::initiate&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&gt;(boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="601.7" y="629" width="9.0" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="604.72" y="639.5" ></text>
</g>
<g >
<title>boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::cancel(boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::implementation_type&amp;, boost::system::error_code&amp;) (2 samples, 2.30%)</title><rect x="135.5" y="421" width="17.9" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="138.52" y="431.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;) (23 samples, 26.44%)</title><rect x="287.9" y="1205" width="206.2" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="290.93" y="1215.5" >void boost_asio_handler_inv..</text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (11 samples, 12.64%)</title><rect x="512.1" y="1061" width="98.6" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="515.07" y="1071.5" >std::enable..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt; &gt;::_M_clone(std::_Any_data&amp;, std::_Any_data const&amp;, std::integral_constant&lt;bool, false&gt;) (1 samples, 1.15%)</title><rect x="673.4" y="965" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="676.45" y="975.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;(char const*, char const*) (1 samples, 1.15%)</title><rect x="521.0" y="677" width="9.0" height="15.0" fill="rgb(237,131,36)" rx="2" ry="2" />
<text  x="524.03" y="687.5" ></text>
</g>
<g >
<title>[unknown] (83 samples, 95.40%)</title><rect x="19.0" y="1541" width="744.1" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="21.97" y="1551.5" >[unknown]</text>
</g>
<g >
<title>std::_Function_handler&lt;void (std::error_code const&amp;, unsigned long), std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::error_code const&amp;, unsigned long)&gt; &gt;::_M_invoke(std::_Any_data const&amp;, std::error_code const&amp;, unsigned long&amp;&amp;) (22 samples, 25.29%)</title><rect x="287.9" y="805" width="197.3" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="290.93" y="815.5" >std::_Function_handler&lt;vo..</text>
</g>
<g >
<title>[unknown] (1 samples, 1.15%)</title><rect x="27.9" y="1509" width="9.0" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="30.93" y="1519.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (25 samples, 28.74%)</title><rect x="279.0" y="1349" width="224.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="281.97" y="1359.5" >void boost_asio_handler_invok..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="691.4" y="1253" width="8.9" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="694.38" y="1263.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;bool (*&amp;)(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation)&gt;::type&amp;&amp; std::move&lt;bool (*&amp;)(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation)&gt;(bool (*&amp;)(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation)) (1 samples, 1.15%)</title><rect x="628.6" y="1109" width="9.0" height="15.0" fill="rgb(243,146,41)" rx="2" ry="2" />
<text  x="631.62" y="1119.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::handle_read_handshake(std::error_code const&amp;, unsigned long) (21 samples, 24.14%)</title><rect x="287.9" y="725" width="188.3" height="15.0" fill="rgb(247,141,46)" rx="2" ry="2" />
<text  x="290.93" y="735.5" >websocketpp::connection&lt;..</text>
</g>
<g >
<title>void boost::asio::detail::start_read_buffer_sequence_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;&amp;, boost::asio::mutable_buffers_1 const&amp;, boost::asio::mutable_buffer const* const&amp;, boost::asio::detail::transfer_at_least_t&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (1 samples, 1.15%)</title><rect x="153.4" y="229" width="9.0" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="156.45" y="239.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, void (boost::system::error_code, unsigned long)&gt;::initiate&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_receive, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::mutable_buffers_1 const&amp;, int&gt;(boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_receive&amp;&amp;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;, boost::asio::mutable_buffers_1 const&amp;, int&amp;&amp;) (1 samples, 1.15%)</title><rect x="153.4" y="165" width="9.0" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="156.45" y="175.5" ></text>
</g>
<g >
<title>websocketpp::http::parser::response::response() (1 samples, 1.15%)</title><rect x="234.1" y="565" width="9.0" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="237.14" y="575.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;&gt;(int, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;) (1 samples, 1.15%)</title><rect x="673.4" y="1109" width="9.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="676.45" y="1119.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;::operator()(std::error_code const&amp;, unsigned long) const (22 samples, 25.29%)</title><rect x="287.9" y="821" width="197.3" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="290.93" y="831.5" >std::function&lt;void (std::..</text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;&amp;, boost::asio::io_context::strand*) const (16 samples, 18.39%)</title><rect x="117.6" y="1045" width="143.4" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="120.59" y="1055.5" >void boost::asio::..</text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator() (1 samples, 1.15%)</title><rect x="449.3" y="693" width="9.0" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="452.31" y="703.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;::~shared_ptr() (2 samples, 2.30%)</title><rect x="646.6" y="853" width="17.9" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="649.55" y="863.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::basic_socket::connection::post_init(std::function&lt;void (std::error_code const&amp;)&gt;) (5 samples, 5.75%)</title><rect x="126.6" y="565" width="44.8" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="129.55" y="575.5" >webs..</text>
</g>
<g >
<title>unsigned long boost::asio::detail::epoll_reactor::cancel_timer&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;(boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;&amp;, boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::per_timer_data&amp;, unsigned long) (2 samples, 2.30%)</title><rect x="135.5" y="405" width="17.9" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="138.52" y="415.5" ></text>
</g>
<g >
<title>boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::operator()(boost::system::error_code const&amp;, unsigned long, int) (22 samples, 25.29%)</title><rect x="287.9" y="1109" width="197.3" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="290.93" y="1119.5" >boost::asio::detail::read..</text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;::operator()() (22 samples, 25.29%)</title><rect x="287.9" y="933" width="197.3" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="290.93" y="943.5" >boost::asio::detail::bind..</text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::_Bind(std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; const&amp;) (1 samples, 1.15%)</title><rect x="270.0" y="1301" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="273.00" y="1311.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str() const (1 samples, 1.15%)</title><rect x="539.0" y="677" width="8.9" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="541.97" y="687.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::_Bind(std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;&amp;) (2 samples, 2.30%)</title><rect x="628.6" y="1237" width="18.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="631.62" y="1247.5" ></text>
</g>
<g >
<title>boost::asio::detail::socket_ops::non_blocking_accept(int, unsigned char, sockaddr*, unsigned long*, boost::system::error_code&amp;, int&amp;) (2 samples, 2.30%)</title><rect x="72.8" y="1349" width="17.9" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="75.76" y="1359.5" ></text>
</g>
<g >
<title>void boost::asio::detail::initiate_async_read_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;::operator()&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::mutable_buffers_1, boost::asio::detail::transfer_at_least_t&gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, boost::asio::mutable_buffers_1 const&amp;, boost::asio::detail::transfer_at_least_t&amp;&amp;) const (1 samples, 1.15%)</title><rect x="153.4" y="245" width="9.0" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="156.45" y="255.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt; &gt;::~tuple() (2 samples, 2.30%)</title><rect x="646.6" y="901" width="17.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="649.55" y="911.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;) (1 samples, 1.15%)</title><rect x="664.5" y="1045" width="8.9" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="667.48" y="1055.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;) (10 samples, 11.49%)</title><rect x="521.0" y="741" width="89.7" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="524.03" y="751.5" >void std::..</text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;) (7 samples, 8.05%)</title><rect x="126.6" y="613" width="62.7" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="129.55" y="623.5" >void s..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;1ul, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="270.0" y="1253" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="273.00" y="1263.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*&amp;)(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;), websocketpp::server&lt;websocketpp::config::asio&gt;*&amp;, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;::type std::__invoke&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*&amp;)(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;), websocketpp::server&lt;websocketpp::config::asio&gt;*&amp;, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;(void (websocketpp::server&lt;websocketpp::config::asio&gt;::*&amp;)(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;), websocketpp::server&lt;websocketpp::config::asio&gt;*&amp;, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;) (15 samples, 17.24%)</title><rect x="126.6" y="789" width="134.4" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="129.55" y="799.5" >std::__invoke_re..</text>
</g>
<g >
<title>std::_Head_base&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, false&gt;::~_Head_base() (2 samples, 2.30%)</title><rect x="646.6" y="997" width="17.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="649.55" y="1007.5" ></text>
</g>
<g >
<title>boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::shutdown(boost::asio::socket_base::shutdown_type, boost::system::error_code&amp;) (4 samples, 4.60%)</title><rect x="565.9" y="661" width="35.8" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="568.86" y="671.5" >boo..</text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (18 samples, 20.69%)</title><rect x="108.6" y="1301" width="161.4" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="111.62" y="1311.5" >std::enable_if&lt;boost..</text>
</g>
<g >
<title>websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::handle_accept(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;) (15 samples, 17.24%)</title><rect x="126.6" y="869" width="134.4" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="129.55" y="879.5" >websocketpp::tra..</text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::start() (7 samples, 8.05%)</title><rect x="126.6" y="741" width="62.7" height="15.0" fill="rgb(239,141,38)" rx="2" ry="2" />
<text  x="129.55" y="751.5" >websoc..</text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::tuple(std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="673.4" y="1077" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="676.45" y="1087.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt;, void&gt;::complete&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;) (17 samples, 19.54%)</title><rect x="117.6" y="1221" width="152.4" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="120.59" y="1231.5" >void boost::asio::d..</text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, void, boost::asio::io_context, boost::asio::executor, void&gt;::handler_work_base(boost::asio::detail::handler_work_base&lt;boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, void, boost::asio::io_context, boost::asio::executor, void&gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="90.7" y="1349" width="9.0" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="93.69" y="1359.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt;, void&gt;::complete&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;) (23 samples, 26.44%)</title><rect x="287.9" y="1221" width="206.2" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="290.93" y="1231.5" >void boost::asio::detail::h..</text>
</g>
<g >
<title>boost::asio::detail::conditionally_enabled_mutex::unlock() (1 samples, 1.15%)</title><rect x="359.7" y="469" width="8.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="362.66" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr(std::__shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, (__gnu_cxx::_Lock_policy)2&gt; const&amp;) (1 samples, 1.15%)</title><rect x="512.1" y="725" width="8.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="515.07" y="735.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code)&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::type, void (boost::system::error_code)&gt;::initiate((declval&lt;boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_accept&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;*&amp;&amp;&gt;)(), (declval&lt;boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code), boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_accept, boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;*, boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;*&gt;(boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_accept&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;, boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;*&amp;&amp;, boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;*&amp;&amp;) (2 samples, 2.30%)</title><rect x="243.1" y="693" width="17.9" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="246.10" y="703.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::start_op(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, int, boost::asio::detail::reactor_op*, bool, bool, bool) (2 samples, 2.30%)</title><rect x="243.1" y="613" width="17.9" height="15.0" fill="rgb(241,151,39)" rx="2" ry="2" />
<text  x="246.10" y="623.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::__call&lt;void, boost::system::error_code const&amp;, 0ul, 1ul, 2ul&gt;(std::tuple&lt;boost::system::error_code const&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul&gt;) (16 samples, 18.39%)</title><rect x="117.6" y="917" width="143.4" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="120.59" y="927.5" >void std::_Bind&lt;vo..</text>
</g>
<g >
<title>void boost::asio::detail::epoll_reactor::schedule_timer&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;(boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;&amp;, boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt;::time_type const&amp;, boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::per_timer_data&amp;, boost::asio::detail::wait_op*) (1 samples, 1.15%)</title><rect x="171.4" y="469" width="8.9" height="15.0" fill="rgb(240,131,39)" rx="2" ry="2" />
<text  x="174.38" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt;::_Sp_counted_ptr_inplace&lt;bool const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt;&amp;, std::reference_wrapper&lt;websocketpp::random::none::int_generator&lt;unsigned int&gt; &gt; &gt;(std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, bool const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt;&amp;, std::reference_wrapper&lt;websocketpp::random::none::int_generator&lt;unsigned int&gt; &gt;&amp;&amp;) (4 samples, 4.60%)</title><rect x="207.2" y="613" width="35.9" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="210.24" y="623.5" >std..</text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;*) (12 samples, 13.79%)</title><rect x="503.1" y="1365" width="107.6" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="506.10" y="1375.5" >void boost::a..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (2 samples, 2.30%)</title><rect x="646.6" y="1029" width="17.9" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="649.55" y="1039.5" ></text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;) (11 samples, 12.64%)</title><rect x="512.1" y="1253" width="98.6" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="515.07" y="1263.5" >void boost:..</text>
</g>
<g >
<title>std::tuple_element&lt;1ul, std::tuple&lt;std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt; &gt; &gt;::type&amp; std::get&lt;1ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt; &gt;(std::tuple&lt;std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt; &gt;&amp;) (1 samples, 1.15%)</title><rect x="476.2" y="757" width="9.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="479.21" y="767.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;) (2 samples, 2.30%)</title><rect x="153.4" y="357" width="18.0" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="156.45" y="367.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::start_op(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, int, boost::asio::detail::reactor_op*, bool, bool, bool) (1 samples, 1.15%)</title><rect x="153.4" y="117" width="9.0" height="15.0" fill="rgb(241,151,39)" rx="2" ry="2" />
<text  x="156.45" y="127.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (19 samples, 21.84%)</title><rect x="108.6" y="1349" width="170.4" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="111.62" y="1359.5" >void boost_asio_handle..</text>
</g>
<g >
<title>__libc_start_main (75 samples, 86.21%)</title><rect x="45.9" y="1525" width="672.4" height="15.0" fill="rgb(247,154,46)" rx="2" ry="2" />
<text  x="48.86" y="1535.5" >__libc_start_main</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator() const (1 samples, 1.15%)</title><rect x="556.9" y="565" width="9.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="559.90" y="575.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::~function() (2 samples, 2.30%)</title><rect x="646.6" y="1141" width="17.9" height="15.0" fill="rgb(244,146,43)" rx="2" ry="2" />
<text  x="649.55" y="1151.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;(char const*, char const*) (1 samples, 1.15%)</title><rect x="556.9" y="645" width="9.0" height="15.0" fill="rgb(237,131,36)" rx="2" ry="2" />
<text  x="559.90" y="655.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;&gt;::type std::__invoke&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;&gt;(void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;) (15 samples, 17.24%)</title><rect x="126.6" y="901" width="134.4" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="129.55" y="911.5" >std::__invoke_re..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt; &gt;::_M_clone(std::_Any_data&amp;, std::_Any_data const&amp;, std::integral_constant&lt;bool, false&gt;) (1 samples, 1.15%)</title><rect x="270.0" y="1189" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="273.00" y="1199.5" ></text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, ...) (17 samples, 19.54%)</title><rect x="117.6" y="1157" width="152.4" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="120.59" y="1167.5" >void boost::asio::a..</text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::log_http_result() (4 samples, 4.60%)</title><rect x="521.0" y="709" width="35.9" height="15.0" fill="rgb(239,141,38)" rx="2" ry="2" />
<text  x="524.03" y="719.5" >web..</text>
</g>
<g >
<title>void std::allocator_traits&lt;std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt; &gt;::construct&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, bool const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt;&amp;, std::reference_wrapper&lt;websocketpp::random::none::int_generator&lt;unsigned int&gt; &gt; &gt;(std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, websocketpp::connection&lt;websocketpp::config::asio&gt;*, bool const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt;&amp;, std::reference_wrapper&lt;websocketpp::random::none::int_generator&lt;unsigned int&gt; &gt;&amp;&amp;) (4 samples, 4.60%)</title><rect x="207.2" y="597" width="35.9" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="210.24" y="607.5" >voi..</text>
</g>
<g >
<title>std::shared_ptr&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;::~shared_ptr() (1 samples, 1.15%)</title><rect x="655.5" y="693" width="9.0" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="658.52" y="703.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt; &gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation) (1 samples, 1.15%)</title><rect x="270.0" y="1205" width="9.0" height="15.0" fill="rgb(251,146,50)" rx="2" ry="2" />
<text  x="273.00" y="1215.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;::binder1(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="108.6" y="1205" width="9.0" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="111.62" y="1215.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;*) (23 samples, 26.44%)</title><rect x="287.9" y="1189" width="206.2" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="290.93" y="1199.5" >void boost::asio::detail::a..</text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::operator()(std::error_code const&amp;) const (2 samples, 2.30%)</title><rect x="153.4" y="437" width="18.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="156.45" y="447.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::write_http_response(std::error_code const&amp;) (12 samples, 13.79%)</title><rect x="332.8" y="709" width="107.5" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="335.76" y="719.5" >websocketpp::..</text>
</g>
<g >
<title>std::enable_if&lt;std::__shared_ptr&lt;websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt;::__has_esft_base&lt;websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt;, void&gt;::value, void&gt;::type std::__shared_ptr&lt;websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_enable_shared_from_this_with&lt;websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt;, websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt; &gt;(websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt;*) (1 samples, 1.15%)</title><rect x="207.2" y="517" width="9.0" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="210.24" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size() const (1 samples, 1.15%)</title><rect x="556.9" y="581" width="9.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="559.90" y="591.5" ></text>
</g>
<g >
<title>boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;::wrapped_handler(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="108.6" y="1189" width="9.0" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="111.62" y="1199.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::post_init(std::function&lt;void (std::error_code const&amp;)&gt;) (7 samples, 8.05%)</title><rect x="126.6" y="581" width="62.7" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="129.55" y="591.5" >websoc..</text>
</g>
<g >
<title>std::__shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr(std::__shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, (__gnu_cxx::_Lock_policy)2&gt; const&amp;) (1 samples, 1.15%)</title><rect x="270.0" y="1093" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="273.00" y="1103.5" ></text>
</g>
<g >
<title>std::__weak_ptr&lt;websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_assign(websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt;*, std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt; const&amp;) (1 samples, 1.15%)</title><rect x="207.2" y="485" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="210.24" y="495.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::_Placeholder&lt;1&gt;, true&gt;::_M_head(std::_Head_base&lt;1ul, std::_Placeholder&lt;1&gt;, true&gt;&amp;) (1 samples, 1.15%)</title><rect x="476.2" y="709" width="9.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="479.21" y="719.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt;::_Bind(std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="189.3" y="677" width="9.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="192.31" y="687.5" ></text>
</g>
<g >
<title>void boost::asio::detail::initiate_async_write_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;::operator()&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, boost::asio::detail::transfer_all_t&gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; const&amp;, boost::asio::detail::transfer_all_t&amp;&amp;) const (8 samples, 9.20%)</title><rect x="359.7" y="629" width="71.7" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="362.66" y="639.5" >void boo..</text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code, unsigned long)&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::type, void (boost::system::error_code, unsigned long)&gt;::initiate((declval&lt;boost::asio::detail::initiate_async_read_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::mutable_buffers_1 const&amp;&gt;)(), (declval&lt;boost::asio::detail::transfer_at_least_t&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code, unsigned long), boost::asio::detail::initiate_async_read_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1 const&amp;, boost::asio::detail::transfer_at_least_t&gt;(boost::asio::detail::initiate_async_read_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;, boost::asio::mutable_buffers_1 const&amp;, boost::asio::detail::transfer_at_least_t&amp;&amp;) (1 samples, 1.15%)</title><rect x="153.4" y="277" width="9.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="156.45" y="287.5" ></text>
</g>
<g >
<title>boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::remove_timer(boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::per_timer_data&amp;) (1 samples, 1.15%)</title><rect x="144.5" y="389" width="8.9" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="147.48" y="399.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::run(boost::system::error_code&amp;) (75 samples, 86.21%)</title><rect x="45.9" y="1461" width="672.4" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="48.86" y="1471.5" >boost::asio::detail::scheduler::run(boost::system::error_code&amp;)</text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt;))(websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::error_code const&amp;)&gt;::~_Bind() (2 samples, 2.30%)</title><rect x="646.6" y="917" width="17.9" height="15.0" fill="rgb(242,146,41)" rx="2" ry="2" />
<text  x="649.55" y="927.5" ></text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;) (11 samples, 12.64%)</title><rect x="512.1" y="1077" width="98.6" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="515.07" y="1087.5" >auto boost:..</text>
</g>
<g >
<title>websocketpp::http::status_code::get_string[abi:cxx11](websocketpp::http::status_code::value) (1 samples, 1.15%)</title><rect x="305.9" y="613" width="8.9" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="308.86" y="623.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, bool const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt;&amp;, std::reference_wrapper&lt;websocketpp::random::none::int_generator&lt;unsigned int&gt; &gt; &gt;(std::_Sp_make_shared_tag, websocketpp::connection&lt;websocketpp::config::asio&gt;*, std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt; const&amp;, bool const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt;&amp;, std::reference_wrapper&lt;websocketpp::random::none::int_generator&lt;unsigned int&gt; &gt;&amp;&amp;) (4 samples, 4.60%)</title><rect x="207.2" y="629" width="35.9" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="210.24" y="639.5" >std..</text>
</g>
<g >
<title>void boost::asio::detail::epoll_reactor::schedule_timer&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;(boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;&amp;, boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt;::time_type const&amp;, boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::per_timer_data&amp;, boost::asio::detail::wait_op*) (1 samples, 1.15%)</title><rect x="162.4" y="213" width="9.0" height="15.0" fill="rgb(240,131,39)" rx="2" ry="2" />
<text  x="165.41" y="223.5" ></text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;) (12 samples, 13.79%)</title><rect x="503.1" y="1317" width="107.6" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="506.10" y="1327.5" >auto boost::a..</text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;) (24 samples, 27.59%)</title><rect x="287.9" y="1317" width="215.2" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="290.93" y="1327.5" >auto boost::asio::io_context..</text>
</g>
<g >
<title>shutdown (4 samples, 4.60%)</title><rect x="565.9" y="629" width="35.8" height="15.0" fill="rgb(243,135,41)" rx="2" ry="2" />
<text  x="568.86" y="639.5" >shu..</text>
</g>
<g >
<title>void boost::asio::detail::reactive_socket_service_base::async_send&lt;boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;, int, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; const&amp;) (8 samples, 9.20%)</title><rect x="359.7" y="517" width="71.7" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="362.66" y="527.5" >void boo..</text>
</g>
<g >
<title>boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::cancel() (2 samples, 2.30%)</title><rect x="135.5" y="437" width="17.9" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="138.52" y="447.5" ></text>
</g>
<g >
<title>websocketpp::server&lt;websocketpp::config::asio&gt;::start_accept(std::error_code&amp;) (8 samples, 9.20%)</title><rect x="189.3" y="741" width="71.7" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="192.31" y="751.5" >websocke..</text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code, unsigned long)&gt;::initiate&lt;boost::asio::detail::initiate_async_read_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::mutable_buffers_1 const&amp;, boost::asio::detail::transfer_at_least_t&gt;(boost::asio::detail::initiate_async_read_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, boost::asio::mutable_buffers_1 const&amp;, boost::asio::detail::transfer_at_least_t&amp;&amp;) (1 samples, 1.15%)</title><rect x="153.4" y="261" width="9.0" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="156.45" y="271.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt;::operator()&lt;std::error_code const&amp;, void&gt;(std::error_code const&amp;) (10 samples, 11.49%)</title><rect x="521.0" y="789" width="89.7" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="524.03" y="799.5" >void std::..</text>
</g>
<g >
<title>websocketpp::http::parser::parser::get_header(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 1.15%)</title><rect x="530.0" y="693" width="9.0" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="533.00" y="703.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (2 samples, 2.30%)</title><rect x="646.6" y="1189" width="17.9" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="649.55" y="1199.5" ></text>
</g>
<g >
<title>auto boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::async_wait&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="601.7" y="661" width="9.0" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="604.72" y="671.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;) (25 samples, 28.74%)</title><rect x="279.0" y="1381" width="224.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="281.97" y="1391.5" >void boost_asio_handler_invok..</text>
</g>
<g >
<title>boost::asio::detail::timer_queue_set::wait_duration_usec(long) const (1 samples, 1.15%)</title><rect x="171.4" y="421" width="8.9" height="15.0" fill="rgb(237,151,35)" rx="2" ry="2" />
<text  x="174.38" y="431.5" ></text>
</g>
<g >
<title>_IO_vsprintf (1 samples, 1.15%)</title><rect x="36.9" y="1525" width="9.0" height="15.0" fill="rgb(243,132,42)" rx="2" ry="2" />
<text  x="39.90" y="1535.5" ></text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;::~rewrapped_handler() (2 samples, 2.30%)</title><rect x="646.6" y="1253" width="17.9" height="15.0" fill="rgb(241,151,40)" rx="2" ry="2" />
<text  x="649.55" y="1263.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;&gt;::type std::__invoke&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;&gt;(void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;) (22 samples, 25.29%)</title><rect x="287.9" y="869" width="197.3" height="15.0" fill="rgb(242,146,41)" rx="2" ry="2" />
<text  x="290.93" y="879.5" >std::__invoke_result&lt;void..</text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (7 samples, 8.05%)</title><rect x="619.7" y="1333" width="62.7" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="622.66" y="1343.5" >std::e..</text>
</g>
<g >
<title>std::__shared_ptr_access&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator-&gt;() const (1 samples, 1.15%)</title><rect x="547.9" y="677" width="9.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="550.93" y="687.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt; &gt;::_M_init_functor(std::_Any_data&amp;, std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt;&amp;&amp;, std::integral_constant&lt;bool, false&gt;) (1 samples, 1.15%)</title><rect x="189.3" y="693" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="192.31" y="703.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard(std::mutex&amp;) (1 samples, 1.15%)</title><rect x="225.2" y="517" width="8.9" height="15.0" fill="rgb(247,146,47)" rx="2" ry="2" />
<text  x="228.17" y="527.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, bool const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt;&amp;, std::reference_wrapper&lt;websocketpp::random::none::int_generator&lt;unsigned int&gt; &gt; &gt;(std::_Sp_make_shared_tag, std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt; const&amp;, bool const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt;&amp;, std::reference_wrapper&lt;websocketpp::random::none::int_generator&lt;unsigned int&gt; &gt;&amp;&amp;) (4 samples, 4.60%)</title><rect x="207.2" y="645" width="35.9" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="210.24" y="655.5" >std..</text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::swap(std::function&lt;void (std::error_code const&amp;)&gt;&amp;) (2 samples, 2.30%)</title><rect x="628.6" y="1125" width="18.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="631.62" y="1135.5" ></text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;) (7 samples, 8.05%)</title><rect x="619.7" y="1285" width="62.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="622.66" y="1295.5" >void b..</text>
</g>
<g >
<title>boost::asio::detail::conditionally_enabled_mutex::scoped_lock::~scoped_lock() (1 samples, 1.15%)</title><rect x="162.4" y="197" width="9.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="165.41" y="207.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (22 samples, 25.29%)</title><rect x="287.9" y="1045" width="197.3" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="290.93" y="1055.5" >void boost::asio::async_r..</text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, ...) (23 samples, 26.44%)</title><rect x="287.9" y="1157" width="206.2" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="290.93" y="1167.5" >void boost::asio::asio_hand..</text>
</g>
<g >
<title>bool std::lexicographical_compare&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, websocketpp::utility::ci_less::nocase_compare&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, websocketpp::utility::ci_less::nocase_compare) (1 samples, 1.15%)</title><rect x="458.3" y="597" width="8.9" height="15.0" fill="rgb(246,151,46)" rx="2" ry="2" />
<text  x="461.28" y="607.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (18 samples, 20.69%)</title><rect x="108.6" y="1285" width="161.4" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="111.62" y="1295.5" >void boost::asio::as..</text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, void&gt;::complete&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;) (12 samples, 13.79%)</title><rect x="503.1" y="1397" width="107.6" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="506.10" y="1407.5" >void boost::a..</text>
</g>
<g >
<title>boost::asio::detail::socket_ops::accept(int, sockaddr*, unsigned long*, boost::system::error_code&amp;) (1 samples, 1.15%)</title><rect x="252.1" y="533" width="8.9" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="255.07" y="543.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::start_op(int, int, boost::asio::detail::epoll_reactor::descriptor_state*&amp;, boost::asio::detail::reactor_op*, bool, bool) (8 samples, 9.20%)</title><rect x="359.7" y="485" width="71.7" height="15.0" fill="rgb(241,151,39)" rx="2" ry="2" />
<text  x="362.66" y="495.5" >boost::a..</text>
</g>
<g >
<title>__libc_accept (1 samples, 1.15%)</title><rect x="252.1" y="517" width="8.9" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="255.07" y="527.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::handle_async_read(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long) (22 samples, 25.29%)</title><rect x="287.9" y="837" width="197.3" height="15.0" fill="rgb(247,141,46)" rx="2" ry="2" />
<text  x="290.93" y="847.5" >websocketpp::transport::a..</text>
</g>
<g >
<title>websocketpp::transport::asio::basic_socket::connection::~connection() (1 samples, 1.15%)</title><rect x="655.5" y="709" width="9.0" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="658.52" y="719.5" ></text>
</g>
<g >
<title>websocketpp::utility::ci_less::operator()(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 1.15%)</title><rect x="530.0" y="629" width="9.0" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="533.00" y="639.5" ></text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, ...) (16 samples, 18.39%)</title><rect x="117.6" y="965" width="143.4" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="120.59" y="975.5" >void boost::asio::..</text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;, boost::asio::io_context::strand*) const (11 samples, 12.64%)</title><rect x="512.1" y="1029" width="98.6" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="515.07" y="1039.5" >void boost:..</text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::tuple(std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="673.4" y="933" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="676.45" y="943.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt;, void&gt;::complete&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;) (11 samples, 12.64%)</title><rect x="512.1" y="1221" width="98.6" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="515.07" y="1231.5" >void boost:..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, false&gt;::~_Head_base() (2 samples, 2.30%)</title><rect x="646.6" y="869" width="17.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="649.55" y="879.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::set_timer(long, std::function&lt;void (std::error_code const&amp;)&gt;) (1 samples, 1.15%)</title><rect x="162.4" y="309" width="9.0" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="165.41" y="319.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code, unsigned long)&gt;::initiate&lt;boost::asio::detail::initiate_async_write_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; const&amp;, boost::asio::detail::transfer_all_t&gt;(boost::asio::detail::initiate_async_write_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; const&amp;, boost::asio::detail::transfer_all_t&amp;&amp;) (8 samples, 9.20%)</title><rect x="359.7" y="645" width="71.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="362.66" y="655.5" >void boo..</text>
</g>
<g >
<title>lbpf (87 samples, 100.00%)</title><rect x="10.0" y="1557" width="780.0" height="15.0" fill="rgb(247,102,47)" rx="2" ry="2" />
<text  x="13.00" y="1567.5" >lbpf</text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;) (2 samples, 2.30%)</title><rect x="664.5" y="1237" width="17.9" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="667.48" y="1247.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, void&gt;::complete&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;) (25 samples, 28.74%)</title><rect x="279.0" y="1397" width="224.1" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="281.97" y="1407.5" >void boost::asio::detail::han..</text>
</g>
<g >
<title>boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::operator()(boost::system::error_code const&amp;, unsigned long, int) (8 samples, 9.20%)</title><rect x="359.7" y="597" width="71.7" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="362.66" y="607.5" >boost::a..</text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::connection(bool, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt; const&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt; const&amp;, websocketpp::random::none::int_generator&lt;unsigned int&gt;&amp;) (3 samples, 3.45%)</title><rect x="207.2" y="565" width="26.9" height="15.0" fill="rgb(246,141,45)" rx="2" ry="2" />
<text  x="210.24" y="575.5" >w..</text>
</g>
<g >
<title>[unknown] (1 samples, 1.15%)</title><rect x="350.7" y="613" width="9.0" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="353.69" y="623.5" ></text>
</g>
<g >
<title>std::error_code::message[abi:cxx11]() const (1 samples, 1.15%)</title><rect x="556.9" y="693" width="9.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="559.90" y="703.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;&amp;&amp;) (2 samples, 2.30%)</title><rect x="628.6" y="1189" width="18.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="631.62" y="1199.5" ></text>
</g>
<g >
<title>websocketpp::server&lt;websocketpp::config::asio&gt;::get_connection() (5 samples, 5.75%)</title><rect x="198.3" y="725" width="44.8" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="201.28" y="735.5" >webs..</text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt;(char const*, char const*, std::__false_type) (1 samples, 1.15%)</title><rect x="556.9" y="629" width="9.0" height="15.0" fill="rgb(248,131,47)" rx="2" ry="2" />
<text  x="559.90" y="639.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt;::__call&lt;void, std::error_code const&amp;, 0ul, 1ul, 2ul, 3ul&gt;(std::tuple&lt;std::error_code const&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul, 3ul&gt;) (4 samples, 4.60%)</title><rect x="135.5" y="501" width="35.9" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="138.52" y="511.5" >voi..</text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;) (11 samples, 12.64%)</title><rect x="512.1" y="1013" width="98.6" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="515.07" y="1023.5" >void boost:..</text>
</g>
<g >
<title>auto boost::asio::async_write&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;&amp;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; const&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, std::enable_if&lt;boost::asio::is_const_buffer_sequence&lt;std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;::value, void&gt;::type*) (8 samples, 9.20%)</title><rect x="359.7" y="677" width="71.7" height="15.0" fill="rgb(239,112,38)" rx="2" ry="2" />
<text  x="362.66" y="687.5" >auto boo..</text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::destroy_void(boost::asio::execution::detail::any_executor_base&amp;) (1 samples, 1.15%)</title><rect x="610.7" y="1349" width="9.0" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="613.69" y="1359.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (17 samples, 19.54%)</title><rect x="117.6" y="1237" width="152.4" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="120.59" y="1247.5" >boost::asio::detail..</text>
</g>
<g >
<title>[unknown] (1 samples, 1.15%)</title><rect x="718.3" y="1509" width="8.9" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="721.28" y="1519.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (9 samples, 10.34%)</title><rect x="619.7" y="1381" width="80.6" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="622.66" y="1391.5" >void boos..</text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release() (1 samples, 1.15%)</title><rect x="655.5" y="645" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="658.52" y="655.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::run(long, boost::asio::detail::op_queue&lt;boost::asio::detail::scheduler_operation&gt;&amp;) (1 samples, 1.15%)</title><rect x="54.8" y="1429" width="9.0" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="57.83" y="1439.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;::shared_ptr(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="673.4" y="885" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="676.45" y="895.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base() (2 samples, 2.30%)</title><rect x="646.6" y="1125" width="17.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="649.55" y="1135.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;::allocate(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;, unsigned long) (1 samples, 1.15%)</title><rect x="216.2" y="437" width="9.0" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="219.21" y="447.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; std::allocate_shared&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&gt;(std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="216.2" y="517" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="219.21" y="527.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;websocketpp::transport::asio::basic_socket::connection&gt;(std::__shared_ptr&lt;websocketpp::transport::asio::basic_socket::connection, (__gnu_cxx::_Lock_policy)2&gt; const&amp;, websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;*) (1 samples, 1.15%)</title><rect x="341.7" y="629" width="9.0" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="344.72" y="639.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt;::_Bind(std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt; const&amp;) (1 samples, 1.15%)</title><rect x="270.0" y="1173" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="273.00" y="1183.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&gt;(std::_Sp_make_shared_tag, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;*, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="216.2" y="469" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="219.21" y="479.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate(std::error_code const&amp;) (6 samples, 6.90%)</title><rect x="556.9" y="709" width="53.8" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="559.90" y="719.5" >webso..</text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, void (boost::system::error_code, unsigned long)&gt;::initiate&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_send, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;, int&gt;(boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_send&amp;&amp;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;, boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;, int&amp;&amp;) (8 samples, 9.20%)</title><rect x="359.7" y="549" width="71.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="362.66" y="559.5" >void boo..</text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::descriptor_state::perform_io(unsigned int) (2 samples, 2.30%)</title><rect x="72.8" y="1397" width="17.9" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="75.76" y="1407.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;::type std::__invoke&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;(void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;) (10 samples, 11.49%)</title><rect x="521.0" y="757" width="89.7" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="524.03" y="767.5" >std::__inv..</text>
</g>
<g >
<title>boost::asio::detail::completion_handler&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (23 samples, 26.44%)</title><rect x="287.9" y="1237" width="206.2" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="290.93" y="1247.5" >boost::asio::detail::comple..</text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;*) (11 samples, 12.64%)</title><rect x="512.1" y="981" width="98.6" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="515.07" y="991.5" >void boost:..</text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;) (12 samples, 13.79%)</title><rect x="503.1" y="1381" width="107.6" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="506.10" y="1391.5" >void boost_as..</text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::operator()&lt;boost::system::error_code const&amp;, void&gt;(boost::system::error_code const&amp;) (16 samples, 18.39%)</title><rect x="117.6" y="933" width="143.4" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="120.59" y="943.5" >void std::_Bind&lt;vo..</text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;&amp;) (11 samples, 12.64%)</title><rect x="512.1" y="965" width="98.6" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="515.07" y="975.5" >void boost_..</text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::set_timer(long, std::function&lt;void (std::error_code const&amp;)&gt;) (1 samples, 1.15%)</title><rect x="601.7" y="677" width="9.0" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="604.72" y="687.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt; &gt;::shared_ptr&lt;websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt;, void&gt;(websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt;*) (1 samples, 1.15%)</title><rect x="207.2" y="549" width="9.0" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="210.24" y="559.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::uri&gt;::shared_ptr&lt;std::allocator&lt;websocketpp::uri&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;websocketpp::uri&gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="323.8" y="645" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="326.79" y="655.5" ></text>
</g>
<g >
<title>std::map&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 1.15%)</title><rect x="530.0" y="677" width="9.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="533.00" y="687.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="350.7" y="661" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="353.69" y="671.5" ></text>
</g>
<g >
<title>[Missed User Stack] (1 samples, 1.15%)</title><rect x="10.0" y="1541" width="9.0" height="15.0" fill="rgb(238,193,37)" rx="2" ry="2" />
<text  x="13.00" y="1551.5" ></text>
</g>
<g >
<title>auto boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::async_write_some&lt;boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt; &gt;(boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;) (8 samples, 9.20%)</title><rect x="359.7" y="581" width="71.7" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="362.66" y="591.5" >auto boo..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="673.4" y="1061" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="676.45" y="1071.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;&amp;&amp;) (2 samples, 2.30%)</title><rect x="628.6" y="1205" width="18.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="631.62" y="1215.5" ></text>
</g>
<g >
<title>boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;::wrapped_handler(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) (2 samples, 2.30%)</title><rect x="682.4" y="1317" width="17.9" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="685.41" y="1327.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt;::_Bind(std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt; const&amp;) (1 samples, 1.15%)</title><rect x="512.1" y="789" width="8.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="515.07" y="799.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::_Bind(std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;&amp;) (2 samples, 2.30%)</title><rect x="682.4" y="1301" width="17.9" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="685.41" y="1311.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;::shared_ptr&lt;websocketpp::transport::asio::basic_socket::connection&gt;(std::shared_ptr&lt;websocketpp::transport::asio::basic_socket::connection&gt; const&amp;, websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;*) (1 samples, 1.15%)</title><rect x="341.7" y="645" width="9.0" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="344.72" y="655.5" ></text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;) (7 samples, 8.05%)</title><rect x="619.7" y="1349" width="62.7" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="622.66" y="1359.5" >auto b..</text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (11 samples, 12.64%)</title><rect x="512.1" y="1301" width="98.6" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="515.07" y="1311.5" >std::enable..</text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;) (11 samples, 12.64%)</title><rect x="512.1" y="853" width="98.6" height="15.0" fill="rgb(242,131,41)" rx="2" ry="2" />
<text  x="515.07" y="863.5" >void std::_..</text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;::rewrapped_handler(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="108.6" y="1221" width="9.0" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="111.62" y="1231.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;::operator()() (17 samples, 19.54%)</title><rect x="117.6" y="1125" width="152.4" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="120.59" y="1135.5" >boost::asio::detail..</text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt;::operator()&lt;std::error_code const&amp;, void&gt;(std::error_code const&amp;) (15 samples, 17.24%)</title><rect x="126.6" y="821" width="134.4" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="129.55" y="831.5" >void std::_Bind&lt;..</text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::operator()(std::error_code const&amp;) const (10 samples, 11.49%)</title><rect x="521.0" y="821" width="89.7" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="524.03" y="831.5" >std::funct..</text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;*) (19 samples, 21.84%)</title><rect x="108.6" y="1333" width="170.4" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="111.62" y="1343.5" >void boost::asio::deta..</text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::_Bind(std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; const&amp;) (1 samples, 1.15%)</title><rect x="673.4" y="1093" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="676.45" y="1103.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;&gt;::type std::__invoke&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;&gt;(void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;) (4 samples, 4.60%)</title><rect x="135.5" y="485" width="35.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="138.52" y="495.5" >std..</text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::error_code const&amp;, unsigned long)&gt;::operator()&lt;std::error_code const&amp;, unsigned long, void&gt;(std::error_code const&amp;, unsigned long&amp;&amp;) (22 samples, 25.29%)</title><rect x="287.9" y="789" width="197.3" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="290.93" y="799.5" >void std::_Bind&lt;void (web..</text>
</g>
<g >
<title>boost::asio::detail::socket_ops::non_blocking_send(int, iovec const*, unsigned long, int, boost::system::error_code&amp;, unsigned long&amp;) (7 samples, 8.05%)</title><rect x="368.6" y="437" width="62.8" height="15.0" fill="rgb(242,151,41)" rx="2" ry="2" />
<text  x="371.62" y="447.5" >boost:..</text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::descriptor_state::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (23 samples, 26.44%)</title><rect x="72.8" y="1413" width="206.2" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="75.76" y="1423.5" >boost::asio::detail::epoll_..</text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_recv_op&lt;boost::asio::mutable_buffers_1, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (25 samples, 28.74%)</title><rect x="279.0" y="1413" width="224.1" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="281.97" y="1423.5" >boost::asio::detail::reactive..</text>
</g>
<g >
<title>__libc_accept (2 samples, 2.30%)</title><rect x="72.8" y="1317" width="17.9" height="15.0" fill="rgb(238,154,37)" rx="2" ry="2" />
<text  x="75.76" y="1327.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt; std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt; &gt;(std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;&amp;) (1 samples, 1.15%)</title><rect x="216.2" y="453" width="9.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="219.21" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringbuf() (1 samples, 1.15%)</title><rect x="727.2" y="1525" width="9.0" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="730.24" y="1535.5" ></text>
</g>
<g >
<title>auto boost::asio::async_read&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;&amp;, boost::asio::mutable_buffers_1 const&amp;, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, std::enable_if&lt;boost::asio::is_mutable_buffer_sequence&lt;boost::asio::mutable_buffers_1&gt;::value, void&gt;::type*) (1 samples, 1.15%)</title><rect x="153.4" y="293" width="9.0" height="15.0" fill="rgb(239,112,38)" rx="2" ry="2" />
<text  x="156.45" y="303.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::basic_socket::connection::async_shutdown(std::function&lt;void (boost::system::error_code const&amp;)&gt;) (4 samples, 4.60%)</title><rect x="565.9" y="677" width="35.8" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="568.86" y="687.5" >web..</text>
</g>
<g >
<title>websocketpp::http::parser::request::request() (1 samples, 1.15%)</title><rect x="216.2" y="549" width="9.0" height="15.0" fill="rgb(239,141,38)" rx="2" ry="2" />
<text  x="219.21" y="559.5" ></text>
</g>
<g >
<title>void boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::async_accept&lt;boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;(boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::implementation_type&amp;, boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;&amp;, boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;*, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; const&amp;) (2 samples, 2.30%)</title><rect x="243.1" y="645" width="17.9" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="246.10" y="655.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::uri&gt; std::allocate_shared&lt;websocketpp::uri, std::allocator&lt;websocketpp::uri&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::allocator&lt;websocketpp::uri&gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="323.8" y="661" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="326.79" y="671.5" ></text>
</g>
<g >
<title>void boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;::operator()&lt;boost::system::error_code&gt;(boost::system::error_code const&amp;) (17 samples, 19.54%)</title><rect x="117.6" y="1109" width="152.4" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="120.59" y="1119.5" >void boost::asio::d..</text>
</g>
<g >
<title>all (87 samples, 100%)</title><rect x="10.0" y="1573" width="780.0" height="15.0" fill="rgb(255,230,55)" rx="2" ry="2" />
<text  x="13.00" y="1583.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::shared_ptr&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="216.2" y="501" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="219.21" y="511.5" ></text>
</g>
<g >
<title>boost::asio::detail::call_stack&lt;boost::asio::detail::strand_service::strand_impl, unsigned char&gt;::context::~context() (1 samples, 1.15%)</title><rect x="619.7" y="1269" width="8.9" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="622.66" y="1279.5" ></text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;) (22 samples, 25.29%)</title><rect x="287.9" y="1013" width="197.3" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="290.93" y="1023.5" >void boost::asio::detail:..</text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;(char const*, char const*, std::forward_iterator_tag) (1 samples, 1.15%)</title><rect x="556.9" y="613" width="9.0" height="15.0" fill="rgb(248,131,47)" rx="2" ry="2" />
<text  x="559.90" y="623.5" ></text>
</g>
<g >
<title>boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::operator()(boost::system::error_code const&amp;, unsigned long, int) (11 samples, 12.64%)</title><rect x="512.1" y="1109" width="98.6" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="515.07" y="1119.5" >boost::asio..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt;))(websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::error_code const&amp;)&gt; &gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation) (2 samples, 2.30%)</title><rect x="646.6" y="949" width="17.9" height="15.0" fill="rgb(251,146,50)" rx="2" ry="2" />
<text  x="649.55" y="959.5" ></text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count() (2 samples, 2.30%)</title><rect x="646.6" y="821" width="17.9" height="15.0" fill="rgb(239,146,38)" rx="2" ry="2" />
<text  x="649.55" y="831.5" ></text>
</g>
<g >
<title>boost::asio::detail::io_object_impl&lt;boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::~io_object_impl() (1 samples, 1.15%)</title><rect x="655.5" y="581" width="9.0" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="658.52" y="591.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt; std::make_shared&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, bool const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt;&amp;, std::reference_wrapper&lt;websocketpp::random::none::int_generator&lt;unsigned int&gt; &gt; &gt;(bool const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt;&amp;, std::reference_wrapper&lt;websocketpp::random::none::int_generator&lt;unsigned int&gt; &gt;&amp;&amp;) (5 samples, 5.75%)</title><rect x="198.3" y="693" width="44.8" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="201.28" y="703.5" >std:..</text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::operator()(std::error_code const&amp;) const (15 samples, 17.24%)</title><rect x="126.6" y="853" width="134.4" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="129.55" y="863.5" >std::function&lt;vo..</text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::tuple(std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;&amp;&amp;) (2 samples, 2.30%)</title><rect x="682.4" y="1285" width="17.9" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="685.41" y="1295.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_accept_op&lt;boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::ip::tcp, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (21 samples, 24.14%)</title><rect x="90.7" y="1381" width="188.3" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="93.69" y="1391.5" >boost::asio::detail::rea..</text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;::operator()() (23 samples, 26.44%)</title><rect x="287.9" y="1141" width="206.2" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="290.93" y="1151.5" >boost::asio::detail::rewrap..</text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;(boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;*) (12 samples, 13.79%)</title><rect x="503.1" y="1333" width="107.6" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="506.10" y="1343.5" >void boost::a..</text>
</g>
<g >
<title>void websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;::operator()&lt;boost::system::error_code, unsigned long&gt;(boost::system::error_code, unsigned long) (22 samples, 25.29%)</title><rect x="287.9" y="917" width="197.3" height="15.0" fill="rgb(247,131,46)" rx="2" ry="2" />
<text  x="290.93" y="927.5" >void websocketpp::transpo..</text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt; &gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation) (1 samples, 1.15%)</title><rect x="512.1" y="821" width="8.9" height="15.0" fill="rgb(251,146,50)" rx="2" ry="2" />
<text  x="515.07" y="831.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;0ul, websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="270.0" y="1141" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="273.00" y="1151.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::~function() (2 samples, 2.30%)</title><rect x="646.6" y="981" width="17.9" height="15.0" fill="rgb(244,146,43)" rx="2" ry="2" />
<text  x="649.55" y="991.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;::operator()() (22 samples, 25.29%)</title><rect x="287.9" y="1125" width="197.3" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="290.93" y="1135.5" >boost::asio::detail::bind..</text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt;(char const*, char const*, std::forward_iterator_tag) (1 samples, 1.15%)</title><rect x="521.0" y="645" width="9.0" height="15.0" fill="rgb(248,131,47)" rx="2" ry="2" />
<text  x="524.03" y="655.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 1.15%)</title><rect x="99.7" y="1301" width="8.9" height="15.0" fill="rgb(232,202,30)" rx="2" ry="2" />
<text  x="102.66" y="1311.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 1.15%)</title><rect x="727.2" y="1509" width="9.0" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="730.24" y="1519.5" ></text>
</g>
<g >
<title>boost::asio::detail::socket_ops::non_blocking_recv1(int, void*, unsigned long, int, bool, boost::system::error_code&amp;, unsigned long&amp;) (1 samples, 1.15%)</title><rect x="153.4" y="53" width="9.0" height="15.0" fill="rgb(242,151,41)" rx="2" ry="2" />
<text  x="156.45" y="63.5" ></text>
</g>
<g >
<title>boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::wait_duration_usec(long) const (1 samples, 1.15%)</title><rect x="171.4" y="405" width="8.9" height="15.0" fill="rgb(237,151,35)" rx="2" ry="2" />
<text  x="174.38" y="415.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt;::__call&lt;void, std::error_code const&amp;, 0ul, 1ul, 2ul&gt;(std::tuple&lt;std::error_code const&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul&gt;) (7 samples, 8.05%)</title><rect x="126.6" y="645" width="62.7" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="129.55" y="655.5" >void s..</text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_send_op&lt;boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (12 samples, 13.79%)</title><rect x="503.1" y="1413" width="107.6" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="506.10" y="1423.5" >boost::asio::..</text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::assign(boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::implementation_type&amp;, boost::asio::ip::tcp const&amp;, int const&amp;, boost::system::error_code&amp;) (1 samples, 1.15%)</title><rect x="99.7" y="1333" width="8.9" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="102.66" y="1343.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::async_shutdown(std::function&lt;void (std::error_code const&amp;)&gt;) (5 samples, 5.75%)</title><rect x="565.9" y="693" width="44.8" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="568.86" y="703.5" >webs..</text>
</g>
<g >
<title>boost::asio::detail::io_object_impl&lt;boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::get_service() (1 samples, 1.15%)</title><rect x="180.3" y="533" width="9.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="183.34" y="543.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code)&gt;::initiate&lt;boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_accept, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;*, boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;*&gt;(boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_accept&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;*&amp;&amp;, boost::asio::ip::basic_endpoint&lt;boost::asio::ip::tcp&gt;*&amp;&amp;) (2 samples, 2.30%)</title><rect x="243.1" y="677" width="17.9" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="246.10" y="687.5" ></text>
</g>
<g >
<title>websocketpp::http::parser::parser::get_header(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 1.15%)</title><rect x="458.3" y="677" width="8.9" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="461.28" y="687.5" ></text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;::rewrapped_handler(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;) (2 samples, 2.30%)</title><rect x="628.6" y="1253" width="18.0" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="631.62" y="1263.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::async_accept(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code&amp;) (2 samples, 2.30%)</title><rect x="243.1" y="725" width="17.9" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="246.10" y="735.5" ></text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;) (18 samples, 20.69%)</title><rect x="108.6" y="1253" width="161.4" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="111.62" y="1263.5" >void boost::asio::de..</text>
</g>
<g >
<title>std::__shared_ptr&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr() (1 samples, 1.15%)</title><rect x="655.5" y="677" width="9.0" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="658.52" y="687.5" ></text>
</g>
<g >
<title>boost::asio::detail::op_queue&lt;boost::asio::detail::scheduler_operation&gt;::~op_queue() (1 samples, 1.15%)</title><rect x="135.5" y="389" width="9.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="138.52" y="399.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const*, std::_Rb_tree_node_base const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 1.15%)</title><rect x="530.0" y="645" width="9.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="533.00" y="655.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::wake_one_thread_and_unlock(boost::asio::detail::conditionally_enabled_mutex::scoped_lock&amp;) (1 samples, 1.15%)</title><rect x="63.8" y="1429" width="9.0" height="15.0" fill="rgb(240,151,38)" rx="2" ry="2" />
<text  x="66.79" y="1439.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_accept_op_base&lt;boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::ip::tcp&gt;::do_assign() (1 samples, 1.15%)</title><rect x="99.7" y="1365" width="8.9" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="102.66" y="1375.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;::operator()() (2 samples, 2.30%)</title><rect x="664.5" y="1157" width="17.9" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="667.48" y="1167.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;websocketpp::uri, (__gnu_cxx::_Lock_policy)2, false, false&gt;::operator-&gt;() const (1 samples, 1.15%)</title><rect x="287.9" y="709" width="9.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="290.93" y="719.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base() (2 samples, 2.30%)</title><rect x="646.6" y="965" width="17.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="649.55" y="975.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;0ul, websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="189.3" y="661" width="9.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="192.31" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::~vector() (1 samples, 1.15%)</title><rect x="646.6" y="725" width="8.9" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="649.55" y="735.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt; &gt;::_M_clone(std::_Any_data&amp;, std::_Any_data const&amp;, std::integral_constant&lt;bool, false&gt;) (1 samples, 1.15%)</title><rect x="512.1" y="805" width="8.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="515.07" y="815.5" ></text>
</g>
<g >
<title>void boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;::operator()&lt;boost::system::error_code, unsigned long&gt;(boost::system::error_code const&amp;, unsigned long const&amp;) (22 samples, 25.29%)</title><rect x="287.9" y="1093" width="197.3" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="290.93" y="1103.5" >void boost::asio::detail:..</text>
</g>
<g >
<title>void boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;::operator()&lt;boost::system::error_code&gt;(boost::system::error_code const&amp;) (2 samples, 2.30%)</title><rect x="664.5" y="1141" width="17.9" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="667.48" y="1151.5" ></text>
</g>
<g >
<title>void std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt;(char const*, char const*, std::__false_type) (1 samples, 1.15%)</title><rect x="521.0" y="661" width="9.0" height="15.0" fill="rgb(248,131,47)" rx="2" ry="2" />
<text  x="524.03" y="671.5" ></text>
</g>
<g >
<title>epoll_wait (2 samples, 2.30%)</title><rect x="700.3" y="1429" width="18.0" height="15.0" fill="rgb(237,202,35)" rx="2" ry="2" />
<text  x="703.34" y="1439.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, void&gt;::handler_work(boost::asio::detail::handler_work&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, void&gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="90.7" y="1365" width="9.0" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="93.69" y="1375.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt;::operator()&lt;std::error_code const&amp;, void&gt;(std::error_code const&amp;) (7 samples, 8.05%)</title><rect x="126.6" y="661" width="62.7" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="129.55" y="671.5" >void s..</text>
</g>
<g >
<title>void __gnu_cxx::new_allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;::construct&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, bool const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt;&amp;, std::reference_wrapper&lt;websocketpp::random::none::int_generator&lt;unsigned int&gt; &gt; &gt;(websocketpp::connection&lt;websocketpp::config::asio&gt;*, bool const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt;&amp;, std::reference_wrapper&lt;websocketpp::random::none::int_generator&lt;unsigned int&gt; &gt;&amp;&amp;) (4 samples, 4.60%)</title><rect x="207.2" y="581" width="35.9" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="210.24" y="591.5" >voi..</text>
</g>
<g >
<title>std::__shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, (__gnu_cxx::_Lock_policy)2&gt;::~__shared_ptr() (2 samples, 2.30%)</title><rect x="646.6" y="837" width="17.9" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="649.55" y="847.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::handle_post_init(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;) (4 samples, 4.60%)</title><rect x="135.5" y="453" width="35.9" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="138.52" y="463.5" >web..</text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code, unsigned long)&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::type, void (boost::system::error_code, unsigned long)&gt;::initiate((declval&lt;boost::asio::detail::initiate_async_write_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;&gt;)(), (declval&lt;std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; const&amp;&gt;)(), (declval&lt;boost::asio::detail::transfer_all_t&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code, unsigned long), boost::asio::detail::initiate_async_write_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; const&amp;, boost::asio::detail::transfer_all_t&gt;(boost::asio::detail::initiate_async_write_buffer_sequence&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; const&amp;, boost::asio::detail::transfer_all_t&amp;&amp;) (8 samples, 9.20%)</title><rect x="359.7" y="661" width="71.7" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="362.66" y="671.5" >std::ena..</text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;&amp;) (22 samples, 25.29%)</title><rect x="287.9" y="965" width="197.3" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="290.93" y="975.5" >void boost_asio_handler_i..</text>
</g>
<g >
<title>websocketpp::utility::ci_less::operator()(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 1.15%)</title><rect x="458.3" y="613" width="8.9" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="461.28" y="623.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (2 samples, 2.30%)</title><rect x="646.6" y="885" width="17.9" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="649.55" y="895.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (std::weak_ptr&lt;void&gt;), main::{lambda(auto:1)#1}&gt;::_M_invoke(std::_Any_data const&amp;, std::weak_ptr&lt;void&gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="305.9" y="677" width="8.9" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="308.86" y="687.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::basic_socket::connection::pre_init(std::function&lt;void (std::error_code const&amp;)&gt;) (7 samples, 8.05%)</title><rect x="126.6" y="709" width="62.7" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="129.55" y="719.5" >websoc..</text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;, unsigned long&gt;::type std::__invoke&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;, unsigned long&gt;(void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;, unsigned long&amp;&amp;) (21 samples, 24.14%)</title><rect x="287.9" y="757" width="188.3" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="290.93" y="767.5" >std::__invoke_result&lt;voi..</text>
</g>
<g >
<title>void websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;::operator()&lt;boost::system::error_code, unsigned long&gt;(boost::system::error_code, unsigned long) (11 samples, 12.64%)</title><rect x="512.1" y="917" width="98.6" height="15.0" fill="rgb(247,131,46)" rx="2" ry="2" />
<text  x="515.07" y="927.5" >void websoc..</text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt;::__call&lt;void, std::error_code const&amp;, 0ul, 1ul&gt;(std::tuple&lt;std::error_code const&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul&gt;) (10 samples, 11.49%)</title><rect x="521.0" y="773" width="89.7" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="524.03" y="783.5" >void std::..</text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;) (17 samples, 19.54%)</title><rect x="117.6" y="1205" width="152.4" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="120.59" y="1215.5" >void boost_asio_han..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;&amp;&amp;) (2 samples, 2.30%)</title><rect x="682.4" y="1269" width="17.9" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="685.41" y="1279.5" ></text>
</g>
<g >
<title>void __gnu_cxx::new_allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;::destroy&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;(websocketpp::connection&lt;websocketpp::config::asio&gt;*) (2 samples, 2.30%)</title><rect x="646.6" y="757" width="17.9" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="649.55" y="767.5" ></text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;&amp;, boost::asio::io_context::strand*) const (1 samples, 1.15%)</title><rect x="664.5" y="1077" width="8.9" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="667.48" y="1087.5" ></text>
</g>
<g >
<title>boost::asio::detail::wait_handler&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (10 samples, 11.49%)</title><rect x="610.7" y="1413" width="89.6" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="613.69" y="1423.5" >boost::asi..</text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (24 samples, 27.59%)</title><rect x="287.9" y="1285" width="215.2" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="290.93" y="1295.5" >void boost::asio::async_resu..</text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;*) (17 samples, 19.54%)</title><rect x="117.6" y="1189" width="152.4" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="120.59" y="1199.5" >void boost::asio::d..</text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;&amp;) (16 samples, 18.39%)</title><rect x="117.6" y="1093" width="143.4" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="120.59" y="1103.5" >auto boost::asio::..</text>
</g>
<g >
<title>void boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_send::operator()&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; &gt;(boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;, boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;, int) const (8 samples, 9.20%)</title><rect x="359.7" y="533" width="71.7" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="362.66" y="543.5" >void boo..</text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, void (boost::system::error_code, unsigned long)&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt; &gt;::type, void (boost::system::error_code, unsigned long)&gt;::initiate((declval&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_receive&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::mutable_buffers_1 const&amp;&gt;)(), (declval&lt;int&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, void (boost::system::error_code, unsigned long), boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_receive, boost::asio::mutable_buffers_1 const&amp;, int&gt;(boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_receive&amp;&amp;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;, boost::asio::mutable_buffers_1 const&amp;, int&amp;&amp;) (1 samples, 1.15%)</title><rect x="153.4" y="181" width="9.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="156.45" y="191.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete(void*, boost::system::error_code const&amp;, unsigned long) (21 samples, 24.14%)</title><rect x="90.7" y="1397" width="188.3" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="93.69" y="1407.5" >boost::asio::detail::sch..</text>
</g>
<g >
<title>__libc_malloc (1 samples, 1.15%)</title><rect x="781.0" y="1541" width="9.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="784.03" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy(char*, char const*, unsigned long) (1 samples, 1.15%)</title><rect x="521.0" y="629" width="9.0" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="524.03" y="639.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (22 samples, 25.29%)</title><rect x="287.9" y="1061" width="197.3" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="290.93" y="1071.5" >std::enable_if&lt;boost::asi..</text>
</g>
<g >
<title>void boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::async_wait&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;(boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::implementation_type&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="601.7" y="597" width="9.0" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="604.72" y="607.5" ></text>
</g>
<g >
<title>std::tuple&lt;websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::tuple(std::tuple&lt;websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="270.0" y="1285" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="273.00" y="1295.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt; &gt;::_M_init_functor(std::_Any_data&amp;, std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="189.3" y="709" width="9.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="192.31" y="719.5" ></text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;, boost::asio::io_context::strand*) const (7 samples, 8.05%)</title><rect x="619.7" y="1301" width="62.7" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="622.66" y="1311.5" >void b..</text>
</g>
<g >
<title>boost::asio::detail::socket_ops::non_blocking_accept(int, unsigned char, sockaddr*, unsigned long*, boost::system::error_code&amp;, int&amp;) (1 samples, 1.15%)</title><rect x="252.1" y="549" width="8.9" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="255.07" y="559.5" ></text>
</g>
<g >
<title>long boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::to_usec&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt;::posix_time_duration&gt;(boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt;::posix_time_duration const&amp;, long) const (1 samples, 1.15%)</title><rect x="171.4" y="389" width="8.9" height="15.0" fill="rgb(237,154,35)" rx="2" ry="2" />
<text  x="174.38" y="399.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~tuple() (2 samples, 2.30%)</title><rect x="646.6" y="1221" width="17.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="649.55" y="1231.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose() (2 samples, 2.30%)</title><rect x="646.6" y="789" width="17.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="649.55" y="799.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;::_Bind&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;, std::_Placeholder&lt;2&gt; const&amp;&gt;(void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;, std::_Placeholder&lt;2&gt; const&amp;) (1 samples, 1.15%)</title><rect x="431.4" y="661" width="8.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="434.38" y="671.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::read_handshake(unsigned long) (2 samples, 2.30%)</title><rect x="153.4" y="325" width="18.0" height="15.0" fill="rgb(247,141,46)" rx="2" ry="2" />
<text  x="156.45" y="335.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::~connection() (1 samples, 1.15%)</title><rect x="655.5" y="725" width="9.0" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="658.52" y="735.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::handle_write_http_response(std::error_code const&amp;) (10 samples, 11.49%)</title><rect x="521.0" y="725" width="89.7" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="524.03" y="735.5" >websocketp..</text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::~__shared_count() (1 samples, 1.15%)</title><rect x="655.5" y="661" width="9.0" height="15.0" fill="rgb(239,146,38)" rx="2" ry="2" />
<text  x="658.52" y="671.5" ></text>
</g>
<g >
<title>boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::~basic_stream_socket() (1 samples, 1.15%)</title><rect x="655.5" y="613" width="9.0" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="658.52" y="623.5" ></text>
</g>
<g >
<title>websocketpp::http::parser::response::set_status(websocketpp::http::status_code::value) (1 samples, 1.15%)</title><rect x="305.9" y="629" width="8.9" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="308.86" y="639.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (std::error_code const&amp;), std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt; &gt;::_M_invoke(std::_Any_data const&amp;, std::error_code const&amp;) (2 samples, 2.30%)</title><rect x="153.4" y="421" width="18.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="156.45" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="270.0" y="1125" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="273.00" y="1135.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;::__call&lt;void, boost::system::error_code&amp;, unsigned long&amp;, 0ul, 1ul, 2ul, 3ul&gt;(std::tuple&lt;boost::system::error_code&amp;, unsigned long&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul, 3ul&gt;) (22 samples, 25.29%)</title><rect x="287.9" y="885" width="197.3" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="290.93" y="895.5" >void std::_Bind&lt;void (web..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="673.4" y="1029" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="676.45" y="1039.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service&lt;boost::asio::ip::tcp&gt;::shutdown(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, boost::asio::socket_base::shutdown_type, boost::system::error_code&amp;) (4 samples, 4.60%)</title><rect x="565.9" y="645" width="35.8" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="568.86" y="655.5" >boo..</text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::async_read_at_least(unsigned long, char*, unsigned long, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;) (1 samples, 1.15%)</title><rect x="153.4" y="309" width="9.0" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="156.45" y="319.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (16 samples, 18.39%)</title><rect x="117.6" y="1077" width="143.4" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="120.59" y="1087.5" >std::enable_if&lt;boo..</text>
</g>
<g >
<title>std::_Placeholder&lt;1&gt;&amp; std::__get_helper&lt;1ul, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt; &gt;(std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt; &gt;&amp;) (1 samples, 1.15%)</title><rect x="476.2" y="741" width="9.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="479.21" y="751.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactor_op::perform() (2 samples, 2.30%)</title><rect x="72.8" y="1381" width="17.9" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="75.76" y="1391.5" ></text>
</g>
<g >
<title>sendmsg (7 samples, 8.05%)</title><rect x="368.6" y="421" width="62.8" height="15.0" fill="rgb(243,173,42)" rx="2" ry="2" />
<text  x="371.62" y="431.5" >sendmsg</text>
</g>
<g >
<title>write (3 samples, 3.45%)</title><rect x="736.2" y="1525" width="26.9" height="15.0" fill="rgb(240,108,38)" rx="2" ry="2" />
<text  x="739.21" y="1535.5" >w..</text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (1 samples, 1.15%)</title><rect x="664.5" y="1093" width="8.9" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="667.48" y="1103.5" ></text>
</g>
<g >
<title>void std::enable_shared_from_this&lt;websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt; &gt;::_M_weak_assign&lt;websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt; &gt;(websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt;*, std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt; const&amp;) const (1 samples, 1.15%)</title><rect x="207.2" y="501" width="9.0" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="210.24" y="511.5" ></text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;) (18 samples, 20.69%)</title><rect x="108.6" y="1317" width="161.4" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="111.62" y="1327.5" >auto boost::asio::io..</text>
</g>
<g >
<title>bool std::__lexicographical_compare_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;websocketpp::utility::ci_less::nocase_compare&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;websocketpp::utility::ci_less::nocase_compare&gt;) (1 samples, 1.15%)</title><rect x="458.3" y="581" width="8.9" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="461.28" y="591.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;*) (25 samples, 28.74%)</title><rect x="279.0" y="1365" width="224.1" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="281.97" y="1375.5" >void boost::asio::detail::asi..</text>
</g>
<g >
<title>websocketpp::http::parser::parser::replace_header(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="350.7" y="693" width="9.0" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="353.69" y="703.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::~connection() (2 samples, 2.30%)</title><rect x="646.6" y="741" width="17.9" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="649.55" y="751.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (11 samples, 12.64%)</title><rect x="512.1" y="1045" width="98.6" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="515.07" y="1055.5" >void boost:..</text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::async_write(char const*, unsigned long, std::function&lt;void (std::error_code const&amp;)&gt;) (9 samples, 10.34%)</title><rect x="359.7" y="693" width="80.6" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="362.66" y="703.5" >websocket..</text>
</g>
<g >
<title>boost::asio::io_context::run() (75 samples, 86.21%)</title><rect x="45.9" y="1477" width="672.4" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="48.86" y="1487.5" >boost::asio::io_context::run()</text>
</g>
<g >
<title>std::__shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr(std::__shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;, (__gnu_cxx::_Lock_policy)2&gt; const&amp;) (1 samples, 1.15%)</title><rect x="673.4" y="869" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="676.45" y="879.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;std::decay&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;&gt;::type, boost::system::error_code&gt; boost::asio::detail::bind_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;, boost::system::error_code&gt;(std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;) (1 samples, 1.15%)</title><rect x="261.0" y="1093" width="9.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="264.03" y="1103.5" ></text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;::operator()() (17 samples, 19.54%)</title><rect x="117.6" y="1141" width="152.4" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="120.59" y="1151.5" >boost::asio::detail..</text>
</g>
<g >
<title>timerfd_settime (1 samples, 1.15%)</title><rect x="601.7" y="565" width="9.0" height="15.0" fill="rgb(236,148,34)" rx="2" ry="2" />
<text  x="604.72" y="575.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::set_timer(long, std::function&lt;void (std::error_code const&amp;)&gt;) (2 samples, 2.30%)</title><rect x="171.4" y="565" width="17.9" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="174.38" y="575.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;) (16 samples, 18.39%)</title><rect x="117.6" y="981" width="143.4" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="120.59" y="991.5" >void boost_asio_ha..</text>
</g>
<g >
<title>boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::operator()(boost::system::error_code const&amp;, unsigned long, int) (1 samples, 1.15%)</title><rect x="153.4" y="213" width="9.0" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="156.45" y="223.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (6 samples, 6.90%)</title><rect x="628.6" y="1269" width="53.8" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="631.62" y="1279.5" >boost..</text>
</g>
<g >
<title>[unknown] (2 samples, 2.30%)</title><rect x="19.0" y="1525" width="17.9" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="21.97" y="1535.5" ></text>
</g>
<g >
<title>boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::basic_waitable_timer&lt;boost::asio::io_context&gt;(boost::asio::io_context&amp;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; const&amp;, std::enable_if&lt;std::is_convertible&lt;boost::asio::io_context&amp;, boost::asio::execution_context&amp;&gt;::value, void&gt;::type*) (1 samples, 1.15%)</title><rect x="180.3" y="549" width="9.0" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="183.34" y="559.5" ></text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;::operator()() (2 samples, 2.30%)</title><rect x="664.5" y="1173" width="17.9" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="667.48" y="1183.5" ></text>
</g>
<g >
<title>auto boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::async_wait&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="171.4" y="549" width="8.9" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="174.38" y="559.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt; &gt;::_M_manager(std::_Any_data&amp;, std::_Any_data const&amp;, std::_Manager_operation) (2 samples, 2.30%)</title><rect x="646.6" y="1109" width="17.9" height="15.0" fill="rgb(251,146,50)" rx="2" ry="2" />
<text  x="649.55" y="1119.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code)&gt;::initiate&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&gt;(boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="171.4" y="517" width="8.9" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="174.38" y="527.5" ></text>
</g>
<g >
<title>auto boost::asio::io_context::strand::dispatch&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;) (22 samples, 25.29%)</title><rect x="287.9" y="1077" width="197.3" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="290.93" y="1087.5" >auto boost::asio::io_cont..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider() (1 samples, 1.15%)</title><rect x="314.8" y="677" width="9.0" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="317.83" y="687.5" ></text>
</g>
<g >
<title>__libc_free (1 samples, 1.15%)</title><rect x="772.1" y="1541" width="8.9" height="15.0" fill="rgb(246,154,46)" rx="2" ry="2" />
<text  x="775.07" y="1551.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;::binder1(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;&amp;) (2 samples, 2.30%)</title><rect x="682.4" y="1333" width="17.9" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="685.41" y="1343.5" ></text>
</g>
<g >
<title>recv (1 samples, 1.15%)</title><rect x="153.4" y="37" width="9.0" height="15.0" fill="rgb(237,178,35)" rx="2" ry="2" />
<text  x="156.45" y="47.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler::do_run_one(boost::asio::detail::conditionally_enabled_mutex::scoped_lock&amp;, boost::asio::detail::scheduler_thread_info&amp;, boost::system::error_code const&amp;) (75 samples, 86.21%)</title><rect x="45.9" y="1445" width="672.4" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="48.86" y="1455.5" >boost::asio::detail::scheduler::do_run_one(boost::asio::detail::conditionally_enabled_mutex:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;) (1 samples, 1.15%)</title><rect x="440.3" y="693" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="443.34" y="703.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;), websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;) (15 samples, 17.24%)</title><rect x="126.6" y="885" width="134.4" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="129.55" y="895.5" >void std::__invo..</text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::get_shared() (1 samples, 1.15%)</title><rect x="341.7" y="693" width="9.0" height="15.0" fill="rgb(242,141,41)" rx="2" ry="2" />
<text  x="344.72" y="703.5" ></text>
</g>
<g >
<title>void boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait::operator()&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) const (1 samples, 1.15%)</title><rect x="601.7" y="613" width="9.0" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="604.72" y="623.5" ></text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;*) (11 samples, 12.64%)</title><rect x="512.1" y="1189" width="98.6" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="515.07" y="1199.5" >void boost:..</text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_accept_op_base&lt;boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::ip::tcp&gt;::do_perform(boost::asio::detail::reactor_op*) (2 samples, 2.30%)</title><rect x="72.8" y="1365" width="17.9" height="15.0" fill="rgb(240,151,39)" rx="2" ry="2" />
<text  x="75.76" y="1375.5" ></text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt;::tuple(std::tuple&lt;std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="512.1" y="773" width="8.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="515.07" y="783.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;*, (__gnu_cxx::_Lock_policy)2&gt;::_M_dispose() (1 samples, 1.15%)</title><rect x="655.5" y="629" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="658.52" y="639.5" ></text>
</g>
<g >
<title>boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::operator()(boost::system::error_code const&amp;, unsigned long, int) (1 samples, 1.15%)</title><rect x="485.2" y="1125" width="8.9" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="488.17" y="1135.5" ></text>
</g>
<g >
<title>bool std::lexicographical_compare&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, websocketpp::utility::ci_less::nocase_compare&gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, websocketpp::utility::ci_less::nocase_compare) (1 samples, 1.15%)</title><rect x="530.0" y="613" width="9.0" height="15.0" fill="rgb(246,151,46)" rx="2" ry="2" />
<text  x="533.00" y="623.5" ></text>
</g>
<g >
<title>websocketpp::http::parser::request::consume(char const*, unsigned long) (4 samples, 4.60%)</title><rect x="440.3" y="709" width="35.9" height="15.0" fill="rgb(247,141,46)" rx="2" ry="2" />
<text  x="443.34" y="719.5" >web..</text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::tuple(std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;&amp;&amp;) (2 samples, 2.30%)</title><rect x="628.6" y="1221" width="18.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="631.62" y="1231.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::function&lt;void (std::error_code const&amp;)&gt;, false&gt;::_Head_base(std::_Head_base&lt;1ul, std::function&lt;void (std::error_code const&amp;)&gt;, false&gt; const&amp;) (1 samples, 1.15%)</title><rect x="270.0" y="1237" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="273.00" y="1247.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;) (1 samples, 1.15%)</title><rect x="556.9" y="661" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="559.90" y="671.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="350.7" y="645" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="353.69" y="655.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_accept_op_base&lt;boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::ip::tcp&gt;::do_perform(boost::asio::detail::reactor_op*) (1 samples, 1.15%)</title><rect x="252.1" y="565" width="8.9" height="15.0" fill="rgb(240,151,39)" rx="2" ry="2" />
<text  x="255.07" y="575.5" ></text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, ...) (2 samples, 2.30%)</title><rect x="664.5" y="1189" width="17.9" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="667.48" y="1199.5" ></text>
</g>
<g >
<title>boost::asio::detail::completion_handler&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, boost::asio::io_context::basic_executor_type&lt;std::allocator&lt;void&gt;, 0u&gt; &gt;::do_complete(void*, boost::asio::detail::scheduler_operation*, boost::system::error_code const&amp;, unsigned long) (11 samples, 12.64%)</title><rect x="512.1" y="1237" width="98.6" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="515.07" y="1247.5" >boost::asio..</text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;::~_Bind() (2 samples, 2.30%)</title><rect x="646.6" y="1237" width="17.9" height="15.0" fill="rgb(242,146,41)" rx="2" ry="2" />
<text  x="649.55" y="1247.5" ></text>
</g>
<g >
<title>bool boost::asio::detail::posix_event::maybe_unlock_and_signal_one&lt;boost::asio::detail::conditionally_enabled_mutex::scoped_lock&gt;(boost::asio::detail::conditionally_enabled_mutex::scoped_lock&amp;) (1 samples, 1.15%)</title><rect x="63.8" y="1397" width="9.0" height="15.0" fill="rgb(240,151,38)" rx="2" ry="2" />
<text  x="66.79" y="1407.5" ></text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;) (24 samples, 27.59%)</title><rect x="287.9" y="1253" width="215.2" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="290.93" y="1263.5" >void boost::asio::detail::st..</text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::get_remote_endpoint[abi:cxx11]() const (2 samples, 2.30%)</title><rect x="539.0" y="693" width="17.9" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="541.97" y="703.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (2 samples, 2.30%)</title><rect x="646.6" y="1173" width="17.9" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="649.55" y="1183.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;::operator()() (11 samples, 12.64%)</title><rect x="512.1" y="1125" width="98.6" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="515.07" y="1135.5" >boost::asio..</text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;) (17 samples, 19.54%)</title><rect x="117.6" y="1173" width="152.4" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="120.59" y="1183.5" >void boost_asio_han..</text>
</g>
<g >
<title>std::tuple&lt;std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~tuple() (2 samples, 2.30%)</title><rect x="646.6" y="1061" width="17.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="649.55" y="1071.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactor_op::perform() (1 samples, 1.15%)</title><rect x="153.4" y="85" width="9.0" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="156.45" y="95.5" ></text>
</g>
<g >
<title>void boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_receive::operator()&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::asio::mutable_buffers_1&gt;(boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;, boost::asio::mutable_buffers_1 const&amp;, int) const (1 samples, 1.15%)</title><rect x="153.4" y="149" width="9.0" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="156.45" y="159.5" ></text>
</g>
<g >
<title>__close (1 samples, 1.15%)</title><rect x="655.5" y="549" width="9.0" height="15.0" fill="rgb(245,144,44)" rx="2" ry="2" />
<text  x="658.52" y="559.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, void&gt;::complete&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (19 samples, 21.84%)</title><rect x="108.6" y="1365" width="170.4" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="111.62" y="1375.5" >void boost::asio::deta..</text>
</g>
<g >
<title>std::_Head_base&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, false&gt;::_Head_base(std::_Head_base&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, false&gt; const&amp;) (1 samples, 1.15%)</title><rect x="673.4" y="1013" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="676.45" y="1023.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;) (16 samples, 18.39%)</title><rect x="117.6" y="1013" width="143.4" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="120.59" y="1023.5" >void boost_asio_ha..</text>
</g>
<g >
<title>websocketpp::utility::ci_less::nocase_compare::operator()(unsigned char const&amp;, unsigned char const&amp;) const (1 samples, 1.15%)</title><rect x="458.3" y="549" width="8.9" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="461.28" y="559.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt; &gt;::_M_destroy(std::_Any_data&amp;, std::integral_constant&lt;bool, false&gt;) (2 samples, 2.30%)</title><rect x="646.6" y="1093" width="17.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="649.55" y="1103.5" ></text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;, boost::asio::io_context::strand*) const (11 samples, 12.64%)</title><rect x="512.1" y="1269" width="98.6" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="515.07" y="1279.5" >void boost:..</text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::operator()(std::error_code const&amp;) const (7 samples, 8.05%)</title><rect x="126.6" y="693" width="62.7" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="129.55" y="703.5" >std::f..</text>
</g>
<g >
<title>auto boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::async_wait&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="162.4" y="293" width="9.0" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="165.41" y="303.5" ></text>
</g>
<g >
<title>std::_Placeholder&lt;1&gt;&amp; std::__get_helper&lt;2ul, std::_Placeholder&lt;1&gt;&gt;(std::_Tuple_impl&lt;2ul, std::_Placeholder&lt;1&gt;&gt;&amp;) (1 samples, 1.15%)</title><rect x="117.6" y="901" width="9.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="120.59" y="911.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::set_status(websocketpp::http::status_code::value) (1 samples, 1.15%)</title><rect x="305.9" y="645" width="8.9" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="308.86" y="655.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 1.15%)</title><rect x="718.3" y="1493" width="8.9" height="15.0" fill="rgb(242,180,40)" rx="2" ry="2" />
<text  x="721.28" y="1503.5" ></text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, ...) (11 samples, 12.64%)</title><rect x="512.1" y="1157" width="98.6" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="515.07" y="1167.5" >void boost:..</text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;) (16 samples, 18.39%)</title><rect x="117.6" y="1029" width="143.4" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="120.59" y="1039.5" >void boost::asio::..</text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_send_op_base&lt;boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; &gt;::do_perform(boost::asio::detail::reactor_op*) (7 samples, 8.05%)</title><rect x="368.6" y="453" width="62.8" height="15.0" fill="rgb(240,151,39)" rx="2" ry="2" />
<text  x="371.62" y="463.5" >boost:..</text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::destroy(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;) (1 samples, 1.15%)</title><rect x="655.5" y="565" width="9.0" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="658.52" y="575.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="673.4" y="917" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="676.45" y="927.5" ></text>
</g>
<g >
<title>void boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::async_wait&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;(boost::asio::detail::deadline_timer_service&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::implementation_type&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="162.4" y="229" width="9.0" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="165.41" y="239.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt;, void&gt;(websocketpp::message_buffer::alloc::con_msg_manager&lt;websocketpp::message_buffer::message&lt;websocketpp::message_buffer::alloc::con_msg_manager&gt; &gt;*) (1 samples, 1.15%)</title><rect x="207.2" y="533" width="9.0" height="15.0" fill="rgb(241,146,40)" rx="2" ry="2" />
<text  x="210.24" y="543.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 1.15%)</title><rect x="162.4" y="181" width="9.0" height="15.0" fill="rgb(240,158,39)" rx="2" ry="2" />
<text  x="165.41" y="191.5" ></text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;::rewrapped_handler(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; const&amp;) (2 samples, 2.30%)</title><rect x="682.4" y="1349" width="17.9" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="685.41" y="1359.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::operator()(std::error_code const&amp;) const (4 samples, 4.60%)</title><rect x="135.5" y="549" width="35.9" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="138.52" y="559.5" >std..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt; &gt;::allocate(unsigned long, void const*) (1 samples, 1.15%)</title><rect x="216.2" y="421" width="9.0" height="15.0" fill="rgb(237,132,36)" rx="2" ry="2" />
<text  x="219.21" y="431.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::get_timeout(itimerspec&amp;) (1 samples, 1.15%)</title><rect x="171.4" y="437" width="8.9" height="15.0" fill="rgb(245,151,44)" rx="2" ry="2" />
<text  x="174.38" y="447.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, void ()&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;::type, void ()&gt;::initiate((declval&lt;boost::asio::io_context::strand::initiate_dispatch&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::io_context::strand*&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, void (), boost::asio::io_context::strand::initiate_dispatch, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, boost::asio::io_context::strand*&amp;&amp;) (1 samples, 1.15%)</title><rect x="664.5" y="1109" width="8.9" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="667.48" y="1119.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::do_assign(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, int, int const&amp;, boost::system::error_code&amp;) (1 samples, 1.15%)</title><rect x="99.7" y="1317" width="8.9" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="102.66" y="1327.5" ></text>
</g>
<g >
<title>std::mutex::lock() (1 samples, 1.15%)</title><rect x="225.2" y="501" width="8.9" height="15.0" fill="rgb(237,146,36)" rx="2" ry="2" />
<text  x="228.17" y="511.5" ></text>
</g>
<g >
<title>non-virtual thunk to std::__cxx11::basic_stringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_stringstream() (1 samples, 1.15%)</title><rect x="718.3" y="1525" width="8.9" height="15.0" fill="rgb(244,218,43)" rx="2" ry="2" />
<text  x="721.28" y="1535.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_release() (2 samples, 2.30%)</title><rect x="646.6" y="805" width="17.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="649.55" y="815.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (12 samples, 13.79%)</title><rect x="503.1" y="1349" width="107.6" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="506.10" y="1359.5" >void boost_as..</text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;) (11 samples, 12.64%)</title><rect x="512.1" y="997" width="98.6" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="515.07" y="1007.5" >void boost_..</text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;, boost::asio::io_context::strand*) const (18 samples, 20.69%)</title><rect x="108.6" y="1269" width="161.4" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="111.62" y="1279.5" >void boost::asio::io..</text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::error_code const&amp;, unsigned long)&gt;::__call&lt;void, std::error_code const&amp;, unsigned long&amp;&amp;, 0ul, 1ul, 2ul&gt;(std::tuple&lt;std::error_code const&amp;, unsigned long&amp;&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul&gt;) (22 samples, 25.29%)</title><rect x="287.9" y="773" width="197.3" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="290.93" y="783.5" >void std::_Bind&lt;void (web..</text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::error_code const&amp;) (4 samples, 4.60%)</title><rect x="135.5" y="469" width="35.9" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="138.52" y="479.5" >voi..</text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code)&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::type, void (boost::system::error_code)&gt;::initiate((declval&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code), boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&gt;(boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (1 samples, 1.15%)</title><rect x="171.4" y="533" width="8.9" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="174.38" y="543.5" ></text>
</g>
<g >
<title>websocketpp::server&lt;websocketpp::config::asio&gt;::handle_accept(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;) (15 samples, 17.24%)</title><rect x="126.6" y="757" width="134.4" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="129.55" y="767.5" >websocketpp::ser..</text>
</g>
<g >
<title>std::_Vector_base&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl() (1 samples, 1.15%)</title><rect x="646.6" y="709" width="8.9" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="649.55" y="719.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::function(std::function&lt;void (std::error_code const&amp;)&gt;&amp;&amp;) (2 samples, 2.30%)</title><rect x="628.6" y="1141" width="18.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="631.62" y="1151.5" ></text>
</g>
<g >
<title>boost::asio::detail::socket_ops::accept(int, sockaddr*, unsigned long*, boost::system::error_code&amp;) (2 samples, 2.30%)</title><rect x="72.8" y="1333" width="17.9" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="75.76" y="1343.5" ></text>
</g>
<g >
<title>websocketpp::http::parser::parser::prepare_body() (1 samples, 1.15%)</title><rect x="458.3" y="693" width="8.9" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="461.28" y="703.5" ></text>
</g>
<g >
<title>boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::assign(boost::asio::ip::tcp const&amp;, int const&amp;, boost::system::error_code&amp;) (1 samples, 1.15%)</title><rect x="99.7" y="1349" width="8.9" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="102.66" y="1359.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;&gt;::type std::__invoke&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;&gt;(void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, boost::system::error_code&amp;, unsigned long&amp;) (11 samples, 12.64%)</title><rect x="512.1" y="869" width="98.6" height="15.0" fill="rgb(242,146,41)" rx="2" ry="2" />
<text  x="515.07" y="879.5" >std::__invo..</text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;&amp;, boost::asio::io_context::strand*) const (22 samples, 25.29%)</title><rect x="287.9" y="1029" width="197.3" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="290.93" y="1039.5" >void boost::asio::io_cont..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;1ul, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="673.4" y="1045" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="676.45" y="1055.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::weak_ptr&lt;void&gt;)&gt;::operator()(std::weak_ptr&lt;void&gt;) const (1 samples, 1.15%)</title><rect x="305.9" y="693" width="8.9" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="308.86" y="703.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, false&gt;::_Head_base(std::_Head_base&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, false&gt; const&amp;) (1 samples, 1.15%)</title><rect x="512.1" y="741" width="8.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="515.07" y="751.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create(unsigned long&amp;, unsigned long) (1 samples, 1.15%)</title><rect x="556.9" y="597" width="9.0" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="559.90" y="607.5" ></text>
</g>
<g >
<title>boost::asio::detail::handler_work&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, void&gt;::~handler_work() (1 samples, 1.15%)</title><rect x="610.7" y="1397" width="9.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="613.69" y="1407.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;::operator()() (11 samples, 12.64%)</title><rect x="512.1" y="933" width="98.6" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="515.07" y="943.5" >boost::asio..</text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;::shared_ptr&lt;std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, bool const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt;&amp;, std::reference_wrapper&lt;websocketpp::random::none::int_generator&lt;unsigned int&gt; &gt; &gt;(std::_Sp_make_shared_tag, std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt; const&amp;, bool const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt;&amp;, std::reference_wrapper&lt;websocketpp::random::none::int_generator&lt;unsigned int&gt; &gt;&amp;&amp;) (4 samples, 4.60%)</title><rect x="207.2" y="661" width="35.9" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="210.24" y="671.5" >std..</text>
</g>
<g >
<title>void boost::asio::io_context::strand::initiate_dispatch::operator()&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;&amp;, boost::asio::io_context::strand*) const (24 samples, 27.59%)</title><rect x="287.9" y="1269" width="215.2" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="290.93" y="1279.5" >void boost::asio::io_context..</text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::get_shared() (1 samples, 1.15%)</title><rect x="341.7" y="677" width="9.0" height="15.0" fill="rgb(242,141,41)" rx="2" ry="2" />
<text  x="344.72" y="687.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;&gt;(int, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;, boost::system::error_code const&amp;) (1 samples, 1.15%)</title><rect x="261.0" y="1077" width="9.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="264.03" y="1087.5" ></text>
</g>
<g >
<title>_ZZ4mainENKUlT_E_clISt8weak_ptrIvEEEDaS_ (1 samples, 1.15%)</title><rect x="305.9" y="661" width="8.9" height="15.0" fill="rgb(239,160,37)" rx="2" ry="2" />
<text  x="308.86" y="671.5" ></text>
</g>
<g >
<title>boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;::~any_executor() (1 samples, 1.15%)</title><rect x="610.7" y="1365" width="9.0" height="15.0" fill="rgb(241,151,40)" rx="2" ry="2" />
<text  x="613.69" y="1375.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;void (*&amp;)(std::_Any_data const&amp;, std::error_code const&amp;)&gt;::type&amp;&amp; std::move&lt;void (*&amp;)(std::_Any_data const&amp;, std::error_code const&amp;)&gt;(void (*&amp;)(std::_Any_data const&amp;, std::error_code const&amp;)) (1 samples, 1.15%)</title><rect x="637.6" y="1109" width="9.0" height="15.0" fill="rgb(243,146,41)" rx="2" ry="2" />
<text  x="640.59" y="1119.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp; std::forward&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;(std::remove_reference&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt;::type&amp;) (1 samples, 1.15%)</title><rect x="198.3" y="661" width="8.9" height="15.0" fill="rgb(244,146,43)" rx="2" ry="2" />
<text  x="201.28" y="671.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt;::__call&lt;void, std::error_code const&amp;, 0ul, 1ul&gt;(std::tuple&lt;std::error_code const&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul&gt;) (2 samples, 2.30%)</title><rect x="153.4" y="389" width="18.0" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="156.45" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (std::error_code const&amp;), std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt; &gt;::_M_invoke(std::_Any_data const&amp;, std::error_code const&amp;) (15 samples, 17.24%)</title><rect x="126.6" y="837" width="134.4" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="129.55" y="847.5" >std::_Function_h..</text>
</g>
<g >
<title>std::_Head_base&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, false&gt;::_Head_base&lt;std::function&lt;void (std::error_code const&amp;)&gt; &gt;(std::function&lt;void (std::error_code const&amp;)&gt;&amp;&amp;) (2 samples, 2.30%)</title><rect x="628.6" y="1157" width="18.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="631.62" y="1167.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::_Placeholder&lt;1&gt;))(websocketpp::connection&lt;websocketpp::config::asio&gt;::terminate_status, std::error_code const&amp;)&gt; &gt;::_M_destroy(std::_Any_data&amp;, std::integral_constant&lt;bool, false&gt;) (2 samples, 2.30%)</title><rect x="646.6" y="933" width="17.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="649.55" y="943.5" ></text>
</g>
<g >
<title>websocketpp::error::category::message[abi:cxx11](int) const (1 samples, 1.15%)</title><rect x="556.9" y="677" width="9.0" height="15.0" fill="rgb(237,141,35)" rx="2" ry="2" />
<text  x="559.90" y="687.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;::operator()&lt;boost::system::error_code&amp;, unsigned long&amp;, void&gt;(boost::system::error_code&amp;, unsigned long&amp;) (11 samples, 12.64%)</title><rect x="512.1" y="901" width="98.6" height="15.0" fill="rgb(242,131,41)" rx="2" ry="2" />
<text  x="515.07" y="911.5" >void std::_..</text>
</g>
<g >
<title>boost::asio::detail::reactor_op::perform() (7 samples, 8.05%)</title><rect x="368.6" y="469" width="62.8" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="371.62" y="479.5" >boost:..</text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::init(std::function&lt;void (std::error_code const&amp;)&gt;) (7 samples, 8.05%)</title><rect x="126.6" y="725" width="62.7" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="129.55" y="735.5" >websoc..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_lower_bound(std::_Rb_tree_node&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; const*, std::_Rb_tree_node_base const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 1.15%)</title><rect x="458.3" y="629" width="8.9" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="461.28" y="639.5" ></text>
</g>
<g >
<title>void boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait::operator()&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) const (1 samples, 1.15%)</title><rect x="171.4" y="501" width="8.9" height="15.0" fill="rgb(237,131,35)" rx="2" ry="2" />
<text  x="174.38" y="511.5" ></text>
</g>
<g >
<title>void boost::asio::detail::handler_work&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, void&gt;::complete&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (9 samples, 10.34%)</title><rect x="619.7" y="1397" width="80.6" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="622.66" y="1407.5" >void boos..</text>
</g>
<g >
<title>void boost::asio::detail::epoll_reactor::schedule_timer&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;(boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;&amp;, boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt;::time_type const&amp;, boost::asio::detail::timer_queue&lt;boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt; &gt;::per_timer_data&amp;, boost::asio::detail::wait_op*) (1 samples, 1.15%)</title><rect x="601.7" y="581" width="9.0" height="15.0" fill="rgb(240,131,39)" rx="2" ry="2" />
<text  x="604.72" y="591.5" ></text>
</g>
<g >
<title>boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;::operator()() (16 samples, 18.39%)</title><rect x="117.6" y="949" width="143.4" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="120.59" y="959.5" >boost::asio::detai..</text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;*) (9 samples, 10.34%)</title><rect x="619.7" y="1365" width="80.6" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="622.66" y="1375.5" >void boos..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(char const*, std::allocator&lt;char&gt; const&amp;) (1 samples, 1.15%)</title><rect x="521.0" y="693" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="524.03" y="703.5" ></text>
</g>
<g >
<title>boost::asio::detail::conditionally_enabled_event::maybe_unlock_and_signal_one(boost::asio::detail::conditionally_enabled_mutex::scoped_lock&amp;) (1 samples, 1.15%)</title><rect x="63.8" y="1413" width="9.0" height="15.0" fill="rgb(240,151,38)" rx="2" ry="2" />
<text  x="66.79" y="1423.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (2 samples, 2.30%)</title><rect x="646.6" y="1045" width="17.9" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="649.55" y="1055.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::start_op(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, int, boost::asio::detail::reactor_op*, bool, bool, bool) (8 samples, 9.20%)</title><rect x="359.7" y="501" width="71.7" height="15.0" fill="rgb(241,151,39)" rx="2" ry="2" />
<text  x="362.66" y="511.5" >boost::a..</text>
</g>
<g >
<title>websocketpp::endpoint&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, websocketpp::config::asio&gt;::create_connection() (5 samples, 5.75%)</title><rect x="198.3" y="709" width="44.8" height="15.0" fill="rgb(244,141,43)" rx="2" ry="2" />
<text  x="201.28" y="719.5" >webs..</text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::function&lt;std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt;, void, void&gt;(std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt;) (1 samples, 1.15%)</title><rect x="189.3" y="725" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="192.31" y="735.5" ></text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::function(std::function&lt;void (std::error_code const&amp;)&gt; const&amp;) (1 samples, 1.15%)</title><rect x="512.1" y="837" width="8.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="515.07" y="847.5" ></text>
</g>
<g >
<title>websocketpp::http::parser::request::process(__gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;) (1 samples, 1.15%)</title><rect x="467.2" y="693" width="9.0" height="15.0" fill="rgb(239,141,38)" rx="2" ry="2" />
<text  x="470.24" y="703.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt;::_Bind(std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt; const&amp;) (1 samples, 1.15%)</title><rect x="673.4" y="949" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="676.45" y="959.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactive_socket_service_base::start_accept_op(boost::asio::detail::reactive_socket_service_base::base_implementation_type&amp;, boost::asio::detail::reactor_op*, bool, bool) (2 samples, 2.30%)</title><rect x="243.1" y="629" width="17.9" height="15.0" fill="rgb(241,151,39)" rx="2" ry="2" />
<text  x="246.10" y="639.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="512.1" y="757" width="8.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="515.07" y="767.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;&amp;) (11 samples, 12.64%)</title><rect x="512.1" y="1173" width="98.6" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="515.07" y="1183.5" >void boost_..</text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::uri&gt; std::make_shared&lt;websocketpp::uri, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="323.8" y="677" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="326.79" y="687.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;&amp;) (2 samples, 2.30%)</title><rect x="664.5" y="1205" width="17.9" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="667.48" y="1215.5" ></text>
</g>
<g >
<title>websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::handle_async_write(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long) (10 samples, 11.49%)</title><rect x="521.0" y="837" width="89.7" height="15.0" fill="rgb(247,141,46)" rx="2" ry="2" />
<text  x="524.03" y="847.5" >websocketp..</text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; std::__lc_rai&lt;std::random_access_iterator_tag, std::random_access_iterator_tag&gt;::__newlast1&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;) (1 samples, 1.15%)</title><rect x="530.0" y="581" width="9.0" height="15.0" fill="rgb(239,132,38)" rx="2" ry="2" />
<text  x="533.00" y="591.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code)&gt;::initiate&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&gt;(boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="162.4" y="261" width="9.0" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="165.41" y="271.5" ></text>
</g>
<g >
<title>boost::asio::execution::detail::any_executor_base::any_executor_base(boost::asio::execution::detail::any_executor_base&amp;&amp;) (1 samples, 1.15%)</title><rect x="90.7" y="1333" width="9.0" height="15.0" fill="rgb(246,151,45)" rx="2" ry="2" />
<text  x="93.69" y="1343.5" ></text>
</g>
<g >
<title>void boost::asio::detail::strand_service::dispatch&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::strand_service::strand_impl*&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;) (1 samples, 1.15%)</title><rect x="664.5" y="1061" width="8.9" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="667.48" y="1071.5" ></text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, ...) (11 samples, 12.64%)</title><rect x="512.1" y="949" width="98.6" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="515.07" y="959.5" >void boost:..</text>
</g>
<g >
<title>boost::asio::detail::handler_work_base&lt;boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, void, boost::asio::io_context, boost::asio::executor, void&gt;::~handler_work_base() (1 samples, 1.15%)</title><rect x="610.7" y="1381" width="9.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="613.69" y="1391.5" ></text>
</g>
<g >
<title>long boost::asio::detail::chrono_time_traits&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt; &gt;::posix_time_duration::duration_cast&lt;1l, 1000000l&gt;() const (1 samples, 1.15%)</title><rect x="171.4" y="373" width="8.9" height="15.0" fill="rgb(237,154,35)" rx="2" ry="2" />
<text  x="174.38" y="383.5" ></text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::update_timeout() (1 samples, 1.15%)</title><rect x="171.4" y="453" width="8.9" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="174.38" y="463.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;::operator()&lt;boost::system::error_code&amp;, unsigned long&amp;, void&gt;(boost::system::error_code&amp;, unsigned long&amp;) (22 samples, 25.29%)</title><rect x="287.9" y="901" width="197.3" height="15.0" fill="rgb(242,131,41)" rx="2" ry="2" />
<text  x="290.93" y="911.5" >void std::_Bind&lt;void (web..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_Tuple_impl(std::_Tuple_impl&lt;0ul, websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="270.0" y="1269" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="273.00" y="1279.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, (__gnu_cxx::_Lock_policy)2&gt;::__shared_ptr&lt;std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&gt;(std::_Sp_make_shared_tag, std::allocator&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="216.2" y="485" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="219.21" y="495.5" ></text>
</g>
<g >
<title>boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;::rewrapped_handler(boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;&amp;, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; const&amp;) (1 samples, 1.15%)</title><rect x="270.0" y="1317" width="9.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="273.00" y="1327.5" ></text>
</g>
<g >
<title>boost::asio::detail::keyword_tss_ptr&lt;boost::asio::detail::call_stack&lt;boost::asio::detail::strand_service::strand_impl, unsigned char&gt;::context&gt;::operator boost::asio::detail::call_stack&lt;boost::asio::detail::strand_service::strand_impl, unsigned char&gt;::context*() const (1 samples, 1.15%)</title><rect x="494.1" y="1237" width="9.0" height="15.0" fill="rgb(237,151,35)" rx="2" ry="2" />
<text  x="497.14" y="1247.5" ></text>
</g>
<g >
<title>bool std::__lexicographical_compare_impl&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;websocketpp::utility::ci_less::nocase_compare&gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;websocketpp::utility::ci_less::nocase_compare&gt;) (1 samples, 1.15%)</title><rect x="530.0" y="597" width="9.0" height="15.0" fill="rgb(242,151,40)" rx="2" ry="2" />
<text  x="533.00" y="607.5" ></text>
</g>
<g >
<title>bool __gnu_cxx::__ops::_Iter_comp_iter&lt;websocketpp::utility::ci_less::nocase_compare&gt;::operator()&lt;__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;(__gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;char const*, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;) (1 samples, 1.15%)</title><rect x="458.3" y="565" width="8.9" height="15.0" fill="rgb(239,151,38)" rx="2" ry="2" />
<text  x="461.28" y="575.5" ></text>
</g>
<g >
<title>boost::asio::detail::reactor_op::perform() (1 samples, 1.15%)</title><rect x="252.1" y="581" width="8.9" height="15.0" fill="rgb(244,151,43)" rx="2" ry="2" />
<text  x="255.07" y="591.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::_M_tail(std::_Tuple_impl&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;&amp;) (1 samples, 1.15%)</title><rect x="682.4" y="1253" width="9.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="685.41" y="1263.5" ></text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, ...) (22 samples, 25.29%)</title><rect x="287.9" y="949" width="197.3" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="290.93" y="959.5" >void boost::asio::asio_ha..</text>
</g>
<g >
<title>std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt; &gt;::_M_head(std::_Tuple_impl&lt;1ul, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt; &gt;&amp;) (1 samples, 1.15%)</title><rect x="476.2" y="725" width="9.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="479.21" y="735.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt;::operator()&lt;std::error_code const&amp;, void&gt;(std::error_code const&amp;) (2 samples, 2.30%)</title><rect x="153.4" y="405" width="18.0" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="156.45" y="415.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;(boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder2&lt;boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt; &gt;&amp;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;&amp;) (23 samples, 26.44%)</title><rect x="287.9" y="1173" width="206.2" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="290.93" y="1183.5" >void boost_asio_handler_inv..</text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;::function&lt;std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt;, void, void&gt;(std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt;) (1 samples, 1.15%)</title><rect x="332.8" y="693" width="8.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="335.76" y="703.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::operator=(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="350.7" y="677" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="353.69" y="687.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void (std::error_code const&amp;), std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, std::error_code const&amp;)&gt; &gt;::_M_invoke(std::_Any_data const&amp;, std::error_code const&amp;) (7 samples, 8.05%)</title><rect x="126.6" y="677" width="62.7" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="129.55" y="687.5" >std::_..</text>
</g>
<g >
<title>std::_Bind_helper&lt;std::__or_&lt;std::is_integral&lt;std::decay&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;::type&gt;, std::is_enum&lt;std::decay&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;::type&gt; &gt;::value, void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;, std::_Placeholder&lt;2&gt; const&amp;&gt;::type std::bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;, std::_Placeholder&lt;2&gt; const&amp;&gt;(void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*&amp;&amp;)(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;&amp;&amp;, std::function&lt;void (std::error_code const&amp;)&gt;&amp;, std::_Placeholder&lt;1&gt; const&amp;, std::_Placeholder&lt;2&gt; const&amp;) (1 samples, 1.15%)</title><rect x="431.4" y="677" width="8.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="434.38" y="687.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::server&lt;websocketpp::config::asio&gt;::*(websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;)&gt;::__call&lt;void, std::error_code const&amp;, 0ul, 1ul, 2ul&gt;(std::tuple&lt;std::error_code const&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul&gt;) (15 samples, 17.24%)</title><rect x="126.6" y="805" width="134.4" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="129.55" y="815.5" >void std::_Bind&lt;..</text>
</g>
<g >
<title>std::_Head_base&lt;1ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, false&gt;::_Head_base(std::_Head_base&lt;1ul, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, false&gt; const&amp;) (1 samples, 1.15%)</title><rect x="270.0" y="1109" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="273.00" y="1119.5" ></text>
</g>
<g >
<title>std::__weak_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::_M_get_use_count() const (1 samples, 1.15%)</title><rect x="207.2" y="469" width="9.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="210.24" y="479.5" ></text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (16 samples, 18.39%)</title><rect x="117.6" y="1061" width="143.4" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="120.59" y="1071.5" >void boost::asio::..</text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 1.15%)</title><rect x="530.0" y="661" width="9.0" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="533.00" y="671.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, void (boost::system::error_code, unsigned long)&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt; &gt;::type, void (boost::system::error_code, unsigned long)&gt;::initiate((declval&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_send&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;&gt;)(), (declval&lt;int&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;, void (boost::system::error_code, unsigned long), boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_send, boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;, int&gt;(boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_send&amp;&amp;, boost::asio::detail::write_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt;, __gnu_cxx::__normal_iterator&lt;boost::asio::const_buffer const*, std::vector&lt;boost::asio::const_buffer, std::allocator&lt;boost::asio::const_buffer&gt; &gt; &gt;, boost::asio::detail::transfer_all_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;, boost::asio::detail::prepared_buffers&lt;boost::asio::const_buffer, 64ul&gt; const&amp;, int&amp;&amp;) (8 samples, 9.20%)</title><rect x="359.7" y="565" width="71.7" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="362.66" y="575.5" >std::ena..</text>
</g>
<g >
<title>std::__shared_count&lt;(__gnu_cxx::_Lock_policy)2&gt;::__shared_count&lt;websocketpp::uri, std::allocator&lt;websocketpp::uri&gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;&gt;(std::_Sp_make_shared_tag, websocketpp::uri*, std::allocator&lt;websocketpp::uri&gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="323.8" y="629" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="326.79" y="639.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code)&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::type, void (boost::system::error_code)&gt;::initiate((declval&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code), boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&gt;(boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (1 samples, 1.15%)</title><rect x="162.4" y="277" width="9.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="165.41" y="287.5" ></text>
</g>
<g >
<title>boost::asio::detail::scheduler_operation::complete(void*, boost::system::error_code const&amp;, unsigned long) (70 samples, 80.46%)</title><rect x="72.8" y="1429" width="627.5" height="15.0" fill="rgb(247,151,46)" rx="2" ry="2" />
<text  x="75.76" y="1439.5" >boost::asio::detail::scheduler_operation::complete(void*, boost::system::error_code co..</text>
</g>
<g >
<title>void boost::asio::detail::asio_handler_invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;*) (22 samples, 25.29%)</title><rect x="287.9" y="981" width="197.3" height="15.0" fill="rgb(241,131,40)" rx="2" ry="2" />
<text  x="290.93" y="991.5" >void boost::asio::detail:..</text>
</g>
<g >
<title>std::function&lt;void (std::error_code const&amp;)&gt;&amp;&amp; std::forward&lt;std::function&lt;void (std::error_code const&amp;)&gt; &gt;(std::remove_reference&lt;std::function&lt;void (std::error_code const&amp;)&gt; &gt;::type&amp;) (1 samples, 1.15%)</title><rect x="691.4" y="1237" width="8.9" height="15.0" fill="rgb(244,146,43)" rx="2" ry="2" />
<text  x="694.38" y="1247.5" ></text>
</g>
<g >
<title>std::__invoke_result&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;::type std::__invoke&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;(void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;) (2 samples, 2.30%)</title><rect x="153.4" y="373" width="18.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="156.45" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::_Select1st&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;, websocketpp::utility::ci_less, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::find(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;) const (1 samples, 1.15%)</title><rect x="458.3" y="645" width="8.9" height="15.0" fill="rgb(237,146,35)" rx="2" ry="2" />
<text  x="461.28" y="655.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy(char*, char const*, unsigned long) (1 samples, 1.15%)</title><rect x="350.7" y="629" width="9.0" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="353.69" y="639.5" ></text>
</g>
<g >
<title>websocketpp::connection&lt;websocketpp::config::asio&gt;::handle_transport_init(std::error_code const&amp;) (2 samples, 2.30%)</title><rect x="153.4" y="341" width="18.0" height="15.0" fill="rgb(242,141,40)" rx="2" ry="2" />
<text  x="156.45" y="351.5" ></text>
</g>
<g >
<title>std::remove_reference&lt;std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt;&amp;&gt;::type&amp;&amp; std::move&lt;std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt;&amp;&gt;(std::_Bind&lt;void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt;))(std::error_code const&amp;)&gt;&amp;) (1 samples, 1.15%)</title><rect x="332.8" y="677" width="8.9" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="335.76" y="687.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::server&lt;websocketpp::config::asio&gt;::*&amp;)(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;), websocketpp::server&lt;websocketpp::config::asio&gt;*&amp;, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;&gt;(std::__invoke_memfun_deref, void (websocketpp::server&lt;websocketpp::config::asio&gt;::*&amp;)(std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::error_code const&amp;), websocketpp::server&lt;websocketpp::config::asio&gt;*&amp;, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;) (15 samples, 17.24%)</title><rect x="126.6" y="773" width="134.4" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="129.55" y="783.5" >void std::__invo..</text>
</g>
<g >
<title>std::_Head_base&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, false&gt;::_Head_base(std::_Head_base&lt;0ul, std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, false&gt; const&amp;) (1 samples, 1.15%)</title><rect x="673.4" y="901" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="676.45" y="911.5" ></text>
</g>
<g >
<title>void boost_asio_handler_invoke_helpers::invoke&lt;boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt; &gt;(boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;, boost::asio::detail::binder2&lt;websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::system::error_code, unsigned long&gt;&amp;) (22 samples, 25.29%)</title><rect x="287.9" y="997" width="197.3" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="290.93" y="1007.5" >void boost_asio_handler_i..</text>
</g>
<g >
<title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn(char const*, long) (1 samples, 1.15%)</title><rect x="727.2" y="1493" width="9.0" height="15.0" fill="rgb(247,146,46)" rx="2" ry="2" />
<text  x="730.24" y="1503.5" ></text>
</g>
<g >
<title>std::tuple&lt;websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt;::tuple(std::tuple&lt;websocketpp::server&lt;websocketpp::config::asio&gt;*, std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, std::_Placeholder&lt;1&gt; &gt; const&amp;) (1 samples, 1.15%)</title><rect x="270.0" y="1157" width="9.0" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="273.00" y="1167.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt; std::allocate_shared&lt;websocketpp::connection&lt;websocketpp::config::asio&gt;, std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;, bool const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt;&amp;, std::reference_wrapper&lt;websocketpp::random::none::int_generator&lt;unsigned int&gt; &gt; &gt;(std::allocator&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt; const&amp;, bool const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt; &gt;&amp;, std::shared_ptr&lt;websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::elevel&gt; &gt;&amp;, std::reference_wrapper&lt;websocketpp::random::none::int_generator&lt;unsigned int&gt; &gt;&amp;&amp;) (5 samples, 5.75%)</title><rect x="198.3" y="677" width="44.8" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="201.28" y="687.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string() (1 samples, 1.15%)</title><rect x="467.2" y="677" width="9.0" height="15.0" fill="rgb(240,146,39)" rx="2" ry="2" />
<text  x="470.24" y="687.5" ></text>
</g>
<g >
<title>void std::__invoke_impl&lt;void, void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;, unsigned long&gt;(std::__invoke_memfun_deref, void (websocketpp::connection&lt;websocketpp::config::asio&gt;::*&amp;)(std::error_code const&amp;, unsigned long), std::shared_ptr&lt;websocketpp::connection&lt;websocketpp::config::asio&gt; &gt;&amp;, std::error_code const&amp;, unsigned long&amp;&amp;) (21 samples, 24.14%)</title><rect x="287.9" y="741" width="188.3" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="290.93" y="751.5" >void std::__invoke_impl&lt;..</text>
</g>
<g >
<title>main (75 samples, 86.21%)</title><rect x="45.9" y="1509" width="672.4" height="15.0" fill="rgb(247,83,46)" rx="2" ry="2" />
<text  x="48.86" y="1519.5" >main</text>
</g>
<g >
<title>auto boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::async_read_some&lt;boost::asio::mutable_buffers_1, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt; &gt;(boost::asio::mutable_buffers_1 const&amp;, boost::asio::detail::read_op&lt;boost::asio::basic_stream_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;, boost::asio::mutable_buffers_1, boost::asio::mutable_buffer const*, boost::asio::detail::transfer_at_least_t, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;, unsigned long)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;&amp;&amp;) (1 samples, 1.15%)</title><rect x="153.4" y="197" width="9.0" height="15.0" fill="rgb(246,112,45)" rx="2" ry="2" />
<text  x="156.45" y="207.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, false&gt;::~_Head_base() (2 samples, 2.30%)</title><rect x="646.6" y="1157" width="17.9" height="15.0" fill="rgb(242,146,40)" rx="2" ry="2" />
<text  x="649.55" y="1167.5" ></text>
</g>
<g >
<title>void boost::asio::asio_handler_invoke&lt;boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt; &gt;(boost::asio::detail::binder1&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::system::error_code&gt;&amp;, ...) (1 samples, 1.15%)</title><rect x="664.5" y="1013" width="8.9" height="15.0" fill="rgb(244,131,42)" rx="2" ry="2" />
<text  x="667.48" y="1023.5" ></text>
</g>
<g >
<title>void std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt;::__call&lt;void, boost::system::error_code&amp;, unsigned long&amp;, 0ul, 1ul, 2ul, 3ul&gt;(std::tuple&lt;boost::system::error_code&amp;, unsigned long&amp;&gt;&amp;&amp;, std::_Index_tuple&lt;0ul, 1ul, 2ul, 3ul&gt;) (11 samples, 12.64%)</title><rect x="512.1" y="885" width="98.6" height="15.0" fill="rgb(245,131,44)" rx="2" ry="2" />
<text  x="515.07" y="895.5" >void std::_..</text>
</g>
<g >
<title>boost::asio::detail::epoll_reactor::start_op(int, int, boost::asio::detail::epoll_reactor::descriptor_state*&amp;, boost::asio::detail::reactor_op*, bool, bool) (2 samples, 2.30%)</title><rect x="243.1" y="597" width="17.9" height="15.0" fill="rgb(241,151,39)" rx="2" ry="2" />
<text  x="246.10" y="607.5" ></text>
</g>
<g >
<title>std::enable_if&lt;boost::asio::detail::async_result_has_initiate_memfn&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code)&gt;::value, decltype (boost::asio::async_result&lt;std::decay&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;::type, void (boost::system::error_code)&gt;::initiate((declval&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&amp;&amp;&gt;)(), (declval&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;&gt;)()))&gt;::type boost::asio::async_initiate&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, void (boost::system::error_code), boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&gt;(boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::initiate_async_wait&amp;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;) (1 samples, 1.15%)</title><rect x="601.7" y="645" width="9.0" height="15.0" fill="rgb(246,146,45)" rx="2" ry="2" />
<text  x="604.72" y="655.5" ></text>
</g>
<g >
<title>void boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, websocketpp::transport::asio::custom_alloc_handler&lt;std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;, std::_Placeholder&lt;2&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;, unsigned long)&gt; &gt;, boost::asio::detail::is_continuation_if_running&gt;::operator()&lt;boost::system::error_code, unsigned long&gt;(boost::system::error_code const&amp;, unsigned long const&amp;) (11 samples, 12.64%)</title><rect x="512.1" y="1093" width="98.6" height="15.0" fill="rgb(242,131,40)" rx="2" ry="2" />
<text  x="515.07" y="1103.5" >void boost:..</text>
</g>
<g >
<title>void boost::asio::async_result&lt;boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, void ()&gt;::initiate&lt;boost::asio::io_context::strand::initiate_dispatch, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;, boost::asio::io_context::strand*&gt;(boost::asio::io_context::strand::initiate_dispatch&amp;&amp;, boost::asio::detail::rewrapped_handler&lt;boost::asio::detail::binder1&lt;boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;, boost::system::error_code&gt;, std::_Bind&lt;void (websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt;::*(std::shared_ptr&lt;websocketpp::transport::asio::connection&lt;websocketpp::config::asio::transport_config&gt; &gt;, std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::shared_ptr&lt;boost::asio::basic_waitable_timer&lt;std::chrono::_V2::steady_clock, boost::asio::wait_traits&lt;std::chrono::_V2::steady_clock&gt;, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt; &gt;, std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt; &gt;&amp;&amp;, boost::asio::io_context::strand*&amp;&amp;) (7 samples, 8.05%)</title><rect x="619.7" y="1317" width="62.7" height="15.0" fill="rgb(246,131,45)" rx="2" ry="2" />
<text  x="622.66" y="1327.5" >void b..</text>
</g>
<g >
<title>auto boost::asio::basic_socket_acceptor&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;::async_accept&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt; &gt;(boost::asio::basic_socket&lt;boost::asio::ip::tcp, boost::asio::execution::any_executor&lt;boost::asio::execution::context_as_t&lt;boost::asio::execution_context&amp;&gt;, boost::asio::execution::detail::blocking::never_t&lt;0&gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::blocking::possibly_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::tracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::outstanding_work::untracked_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::fork_t&lt;0&gt; &gt;, boost::asio::execution::prefer_only&lt;boost::asio::execution::detail::relationship::continuation_t&lt;0&gt; &gt; &gt; &gt;&amp;, boost::asio::detail::wrapped_handler&lt;boost::asio::io_context::strand, std::_Bind&lt;void (websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;::*(websocketpp::transport::asio::endpoint&lt;websocketpp::config::asio::transport_config&gt;*, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt;))(std::function&lt;void (std::error_code const&amp;)&gt;, boost::system::error_code const&amp;)&gt;, boost::asio::detail::is_continuation_if_running&gt;&amp;&amp;, std::enable_if&lt;std::is_convertible&lt;boost::asio::ip::tcp, boost::asio::ip::tcp&gt;::value, void&gt;::type*) (2 samples, 2.30%)</title><rect x="243.1" y="709" width="17.9" height="15.0" fill="rgb(239,112,38)" rx="2" ry="2" />
<text  x="246.10" y="719.5" ></text>
</g>
<g >
<title>websocketpp::log::basic&lt;websocketpp::concurrency::basic, websocketpp::log::alevel&gt;::write(unsigned int, char const*) (1 samples, 1.15%)</title><rect x="225.2" y="533" width="8.9" height="15.0" fill="rgb(237,141,36)" rx="2" ry="2" />
<text  x="228.17" y="543.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;2ul, std::function&lt;void (std::error_code const&amp;)&gt;, std::_Placeholder&lt;1&gt; &gt;::~_Tuple_impl() (2 samples, 2.30%)</title><rect x="646.6" y="1013" width="17.9" height="15.0" fill="rgb(245,146,44)" rx="2" ry="2" />
<text  x="649.55" y="1023.5" ></text>
</g>
</g>
</svg>
